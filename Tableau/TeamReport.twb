<?xml version='1.0' encoding='utf-8' ?>

<workbook version='8.2' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <!-- build 8100.13.1119.2300                -->
  <preferences>
  </preferences>
  <datasources>
    <datasource caption='alliance_table (yes)' inline='true' name='mysql.41703.893065949072' version='8.2'>
      <connection class='mysql' dbname='yes' odbc-native-protocol='yes' port='3306' server='169.254.126.65' username='root'>
        <relation name='alliance_table' table='[alliance_table]' type='table' />
      </connection>
      <column datatype='integer' name='[MATCH_NUM]' role='dimension' type='ordinal'>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='C:\Users\loliv_000\Documents\My Tableau Repository\Datasources\alliance_table (yes).tde' schema='Extract' tablename='Extract' update-time='3/6/2014 3:27:25 AM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='7' timestamp-start='2014-03-06 03:27:25.609000' />
          </refresh>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.497453' measure-ordering='alphabetic' measure-percentage='0.502547' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='team_alliance_cycle' inline='true' name='mysql.41704.895000625002' version='8.2'>
      <connection class='mysql' dbname='yes' odbc-native-protocol='yes' port='3306' server='169.254.219.131' username='root'>
        <relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[alliance_table].[HASH]'>
              </expression>
              <expression op='[cycle_table].[hash]'>
              </expression>
            </expression>
          </clause>
          <relation join='inner' type='join'>
            <clause type='join'>
              <expression op='='>
                <expression op='[alliance_table].[MATCH_NUM]'>
                </expression>
                <expression op='[team_table].[MATCH_NUM]'>
                </expression>
              </expression>
            </clause>
            <relation name='alliance_table' table='[alliance_table]' type='table' />
            <relation name='team_table' table='[team_table]' type='table' />
          </relation>
          <relation name='cycle_table' table='[cycle_table]' type='table' />
        </relation>
        <cols>
          <map key='[ALLIANCE_COLOR]' value='[alliance_table].[ALLIANCE_COLOR]' />
          <map key='[HASH]' value='[alliance_table].[HASH]' />
          <map key='[MATCH_NUM]' value='[alliance_table].[MATCH_NUM]' />
          <map key='[NAME_OF_SCOUT]' value='[alliance_table].[NAME_OF_SCOUT]' />
          <map key='[TEAM_NUM]' value='[team_table].[TEAM_NUM]' />
          <map key='[allianceAutoPoints]' value='[alliance_table].[allianceAutoPoints]' />
          <map key='[allianceBallEndTime]' value='[alliance_table].[allianceBallEndTime]' />
          <map key='[allianceBallEndTime_checkbox]' value='[team_table].[allianceBallEndTime_checkbox]' />
          <map key='[allianceFoulPoints]' value='[alliance_table].[allianceFoulPoints]' />
          <map key='[allianceTeleopPoints]' value='[alliance_table].[allianceTeleopPoints]' />
          <map key='[allianceTotalPoints]' value='[alliance_table].[allianceTotalPoints]' />
          <map key='[autoColorZone]' value='[team_table].[autoColorZone]' />
          <map key='[autoHotGoalOne]' value='[team_table].[autoHotGoalOne]' />
          <map key='[autoHotGoalThree]' value='[team_table].[autoHotGoalThree]' />
          <map key='[autoHotGoalTwo]' value='[team_table].[autoHotGoalTwo]' />
          <map key='[ballOneAuto]' value='[team_table].[ballOneAuto]' />
          <map key='[ballThreeAuto]' value='[team_table].[ballThreeAuto]' />
          <map key='[ballTwoAuto]' value='[team_table].[ballTwoAuto]' />
          <map key='[breakDescription]' value='[team_table].[breakDescription]' />
          <map key='[caughtBallHuman]' value='[team_table].[caughtBallHuman]' />
          <map key='[caughtBallRobots]' value='[team_table].[caughtBallRobots]' />
          <map key='[collectedBall]' value='[team_table].[collectedBall]' />
          <map key='[defense_inGoalie]' value='[team_table].[defense_inGoalie]' />
          <map key='[defense_stopGettingBall]' value='[team_table].[defense_stopGettingBall]' />
          <map key='[defense_stopRobot]' value='[team_table].[defense_stopRobot]' />
          <map key='[endTime]' value='[cycle_table].[endTime]' />
          <map key='[foulDescription]' value='[alliance_table].[foulDescription]' />
          <map key='[fumbleDescription]' value='[team_table].[fumbleDescription]' />
          <map key='[fumbles]' value='[team_table].[fumbles]' />
          <map key='[hash]' value='[cycle_table].[hash]' />
          <map key='[highGoalScores_colored]' value='[team_table].[highGoalScores_colored]' />
          <map key='[highGoalScores_goalie]' value='[team_table].[highGoalScores_goalie]' />
          <map key='[highGoalScores_white]' value='[team_table].[highGoalScores_white]' />
          <map key='[highGoalShots_colored]' value='[team_table].[highGoalShots_colored]' />
          <map key='[highGoalShots_goalie]' value='[team_table].[highGoalShots_goalie]' />
          <map key='[highGoalShots_white]' value='[team_table].[highGoalShots_white]' />
          <map key='[lateAutoReason]' value='[alliance_table].[lateAutoReason]' />
          <map key='[lineUpToLow]' value='[team_table].[lineUpToLow]' />
          <map key='[lowGoalScores]' value='[team_table].[lowGoalScores]' />
          <map key='[lowGoalShots]' value='[team_table].[lowGoalShots]' />
          <map key='[maneuvered]' value='[team_table].[maneuvered]' />
          <map key='[matchComments]' value='[team_table].[matchComments]' />
          <map key='[numAssists]' value='[cycle_table].[numAssists]' />
          <map key='[passRecvHuman]' value='[team_table].[passRecvHuman]' />
          <map key='[passRecvRobot]' value='[team_table].[passRecvRobot]' />
          <map key='[passStarts]' value='[team_table].[passStarts]' />
          <map key='[passesBlocked]' value='[team_table].[passesBlocked]' />
          <map key='[preBallsOnField]' value='[alliance_table].[preBallsOnField]' />
          <map key='[preGameBallOnePosition]' value='[team_table].[preGameBallOnePosition]' />
          <map key='[preGameBallThreePosition]' value='[team_table].[preGameBallThreePosition]' />
          <map key='[preGameBallTwoPosition]' value='[team_table].[preGameBallTwoPosition]' />
          <map key='[preGamePosition]' value='[team_table].[preGamePosition]' />
          <map key='[preferredPassEnd]' value='[team_table].[preferredPassEnd]' />
          <map key='[preferredPassStart]' value='[team_table].[preferredPassStart]' />
          <map key='[pushed]' value='[team_table].[pushed]' />
          <map key='[robotBreakage]' value='[team_table].[robotBreakage]' />
          <map key='[robotSpeed]' value='[team_table].[robotSpeed]' />
          <map key='[role_assister]' value='[team_table].[role_assister]' />
          <map key='[role_catcher]' value='[team_table].[role_catcher]' />
          <map key='[role_defense]' value='[team_table].[role_defense]' />
          <map key='[role_shooter]' value='[team_table].[role_shooter]' />
          <map key='[role_soloCycler]' value='[team_table].[role_soloCycler]' />
          <map key='[role_soloTrussCatcher]' value='[team_table].[role_soloTrussCatcher]' />
          <map key='[shotsBlocked]' value='[team_table].[shotsBlocked]' />
          <map key='[startTime]' value='[cycle_table].[startTime]' />
          <map key='[team_table_ALLIANCE_COLOR]' value='[team_table].[ALLIANCE_COLOR]' />
          <map key='[team_table_MATCH_NUM]' value='[team_table].[MATCH_NUM]' />
          <map key='[team_table_NAME_OF_SCOUT]' value='[team_table].[NAME_OF_SCOUT]' />
          <map key='[team_table_allianceBallEndTime]' value='[team_table].[allianceBallEndTime]' />
          <map key='[teleopInitPosition]' value='[team_table].[teleopInitPosition]' />
          <map key='[throwsToHumanOverTruss]' value='[team_table].[throwsToHumanOverTruss]' />
          <map key='[trussCatchScores]' value='[team_table].[trussCatchScores]' />
          <map key='[trussCatchShots]' value='[team_table].[trussCatchShots]' />
          <map key='[trussThrowScores]' value='[team_table].[trussThrowScores]' />
          <map key='[trussThrowShots]' value='[team_table].[trussThrowShots]' />
        </cols>
      </connection>
      <aliases enabled='yes' />
      <column caption='humanTrussThrow' datatype='integer' name='[Calculation_0560306115107302]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF CONTAINS([throwsToHumanOverTruss],&quot;throwsToHumanOverTruss&quot;) THEN 1 ELSE 0 END' scope-isolation='false' />
      </column>
      <column caption='numBallsAutoScored' datatype='integer' name='[Calculation_0660306010312790]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_6720306005744157]+[Calculation_2650306010036590]+[Calculation_5400306010106313]' scope-isolation='false' />
      </column>
      <column caption='defenseStopRobot' datatype='integer' name='[Calculation_0880301121037679]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF CONTAINS([defense_stopRobot],&quot;defense_stopRobot&quot;) THEN 1 ELSE 0 END' scope-isolation='false' />
      </column>
      <column caption='defenseProportion' datatype='real' name='[Calculation_1010305223043753]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_2400303174747658]/[Number of Records]' scope-isolation='false' />
      </column>
      <column caption='highGoalShots' datatype='real' name='[Calculation_1140301120102569]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='[highGoalShots_colored]+[highGoalShots_goalie]+[highGoalShots_white]' scope-isolation='false' />
      </column>
      <column caption='ballTwoAutoPoints' datatype='integer' name='[Calculation_1840303165406454]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF CONTAINS([ballTwoAuto],&quot;highMake&quot;) AND CONTAINS([autoHotGoalTwo],&quot;autoHotGoalTwo&quot;) THEN 20&#13;&#10;ELSEIF CONTAINS([ballTwoAuto],&quot;highMake&quot;) THEN 15&#13;&#10;ELSEIF CONTAINS([ballTwoAuto],&quot;lowMake&quot;) AND CONTAINS([autoHotGoalTwo],&quot;autoHotGoalTwo&quot;) THEN 11&#13;&#10;ELSEIF CONTAINS([ballTwoAuto],&quot;lowMake&quot;) THEN 6&#13;&#10;ELSE 0 &#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='ShotsColoredProportion' datatype='real' name='[Calculation_2020306003635320]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[highGoalShots_colored]/[Calculation_7770306003540857]' scope-isolation='false' />
      </column>
      <column caption='highGoalAccuracy' datatype='real' name='[Calculation_2210303163902149]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='AVG([Calculation_9170301120020898])/AVG([Calculation_1140301120102569])' scope-isolation='false' />
      </column>
      <column caption='autoPoints' datatype='integer' name='[Calculation_2270303165543352]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_2350303165504912]+[Calculation_6620303164959017]+[Calculation_1840303165406454]+[Calculation_4630303165425425]' scope-isolation='false' />
      </column>
      <column caption='soloTrussCatcherProportion' datatype='real' name='[Calculation_2310305223237409]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_3480303174853084]/[Number of Records]' scope-isolation='false' />
      </column>
      <column caption='autoColorZonePoints' datatype='integer' name='[Calculation_2350303165504912]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF CONTAINS([autoColorZone],&quot;autoColorZone&quot;) THEN 5&#13;&#10;ELSE 0&#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='defense' datatype='integer' name='[Calculation_2400303174747658]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF CONTAINS([role_defense],&quot;defense&quot;) THEN 1 ELSE 0 END' scope-isolation='false' />
      </column>
      <column caption='ballTwoAutoUsed' datatype='integer' name='[Calculation_2530303164410072]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF CONTAINS([ballTwoAuto],&quot;highMake&quot;) OR &#13;&#10;CONTAINS([ballTwoAuto],&quot;highMiss&quot;) OR &#13;&#10;CONTAINS([ballTwoAuto],&quot;lowMake&quot;) OR&#13;&#10;CONTAINS([ballTwoAuto],&quot;lowMiss&quot;)&#13;&#10;THEN 1&#13;&#10;ELSE 0&#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='ballTwoAutoScored' datatype='integer' name='[Calculation_2650306010036590]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF CONTAINS([ballTwoAuto],&quot;highMake&quot;) OR CONTAINS([ballTwoAuto],&quot;lowMake&quot;) THEN 1 ELSE 0 END' scope-isolation='false' />
      </column>
      <column caption='assisterProportion' datatype='real' name='[Calculation_3110305223116631]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_3120303174623405]/[Number of Records]' scope-isolation='false' />
      </column>
      <column caption='assister' datatype='integer' name='[Calculation_3120303174623405]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF CONTAINS([role_assister],&quot;assister&quot;) THEN 1 ELSE 0 END' scope-isolation='false' />
      </column>
      <column caption='ManeuveredTF' datatype='integer' name='[Calculation_3320301120424237]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF CONTAINS([maneuvered],&quot;maneuvered&quot;) THEN 1 ELSE 0 END' scope-isolation='false' />
      </column>
      <column caption='soloTrussCatcher' datatype='integer' name='[Calculation_3480303174853084]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF CONTAINS([role_soloTrussCatcher],&quot;soloTrussCatcher&quot;) THEN 1 ELSE 0 END' scope-isolation='false' />
      </column>
      <column caption='linesUpToLow' datatype='integer' name='[Calculation_3520306115231628]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF CONTAINS([lineUpToLow],&quot;lineUpToLow&quot;) THEN 1 ELSE 0 END' scope-isolation='false' />
      </column>
      <column caption='defenseStopGettingBall' datatype='integer' name='[Calculation_3890301121008021]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF CONTAINS([defense_stopGettingBall],&quot;defense_stopGettingBall&quot;) THEN 1 ELSE 0 END' scope-isolation='false' />
      </column>
      <column caption='ShotsWhiteProportion' datatype='real' name='[Calculation_3980306003743834]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[highGoalShots_white]/[Calculation_7770306003540857]' scope-isolation='false' />
      </column>
      <column caption='pushedTF' datatype='integer' name='[Calculation_4200301121859883]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF CONTAINS(pushed,&quot;pushed&quot;)THEN 1 ELSE 0 END' scope-isolation='false' />
      </column>
      <column caption='ballOneAutoUsed' datatype='integer' name='[Calculation_4630303164056150]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF CONTAINS([ballOneAuto],&quot;highMake&quot;) OR &#13;&#10;CONTAINS([ballOneAuto],&quot;highMiss&quot;) OR &#13;&#10;CONTAINS([ballOneAuto],&quot;lowMake&quot;) OR&#13;&#10;CONTAINS([ballOneAuto],&quot;lowMiss&quot;)&#13;&#10;THEN 1&#13;&#10;ELSE 0&#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='ballThreeAutoPoints' datatype='integer' name='[Calculation_4630303165425425]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF CONTAINS([ballThreeAuto],&quot;highMake&quot;) AND CONTAINS([autoHotGoalThree],&quot;autoHotGoalThree&quot;) THEN 20&#13;&#10;ELSEIF CONTAINS([ballThreeAuto],&quot;highMake&quot;) THEN 15&#13;&#10;ELSEIF CONTAINS([ballThreeAuto],&quot;lowMake&quot;) AND CONTAINS([autoHotGoalThree],&quot;autoHotGoalThree&quot;) THEN 11&#13;&#10;ELSEIF CONTAINS([ballThreeAuto],&quot;lowMake&quot;) THEN 6&#13;&#10;ELSE 0 &#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='ballThreeAutoScored' datatype='integer' name='[Calculation_5400306010106313]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF CONTAINS([ballThreeAuto],&quot;highMake&quot;) OR CONTAINS([ballThreeAuto],&quot;lowMake&quot;) THEN 1 ELSE 0 END' scope-isolation='false' />
      </column>
      <column caption='soloCyclerProportion' datatype='real' name='[Calculation_6160305223212906]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_9890303174831752]/[Number of Records]' scope-isolation='false' />
      </column>
      <column caption='ballOneAutoPoints' datatype='integer' name='[Calculation_6620303164959017]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF CONTAINS([ballOneAuto],&quot;highMake&quot;) AND CONTAINS([autoHotGoalOne],&quot;autoHotGoalOne&quot;) THEN 20&#13;&#10;ELSEIF CONTAINS([ballOneAuto],&quot;highMake&quot;) THEN 15&#13;&#10;ELSEIF CONTAINS([ballOneAuto],&quot;lowMake&quot;) AND CONTAINS([autoHotGoalOne],&quot;autoHotGoalOne&quot;) THEN 11&#13;&#10;ELSEIF CONTAINS([ballOneAuto],&quot;lowMake&quot;) THEN 6&#13;&#10;ELSE 0 &#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='cycleTime' datatype='real' name='[Calculation_6690306221032891]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[endTime]-[startTime]' scope-isolation='false' />
      </column>
      <column caption='defenseInGoalie' datatype='integer' name='[Calculation_6720301120947213]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF CONTAINS([defense_inGoalie],&quot;defense_inGoalie&quot;) THEN 1 ELSE 0 END' scope-isolation='false' />
      </column>
      <column caption='ballOneAutoScored' datatype='integer' name='[Calculation_6720306005744157]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF CONTAINS([ballOneAuto],&quot;highMake&quot;) OR CONTAINS([ballOneAuto],&quot;lowMake&quot;) THEN 1 ELSE 0 END' scope-isolation='false' />
      </column>
      <column caption='numBallsAutoUsed' datatype='integer' name='[Calculation_6780303164535382]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_4630303164056150]+[Calculation_2530303164410072]+[Calculation_8120303164436437]' scope-isolation='false' />
      </column>
      <column caption='ShotsTotal' datatype='real' name='[Calculation_7770306003540857]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='[highGoalShots_colored]+[highGoalShots_goalie]+[highGoalShots_white]' scope-isolation='false' />
      </column>
      <column caption='shooterProportion' datatype='real' name='[Calculation_8100305223149782]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_8670303174818409]/[Number of Records]' scope-isolation='false' />
      </column>
      <column caption='ballThreeAutoUsed' datatype='integer' name='[Calculation_8120303164436437]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF CONTAINS([ballThreeAuto],&quot;highMake&quot;) OR &#13;&#10;CONTAINS([ballThreeAuto],&quot;highMiss&quot;) OR &#13;&#10;CONTAINS([ballThreeAuto],&quot;lowMake&quot;) OR&#13;&#10;CONTAINS([ballThreeAuto],&quot;lowMiss&quot;)&#13;&#10;THEN 1&#13;&#10;ELSE 0&#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='catcherProportion' datatype='real' name='[Calculation_8320305222936780]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_9080303174733079]/[Number of Records]' scope-isolation='false' />
      </column>
      <column caption='shooter' datatype='integer' name='[Calculation_8670303174818409]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF CONTAINS([role_shooter],&quot;shooter&quot;) THEN 1 ELSE 0 END' scope-isolation='false' />
      </column>
      <column caption='robotCatches' datatype='integer' name='[Calculation_9010303172052832]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF CONTAINS([caughtBallHuman],&quot;caughtBallHuman&quot;) OR &#13;&#10;CONTAINS([caughtBallRobots],&quot;caughtBallRobots&quot;) THEN 1 &#13;&#10;ELSE 0&#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='autoAccuracy' datatype='real' name='[Calculation_9010306010337187]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_0660306010312790]/[Calculation_6780303164535382]' scope-isolation='false' />
      </column>
      <column caption='catcher(role)' datatype='integer' name='[Calculation_9080303174733079]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF CONTAINS([role_catcher],&quot;catcher&quot;) THEN 1 ELSE 0 END' scope-isolation='false' />
      </column>
      <column caption='highGoalScores' datatype='real' name='[Calculation_9170301120020898]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='[highGoalScores_colored]+[highGoalScores_goalie]+[highGoalScores_white]' scope-isolation='false' />
      </column>
      <column caption='collector' datatype='integer' name='[Calculation_9410303172220189]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF CONTAINS([collectedBall],&quot;collectedBall&quot;) THEN 1&#13;&#10;ELSE 0&#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='ShotsGoalieProportion' datatype='real' name='[Calculation_9570306003707531]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[highGoalShots_goalie]/[Calculation_7770306003540857]' scope-isolation='false' />
      </column>
      <column caption='soloCycler' datatype='integer' name='[Calculation_9890303174831752]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF CONTAINS([role_soloCycler],&quot;soloCycler&quot;) THEN 1 ELSE 0 END' scope-isolation='false' />
      </column>
      <column datatype='integer' name='[MATCH_NUM]' role='dimension' type='ordinal'>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='real' datatype-customized='true' name='[TEAM_NUM]' role='dimension' type='ordinal'>
      </column>
      <column datatype='real' datatype-customized='true' name='[endTime]' role='measure' type='quantitative'>
      </column>
      <column datatype='real' datatype-customized='true' name='[fumbles]' role='measure' type='quantitative'>
      </column>
      <column caption='Scores-Colored' datatype='real' datatype-customized='true' name='[highGoalScores_colored]' role='measure' type='quantitative'>
      </column>
      <column caption='Scores-Goalie' datatype='real' datatype-customized='true' name='[highGoalScores_goalie]' role='measure' type='quantitative'>
      </column>
      <column caption='Scores-White' datatype='real' datatype-customized='true' name='[highGoalScores_white]' role='measure' type='quantitative'>
      </column>
      <column caption='Shots-Colored' datatype='real' datatype-customized='true' name='[highGoalShots_colored]' role='measure' type='quantitative'>
      </column>
      <column caption='Shots-Goalie' datatype='real' datatype-customized='true' name='[highGoalShots_goalie]' role='measure' type='quantitative'>
      </column>
      <column caption='Shots-White' datatype='real' datatype-customized='true' name='[highGoalShots_white]' role='measure' type='quantitative'>
      </column>
      <column datatype='real' datatype-customized='true' name='[lowGoalScores]' role='measure' type='quantitative'>
      </column>
      <column datatype='real' datatype-customized='true' name='[lowGoalShots]' role='measure' type='quantitative'>
      </column>
      <column aggregation='CountD' datatype='real' datatype-customized='true' name='[numAssists]' role='measure' type='quantitative'>
      </column>
      <column datatype='real' datatype-customized='true' name='[passRecvHuman]' role='measure' type='quantitative'>
      </column>
      <column datatype='real' datatype-customized='true' name='[passRecvRobot]' role='measure' type='quantitative'>
      </column>
      <column datatype='real' datatype-customized='true' name='[passStarts]' role='measure' type='quantitative'>
      </column>
      <column datatype='real' datatype-customized='true' name='[robotSpeed]' role='measure' type='quantitative'>
      </column>
      <column datatype='real' datatype-customized='true' name='[shotsBlocked]' role='measure' type='quantitative'>
      </column>
      <column aggregation='CountD' datatype='real' datatype-customized='true' name='[startTime]' role='measure' type='quantitative'>
      </column>
      <column datatype='real' datatype-customized='true' name='[trussCatchScores]' role='measure' type='quantitative'>
      </column>
      <column datatype='real' datatype-customized='true' name='[trussCatchShots]' role='measure' type='quantitative'>
      </column>
      <column datatype='real' datatype-customized='true' name='[trussThrowScores]' role='measure' type='quantitative'>
      </column>
      <column datatype='real' datatype-customized='true' name='[trussThrowShots]' role='measure' type='quantitative'>
      </column>
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='C:\Users\loliv_000\Documents\My Tableau Repository\Datasources\team_alliance_cycle.tde' schema='Extract' tablename='Extract' update-time='3/7/2014 4:05:32 AM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <cols>
            <map key='[ALLIANCE_COLOR]' value='[Extract].[ALLIANCE_COLOR]' />
            <map key='[HASH]' value='[Extract].[HASH]' />
            <map key='[MATCH_NUM]' value='[Extract].[MATCH_NUM]' />
            <map key='[NAME_OF_SCOUT]' value='[Extract].[NAME_OF_SCOUT]' />
            <map key='[Number of Records]' value='[Extract].[Number of Records]' />
            <map key='[TEAM_NUM]' value='[Extract].[TEAM_NUM]' />
            <map key='[allianceAutoPoints]' value='[Extract].[allianceAutoPoints]' />
            <map key='[allianceBallEndTime]' value='[Extract].[allianceBallEndTime]' />
            <map key='[allianceBallEndTime_checkbox]' value='[Extract].[allianceBallEndTime_checkbox]' />
            <map key='[allianceFoulPoints]' value='[Extract].[allianceFoulPoints]' />
            <map key='[allianceTeleopPoints]' value='[Extract].[allianceTeleopPoints]' />
            <map key='[allianceTotalPoints]' value='[Extract].[allianceTotalPoints]' />
            <map key='[autoColorZone]' value='[Extract].[autoColorZone]' />
            <map key='[autoHotGoalOne]' value='[Extract].[autoHotGoalOne]' />
            <map key='[autoHotGoalThree]' value='[Extract].[autoHotGoalThree]' />
            <map key='[autoHotGoalTwo]' value='[Extract].[autoHotGoalTwo]' />
            <map key='[ballOneAuto]' value='[Extract].[ballOneAuto]' />
            <map key='[ballThreeAuto]' value='[Extract].[ballThreeAuto]' />
            <map key='[ballTwoAuto]' value='[Extract].[ballTwoAuto]' />
            <map key='[breakDescription]' value='[Extract].[breakDescription]' />
            <map key='[caughtBallHuman]' value='[Extract].[caughtBallHuman]' />
            <map key='[caughtBallRobots]' value='[Extract].[caughtBallRobots]' />
            <map key='[collectedBall]' value='[Extract].[collectedBall]' />
            <map key='[defense_inGoalie]' value='[Extract].[defense_inGoalie]' />
            <map key='[defense_stopGettingBall]' value='[Extract].[defense_stopGettingBall]' />
            <map key='[defense_stopRobot]' value='[Extract].[defense_stopRobot]' />
            <map key='[endTime]' value='[Extract].[endTime]' />
            <map key='[foulDescription]' value='[Extract].[foulDescription]' />
            <map key='[fumbleDescription]' value='[Extract].[fumbleDescription]' />
            <map key='[fumbles]' value='[Extract].[fumbles]' />
            <map key='[hash]' value='[Extract].[hash1]' />
            <map key='[highGoalScores_colored]' value='[Extract].[highGoalScores_colored]' />
            <map key='[highGoalScores_goalie]' value='[Extract].[highGoalScores_goalie]' />
            <map key='[highGoalScores_white]' value='[Extract].[highGoalScores_white]' />
            <map key='[highGoalShots_colored]' value='[Extract].[highGoalShots_colored]' />
            <map key='[highGoalShots_goalie]' value='[Extract].[highGoalShots_goalie]' />
            <map key='[highGoalShots_white]' value='[Extract].[highGoalShots_white]' />
            <map key='[lateAutoReason]' value='[Extract].[lateAutoReason]' />
            <map key='[lineUpToLow]' value='[Extract].[lineUpToLow]' />
            <map key='[lowGoalScores]' value='[Extract].[lowGoalScores]' />
            <map key='[lowGoalShots]' value='[Extract].[lowGoalShots]' />
            <map key='[maneuvered]' value='[Extract].[maneuvered]' />
            <map key='[matchComments]' value='[Extract].[matchComments]' />
            <map key='[numAssists]' value='[Extract].[numAssists]' />
            <map key='[passRecvHuman]' value='[Extract].[passRecvHuman]' />
            <map key='[passRecvRobot]' value='[Extract].[passRecvRobot]' />
            <map key='[passStarts]' value='[Extract].[passStarts]' />
            <map key='[passesBlocked]' value='[Extract].[passesBlocked]' />
            <map key='[preBallsOnField]' value='[Extract].[preBallsOnField]' />
            <map key='[preGameBallOnePosition]' value='[Extract].[preGameBallOnePosition]' />
            <map key='[preGameBallThreePosition]' value='[Extract].[preGameBallThreePosition]' />
            <map key='[preGameBallTwoPosition]' value='[Extract].[preGameBallTwoPosition]' />
            <map key='[preGamePosition]' value='[Extract].[preGamePosition]' />
            <map key='[preferredPassEnd]' value='[Extract].[preferredPassEnd]' />
            <map key='[preferredPassStart]' value='[Extract].[preferredPassStart]' />
            <map key='[pushed]' value='[Extract].[pushed]' />
            <map key='[robotBreakage]' value='[Extract].[robotBreakage]' />
            <map key='[robotSpeed]' value='[Extract].[robotSpeed]' />
            <map key='[role_assister]' value='[Extract].[role_assister]' />
            <map key='[role_catcher]' value='[Extract].[role_catcher]' />
            <map key='[role_defense]' value='[Extract].[role_defense]' />
            <map key='[role_shooter]' value='[Extract].[role_shooter]' />
            <map key='[role_soloCycler]' value='[Extract].[role_soloCycler]' />
            <map key='[role_soloTrussCatcher]' value='[Extract].[role_soloTrussCatcher]' />
            <map key='[shotsBlocked]' value='[Extract].[shotsBlocked]' />
            <map key='[startTime]' value='[Extract].[startTime]' />
            <map key='[team_table_ALLIANCE_COLOR]' value='[Extract].[ALLIANCE_COLOR1]' />
            <map key='[team_table_MATCH_NUM]' value='[Extract].[MATCH_NUM1]' />
            <map key='[team_table_NAME_OF_SCOUT]' value='[Extract].[NAME_OF_SCOUT1]' />
            <map key='[team_table_allianceBallEndTime]' value='[Extract].[allianceBallEndTime1]' />
            <map key='[teleopInitPosition]' value='[Extract].[teleopInitPosition]' />
            <map key='[throwsToHumanOverTruss]' value='[Extract].[throwsToHumanOverTruss]' />
            <map key='[trussCatchScores]' value='[Extract].[trussCatchScores]' />
            <map key='[trussCatchShots]' value='[Extract].[trussCatchShots]' />
            <map key='[trussThrowScores]' value='[Extract].[trussThrowScores]' />
            <map key='[trussThrowShots]' value='[Extract].[trussThrowShots]' />
          </cols>
          <calculations>
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='4' timestamp-start='2014-03-07 04:05:31.912000' />
          </refresh>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='team_table (yes)' inline='true' name='mysql.41699.488635277776' version='8.2'>
      <connection class='mysql' dbname='yes' odbc-native-protocol='yes' port='3306' server='169.254.219.131' username='root'>
        <relation name='team_table' table='[team_table]' type='table' />
        <refresh increment-key='' incremental-updates='false'>
        </refresh>
      </connection>
      <aliases enabled='yes' />
      <column caption='humanTrussThrow' datatype='integer' name='[Calculation_0560306115107302]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF CONTAINS([throwsToHumanOverTruss],&quot;throwsToHumanOverTruss&quot;) THEN 1 ELSE 0 END' scope-isolation='false' />
      </column>
      <column caption='numBallsAutoScored' datatype='integer' name='[Calculation_0660306010312790]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_6720306005744157]+[Calculation_2650306010036590]+[Calculation_5400306010106313]' scope-isolation='false' />
      </column>
      <column caption='defenseStopRobot' datatype='integer' name='[Calculation_0880301121037679]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF CONTAINS([defense_stopRobot],&quot;defense_stopRobot&quot;) THEN 1 ELSE 0 END' scope-isolation='false' />
      </column>
      <column caption='defenseProportion' datatype='real' name='[Calculation_1010305223043753]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_2400303174747658]/[Number of Records]' scope-isolation='false' />
      </column>
      <column caption='highGoalShots' datatype='real' name='[Calculation_1140301120102569]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[highGoalShots_colored]+[highGoalShots_goalie]+[highGoalShots_white]' scope-isolation='false' />
      </column>
      <column caption='ballTwoAutoPoints' datatype='integer' name='[Calculation_1840303165406454]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF CONTAINS([ballTwoAuto],&quot;highMake&quot;) AND CONTAINS([autoHotGoalTwo],&quot;autoHotGoalTwo&quot;) THEN 20&#13;&#10;ELSEIF CONTAINS([ballTwoAuto],&quot;highMake&quot;) THEN 15&#13;&#10;ELSEIF CONTAINS([ballTwoAuto],&quot;lowMake&quot;) AND CONTAINS([autoHotGoalTwo],&quot;autoHotGoalTwo&quot;) THEN 11&#13;&#10;ELSEIF CONTAINS([ballTwoAuto],&quot;lowMake&quot;) THEN 6&#13;&#10;ELSE 0 &#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='ShotsColoredProportion' datatype='real' name='[Calculation_2020306003635320]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[highGoalShots_colored]/[Calculation_7770306003540857]' scope-isolation='false' />
      </column>
      <column caption='highGoalAccuracy' datatype='real' name='[Calculation_2210303163902149]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='AVG([Calculation_9170301120020898])/AVG([Calculation_1140301120102569])' scope-isolation='false' />
      </column>
      <column caption='autoPoints' datatype='integer' name='[Calculation_2270303165543352]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_2350303165504912]+[Calculation_6620303164959017]+[Calculation_1840303165406454]+[Calculation_4630303165425425]' scope-isolation='false' />
      </column>
      <column caption='soloTrussCatcherProportion' datatype='real' name='[Calculation_2310305223237409]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_3480303174853084]/[Number of Records]' scope-isolation='false' />
      </column>
      <column caption='autoColorZonePoints' datatype='integer' name='[Calculation_2350303165504912]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF CONTAINS([autoColorZone],&quot;autoColorZone&quot;) THEN 5&#13;&#10;ELSE 0&#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='defense' datatype='integer' name='[Calculation_2400303174747658]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF CONTAINS([role_defense],&quot;defense&quot;) THEN 1 ELSE 0 END' scope-isolation='false' />
      </column>
      <column caption='ballTwoAutoUsed' datatype='integer' name='[Calculation_2530303164410072]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF CONTAINS([ballTwoAuto],&quot;highMake&quot;) OR &#13;&#10;CONTAINS([ballTwoAuto],&quot;highMiss&quot;) OR &#13;&#10;CONTAINS([ballTwoAuto],&quot;lowMake&quot;) OR&#13;&#10;CONTAINS([ballTwoAuto],&quot;lowMiss&quot;)&#13;&#10;THEN 1&#13;&#10;ELSE 0&#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='ballTwoAutoScored' datatype='integer' name='[Calculation_2650306010036590]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF CONTAINS([ballTwoAuto],&quot;highMake&quot;) OR CONTAINS([ballTwoAuto],&quot;lowMake&quot;) THEN 1 ELSE 0 END' scope-isolation='false' />
      </column>
      <column caption='assisterProportion' datatype='real' name='[Calculation_3110305223116631]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_3120303174623405]/[Number of Records]' scope-isolation='false' />
      </column>
      <column caption='assister' datatype='integer' name='[Calculation_3120303174623405]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF CONTAINS([role_assister],&quot;assister&quot;) THEN 1 ELSE 0 END' scope-isolation='false' />
      </column>
      <column caption='ManeuveredTF' datatype='integer' name='[Calculation_3320301120424237]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF CONTAINS([maneuvered],&quot;maneuvered&quot;) THEN 1 ELSE 0 END' scope-isolation='false' />
      </column>
      <column caption='soloTrussCatcher' datatype='integer' name='[Calculation_3480303174853084]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF CONTAINS([role_soloTrussCatcher],&quot;soloTrussCatcher&quot;) THEN 1 ELSE 0 END' scope-isolation='false' />
      </column>
      <column caption='linesUpToLow' datatype='integer' name='[Calculation_3520306115231628]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF CONTAINS([lineUpToLow],&quot;lineUpToLow&quot;) THEN 1 ELSE 0 END' scope-isolation='false' />
      </column>
      <column caption='defenseStopGettingBall' datatype='integer' name='[Calculation_3890301121008021]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF CONTAINS([defense_stopGettingBall],&quot;defense_stopGettingBall&quot;) THEN 1 ELSE 0 END' scope-isolation='false' />
      </column>
      <column caption='ShotsWhiteProportion' datatype='real' name='[Calculation_3980306003743834]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[highGoalShots_white]/[Calculation_7770306003540857]' scope-isolation='false' />
      </column>
      <column caption='pushedTF' datatype='integer' name='[Calculation_4200301121859883]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF CONTAINS(pushed,&quot;pushed&quot;)THEN 1 ELSE 0 END' scope-isolation='false' />
      </column>
      <column caption='ballOneAutoUsed' datatype='integer' name='[Calculation_4630303164056150]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF CONTAINS([ballOneAuto],&quot;highMake&quot;) OR &#13;&#10;CONTAINS([ballOneAuto],&quot;highMiss&quot;) OR &#13;&#10;CONTAINS([ballOneAuto],&quot;lowMake&quot;) OR&#13;&#10;CONTAINS([ballOneAuto],&quot;lowMiss&quot;)&#13;&#10;THEN 1&#13;&#10;ELSE 0&#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='ballThreeAutoPoints' datatype='integer' name='[Calculation_4630303165425425]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF CONTAINS([ballThreeAuto],&quot;highMake&quot;) AND CONTAINS([autoHotGoalThree],&quot;autoHotGoalThree&quot;) THEN 20&#13;&#10;ELSEIF CONTAINS([ballThreeAuto],&quot;highMake&quot;) THEN 15&#13;&#10;ELSEIF CONTAINS([ballThreeAuto],&quot;lowMake&quot;) AND CONTAINS([autoHotGoalThree],&quot;autoHotGoalThree&quot;) THEN 11&#13;&#10;ELSEIF CONTAINS([ballThreeAuto],&quot;lowMake&quot;) THEN 6&#13;&#10;ELSE 0 &#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='ballThreeAutoScored' datatype='integer' name='[Calculation_5400306010106313]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF CONTAINS([ballThreeAuto],&quot;highMake&quot;) OR CONTAINS([ballThreeAuto],&quot;lowMake&quot;) THEN 1 ELSE 0 END' scope-isolation='false' />
      </column>
      <column caption='soloCyclerProportion' datatype='real' name='[Calculation_6160305223212906]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_9890303174831752]/[Number of Records]' scope-isolation='false' />
      </column>
      <column caption='ballOneAutoPoints' datatype='integer' name='[Calculation_6620303164959017]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF CONTAINS([ballOneAuto],&quot;highMake&quot;) AND CONTAINS([autoHotGoalOne],&quot;autoHotGoalOne&quot;) THEN 20&#13;&#10;ELSEIF CONTAINS([ballOneAuto],&quot;highMake&quot;) THEN 15&#13;&#10;ELSEIF CONTAINS([ballOneAuto],&quot;lowMake&quot;) AND CONTAINS([autoHotGoalOne],&quot;autoHotGoalOne&quot;) THEN 11&#13;&#10;ELSEIF CONTAINS([ballOneAuto],&quot;lowMake&quot;) THEN 6&#13;&#10;ELSE 0 &#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='defenseInGoalie' datatype='integer' name='[Calculation_6720301120947213]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF CONTAINS([defense_inGoalie],&quot;defense_inGoalie&quot;) THEN 1 ELSE 0 END' scope-isolation='false' />
      </column>
      <column caption='ballOneAutoScored' datatype='integer' name='[Calculation_6720306005744157]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF CONTAINS([ballOneAuto],&quot;highMake&quot;) OR CONTAINS([ballOneAuto],&quot;lowMake&quot;) THEN 1 ELSE 0 END' scope-isolation='false' />
      </column>
      <column caption='numBallsAutoUsed' datatype='integer' name='[Calculation_6780303164535382]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_4630303164056150]+[Calculation_2530303164410072]+[Calculation_8120303164436437]' scope-isolation='false' />
      </column>
      <column caption='ShotsTotal' datatype='real' name='[Calculation_7770306003540857]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[highGoalShots_colored]+[highGoalShots_goalie]+[highGoalShots_white]' scope-isolation='false' />
      </column>
      <column caption='shooterProportion' datatype='real' name='[Calculation_8100305223149782]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_8670303174818409]/[Number of Records]' scope-isolation='false' />
      </column>
      <column caption='ballThreeAutoUsed' datatype='integer' name='[Calculation_8120303164436437]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF CONTAINS([ballThreeAuto],&quot;highMake&quot;) OR &#13;&#10;CONTAINS([ballThreeAuto],&quot;highMiss&quot;) OR &#13;&#10;CONTAINS([ballThreeAuto],&quot;lowMake&quot;) OR&#13;&#10;CONTAINS([ballThreeAuto],&quot;lowMiss&quot;)&#13;&#10;THEN 1&#13;&#10;ELSE 0&#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='catcherProportion' datatype='real' name='[Calculation_8320305222936780]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_9080303174733079]/[Number of Records]' scope-isolation='false' />
      </column>
      <column caption='shooter' datatype='integer' name='[Calculation_8670303174818409]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF CONTAINS([role_shooter],&quot;shooter&quot;) THEN 1 ELSE 0 END' scope-isolation='false' />
      </column>
      <column caption='robotCatches' datatype='integer' name='[Calculation_9010303172052832]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF CONTAINS([caughtBallHuman],&quot;caughtBallHuman&quot;) OR &#13;&#10;CONTAINS([caughtBallRobots],&quot;caughtBallRobots&quot;) THEN 1 &#13;&#10;ELSE 0&#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='autoAccuracy' datatype='real' name='[Calculation_9010306010337187]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_0660306010312790]/[Calculation_6780303164535382]' scope-isolation='false' />
      </column>
      <column caption='catcher(role)' datatype='integer' name='[Calculation_9080303174733079]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF CONTAINS([role_catcher],&quot;catcher&quot;) THEN 1 ELSE 0 END' scope-isolation='false' />
      </column>
      <column caption='highGoalScores' datatype='real' name='[Calculation_9170301120020898]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[highGoalScores_colored]+[highGoalScores_goalie]+[highGoalScores_white]' scope-isolation='false' />
      </column>
      <column caption='collector' datatype='integer' name='[Calculation_9410303172220189]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF CONTAINS([collectedBall],&quot;collectedBall&quot;) THEN 1&#13;&#10;ELSE 0&#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='ShotsGoalieProportion' datatype='real' name='[Calculation_9570306003707531]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[highGoalShots_goalie]/[Calculation_7770306003540857]' scope-isolation='false' />
      </column>
      <column caption='soloCycler' datatype='integer' name='[Calculation_9890303174831752]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF CONTAINS([role_soloCycler],&quot;soloCycler&quot;) THEN 1 ELSE 0 END' scope-isolation='false' />
      </column>
      <column caption='Match Number' datatype='string' name='[MATCH_NUM]' role='dimension' type='nominal'>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Team' datatype='string' name='[TEAM_NUM]' role='dimension' type='nominal'>
      </column>
      <column aggregation='CountD' datatype='real' datatype-customized='true' name='[fumbles]' role='measure' type='quantitative'>
      </column>
      <column caption='Scores-Colored' datatype='real' datatype-customized='true' name='[highGoalScores_colored]' role='measure' type='quantitative'>
      </column>
      <column caption='Scores-Goalie' datatype='real' datatype-customized='true' name='[highGoalScores_goalie]' role='measure' type='quantitative'>
      </column>
      <column caption='Scores-White' datatype='real' datatype-customized='true' name='[highGoalScores_white]' role='measure' type='quantitative'>
      </column>
      <column caption='Shots-Colored' datatype='real' datatype-customized='true' name='[highGoalShots_colored]' role='measure' type='quantitative'>
      </column>
      <column caption='Shots-Goalie' datatype='real' datatype-customized='true' name='[highGoalShots_goalie]' role='measure' type='quantitative'>
      </column>
      <column caption='Shots-White' datatype='real' datatype-customized='true' name='[highGoalShots_white]' role='measure' type='quantitative'>
      </column>
      <column datatype='real' datatype-customized='true' name='[lowGoalScores]' role='measure' type='quantitative'>
      </column>
      <column datatype='real' datatype-customized='true' name='[lowGoalShots]' role='measure' type='quantitative'>
      </column>
      <column datatype='real' datatype-customized='true' name='[passRecvHuman]' role='measure' type='quantitative'>
      </column>
      <column datatype='real' datatype-customized='true' name='[passRecvRobot]' role='measure' type='quantitative'>
      </column>
      <column datatype='real' datatype-customized='true' name='[passStarts]' role='measure' type='quantitative'>
      </column>
      <column aggregation='CountD' datatype='real' datatype-customized='true' name='[passesBlocked]' role='measure' type='quantitative'>
      </column>
      <column datatype='real' datatype-customized='true' name='[robotSpeed]' role='measure' type='quantitative'>
      </column>
      <column datatype='real' datatype-customized='true' name='[shotsBlocked]' role='measure' type='quantitative'>
      </column>
      <column datatype='real' datatype-customized='true' name='[trussCatchScores]' role='measure' type='quantitative'>
      </column>
      <column datatype='real' datatype-customized='true' name='[trussCatchShots]' role='measure' type='quantitative'>
      </column>
      <column datatype='real' datatype-customized='true' name='[trussThrowScores]' role='measure' type='quantitative'>
      </column>
      <column datatype='real' datatype-customized='true' name='[trussThrowShots]' role='measure' type='quantitative'>
      </column>
      <column-instance column='[TEAM_NUM]' derivation='None' name='[none:TEAM_NUM:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_1140301120102569]' derivation='Sum' name='[sum:Calculation_1140301120102569:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_9170301120020898]' derivation='Sum' name='[sum:Calculation_9170301120020898:qk]' pivot='key' type='quantitative' />
      <column-instance column='[highGoalScores_colored]' derivation='Sum' name='[sum:highGoalScores_colored:qk]' pivot='key' type='quantitative' />
      <column-instance column='[highGoalScores_goalie]' derivation='Sum' name='[sum:highGoalScores_goalie:qk]' pivot='key' type='quantitative' />
      <column-instance column='[highGoalScores_white]' derivation='Sum' name='[sum:highGoalScores_white:qk]' pivot='key' type='quantitative' />
      <column-instance column='[highGoalShots_colored]' derivation='Sum' name='[sum:highGoalShots_colored:qk]' pivot='key' type='quantitative' />
      <column-instance column='[highGoalShots_goalie]' derivation='Sum' name='[sum:highGoalShots_goalie:qk]' pivot='key' type='quantitative' />
      <column-instance column='[highGoalShots_white]' derivation='Sum' name='[sum:highGoalShots_white:qk]' pivot='key' type='quantitative' />
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='C:\Users\loliv_000\Documents\My Tableau Repository\Datasources\team_table (yes).tde' schema='Extract' tablename='Extract' update-time='3/6/2014 9:08:59 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Calculation_0560306115107302]' formula='IF CONTAINS([throwsToHumanOverTruss],&quot;throwsToHumanOverTruss&quot;) THEN 1 ELSE 0 END' />
            <calculation column='[Calculation_0660306010312790]' formula='[Calculation_6720306005744157]+[Calculation_2650306010036590]+[Calculation_5400306010106313]' />
            <calculation column='[Calculation_0880301121037679]' formula='IF CONTAINS([defense_stopRobot],&quot;defense_stopRobot&quot;) THEN 1 ELSE 0 END' />
            <calculation column='[Calculation_1010305223043753]' formula='[Calculation_2400303174747658]/[Number of Records]' />
            <calculation column='[Calculation_1140301120102569]' formula='[highGoalShots_colored]+[highGoalShots_goalie]+[highGoalShots_white]' />
            <calculation column='[Calculation_1840303165406454]' formula='IF CONTAINS([ballTwoAuto],&quot;highMake&quot;) AND CONTAINS([autoHotGoalTwo],&quot;autoHotGoalTwo&quot;) THEN 20&#13;&#10;ELSEIF CONTAINS([ballTwoAuto],&quot;highMake&quot;) THEN 15&#13;&#10;ELSEIF CONTAINS([ballTwoAuto],&quot;lowMake&quot;) AND CONTAINS([autoHotGoalTwo],&quot;autoHotGoalTwo&quot;) THEN 11&#13;&#10;ELSEIF CONTAINS([ballTwoAuto],&quot;lowMake&quot;) THEN 6&#13;&#10;ELSE 0 &#13;&#10;END' />
            <calculation column='[Calculation_2020306003635320]' formula='[highGoalShots_colored]/[Calculation_7770306003540857]' />
            <calculation column='[Calculation_2270303165543352]' formula='[Calculation_2350303165504912]+[Calculation_6620303164959017]+[Calculation_1840303165406454]+[Calculation_4630303165425425]' />
            <calculation column='[Calculation_2310305223237409]' formula='[Calculation_3480303174853084]/[Number of Records]' />
            <calculation column='[Calculation_2350303165504912]' formula='IF CONTAINS([autoColorZone],&quot;autoColorZone&quot;) THEN 5&#13;&#10;ELSE 0&#13;&#10;END' />
            <calculation column='[Calculation_2400303174747658]' formula='IF CONTAINS([role_defense],&quot;defense&quot;) THEN 1 ELSE 0 END' />
            <calculation column='[Calculation_2530303164410072]' formula='IF CONTAINS([ballTwoAuto],&quot;highMake&quot;) OR &#13;&#10;CONTAINS([ballTwoAuto],&quot;highMiss&quot;) OR &#13;&#10;CONTAINS([ballTwoAuto],&quot;lowMake&quot;) OR&#13;&#10;CONTAINS([ballTwoAuto],&quot;lowMiss&quot;)&#13;&#10;THEN 1&#13;&#10;ELSE 0&#13;&#10;END' />
            <calculation column='[Calculation_2650306010036590]' formula='IF CONTAINS([ballTwoAuto],&quot;highMake&quot;) OR CONTAINS([ballTwoAuto],&quot;lowMake&quot;) THEN 1 ELSE 0 END' />
            <calculation column='[Calculation_3110305223116631]' formula='[Calculation_3120303174623405]/[Number of Records]' />
            <calculation column='[Calculation_3120303174623405]' formula='IF CONTAINS([role_assister],&quot;assister&quot;) THEN 1 ELSE 0 END' />
            <calculation column='[Calculation_3320301120424237]' formula='IF CONTAINS([maneuvered],&quot;maneuvered&quot;) THEN 1 ELSE 0 END' />
            <calculation column='[Calculation_3480303174853084]' formula='IF CONTAINS([role_soloTrussCatcher],&quot;soloTrussCatcher&quot;) THEN 1 ELSE 0 END' />
            <calculation column='[Calculation_3520306115231628]' formula='IF CONTAINS([lineUpToLow],&quot;lineUpToLow&quot;) THEN 1 ELSE 0 END' />
            <calculation column='[Calculation_3890301121008021]' formula='IF CONTAINS([defense_stopGettingBall],&quot;defense_stopGettingBall&quot;) THEN 1 ELSE 0 END' />
            <calculation column='[Calculation_3980306003743834]' formula='[highGoalShots_white]/[Calculation_7770306003540857]' />
            <calculation column='[Calculation_4200301121859883]' formula='IF CONTAINS(pushed,&quot;pushed&quot;)THEN 1 ELSE 0 END' />
            <calculation column='[Calculation_4630303164056150]' formula='IF CONTAINS([ballOneAuto],&quot;highMake&quot;) OR &#13;&#10;CONTAINS([ballOneAuto],&quot;highMiss&quot;) OR &#13;&#10;CONTAINS([ballOneAuto],&quot;lowMake&quot;) OR&#13;&#10;CONTAINS([ballOneAuto],&quot;lowMiss&quot;)&#13;&#10;THEN 1&#13;&#10;ELSE 0&#13;&#10;END' />
            <calculation column='[Calculation_4630303165425425]' formula='IF CONTAINS([ballThreeAuto],&quot;highMake&quot;) AND CONTAINS([autoHotGoalThree],&quot;autoHotGoalThree&quot;) THEN 20&#13;&#10;ELSEIF CONTAINS([ballThreeAuto],&quot;highMake&quot;) THEN 15&#13;&#10;ELSEIF CONTAINS([ballThreeAuto],&quot;lowMake&quot;) AND CONTAINS([autoHotGoalThree],&quot;autoHotGoalThree&quot;) THEN 11&#13;&#10;ELSEIF CONTAINS([ballThreeAuto],&quot;lowMake&quot;) THEN 6&#13;&#10;ELSE 0 &#13;&#10;END' />
            <calculation column='[Calculation_5400306010106313]' formula='IF CONTAINS([ballThreeAuto],&quot;highMake&quot;) OR CONTAINS([ballThreeAuto],&quot;lowMake&quot;) THEN 1 ELSE 0 END' />
            <calculation column='[Calculation_6160305223212906]' formula='[Calculation_9890303174831752]/[Number of Records]' />
            <calculation column='[Calculation_6620303164959017]' formula='IF CONTAINS([ballOneAuto],&quot;highMake&quot;) AND CONTAINS([autoHotGoalOne],&quot;autoHotGoalOne&quot;) THEN 20&#13;&#10;ELSEIF CONTAINS([ballOneAuto],&quot;highMake&quot;) THEN 15&#13;&#10;ELSEIF CONTAINS([ballOneAuto],&quot;lowMake&quot;) AND CONTAINS([autoHotGoalOne],&quot;autoHotGoalOne&quot;) THEN 11&#13;&#10;ELSEIF CONTAINS([ballOneAuto],&quot;lowMake&quot;) THEN 6&#13;&#10;ELSE 0 &#13;&#10;END' />
            <calculation column='[Calculation_6720301120947213]' formula='IF CONTAINS([defense_inGoalie],&quot;defense_inGoalie&quot;) THEN 1 ELSE 0 END' />
            <calculation column='[Calculation_6720306005744157]' formula='IF CONTAINS([ballOneAuto],&quot;highMake&quot;) OR CONTAINS([ballOneAuto],&quot;lowMake&quot;) THEN 1 ELSE 0 END' />
            <calculation column='[Calculation_6780303164535382]' formula='[Calculation_4630303164056150]+[Calculation_2530303164410072]+[Calculation_8120303164436437]' />
            <calculation column='[Calculation_7770306003540857]' formula='[highGoalShots_colored]+[highGoalShots_goalie]+[highGoalShots_white]' />
            <calculation column='[Calculation_8100305223149782]' formula='[Calculation_8670303174818409]/[Number of Records]' />
            <calculation column='[Calculation_8120303164436437]' formula='IF CONTAINS([ballThreeAuto],&quot;highMake&quot;) OR &#13;&#10;CONTAINS([ballThreeAuto],&quot;highMiss&quot;) OR &#13;&#10;CONTAINS([ballThreeAuto],&quot;lowMake&quot;) OR&#13;&#10;CONTAINS([ballThreeAuto],&quot;lowMiss&quot;)&#13;&#10;THEN 1&#13;&#10;ELSE 0&#13;&#10;END' />
            <calculation column='[Calculation_8320305222936780]' formula='[Calculation_9080303174733079]/[Number of Records]' />
            <calculation column='[Calculation_8670303174818409]' formula='IF CONTAINS([role_shooter],&quot;shooter&quot;) THEN 1 ELSE 0 END' />
            <calculation column='[Calculation_9010303172052832]' formula='IF CONTAINS([caughtBallHuman],&quot;caughtBallHuman&quot;) OR &#13;&#10;CONTAINS([caughtBallRobots],&quot;caughtBallRobots&quot;) THEN 1 &#13;&#10;ELSE 0&#13;&#10;END' />
            <calculation column='[Calculation_9010306010337187]' formula='[Calculation_0660306010312790]/[Calculation_6780303164535382]' />
            <calculation column='[Calculation_9080303174733079]' formula='IF CONTAINS([role_catcher],&quot;catcher&quot;) THEN 1 ELSE 0 END' />
            <calculation column='[Calculation_9170301120020898]' formula='[highGoalScores_colored]+[highGoalScores_goalie]+[highGoalScores_white]' />
            <calculation column='[Calculation_9410303172220189]' formula='IF CONTAINS([collectedBall],&quot;collectedBall&quot;) THEN 1&#13;&#10;ELSE 0&#13;&#10;END' />
            <calculation column='[Calculation_9570306003707531]' formula='[highGoalShots_goalie]/[Calculation_7770306003540857]' />
            <calculation column='[Calculation_9890303174831752]' formula='IF CONTAINS([role_soloCycler],&quot;soloCycler&quot;) THEN 1 ELSE 0 END' />
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh increment-key='' incremental-updates='false'>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='13' timestamp-start='2014-03-06 21:08:59.453000' />
          </refresh>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.477848' measure-ordering='alphabetic' measure-percentage='0.522152' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:TEAM_NUM:nk]' type='palette'>
            <map to='#1e1e1e'>
              <bucket>&quot;5041&quot;</bucket>
            </map>
            <map to='#222222'>
              <bucket>&quot;4330&quot;</bucket>
            </map>
            <map to='#272727'>
              <bucket>&quot;4329&quot;</bucket>
            </map>
            <map to='#2c2c2c'>
              <bucket>&quot;4296&quot;</bucket>
            </map>
            <map to='#313131'>
              <bucket>&quot;4212&quot;</bucket>
            </map>
            <map to='#363636'>
              <bucket>&quot;4196&quot;</bucket>
            </map>
            <map to='#3c3c3c'>
              <bucket>&quot;4143&quot;</bucket>
            </map>
            <map to='#414141'>
              <bucket>&quot;3138&quot;</bucket>
            </map>
            <map to='#474747'>
              <bucket>&quot;2481&quot;</bucket>
            </map>
            <map to='#4d4d4d'>
              <bucket>&quot;2451&quot;</bucket>
            </map>
            <map to='#535353'>
              <bucket>&quot;2194&quot;</bucket>
            </map>
            <map to='#595959'>
              <bucket>&quot;2164&quot;</bucket>
            </map>
            <map to='#5f5f5f'>
              <bucket>&quot;2081&quot;</bucket>
            </map>
            <map to='#666666'>
              <bucket>&quot;2040&quot;</bucket>
            </map>
            <map to='#6c6c6c'>
              <bucket>&quot;2022&quot;</bucket>
            </map>
            <map to='#727272'>
              <bucket>&quot;1986&quot;</bucket>
            </map>
            <map to='#797979'>
              <bucket>&quot;1764&quot;</bucket>
            </map>
            <map to='#808080'>
              <bucket>&quot;1756&quot;</bucket>
            </map>
            <map to='#878787'>
              <bucket>&quot;1747&quot;</bucket>
            </map>
            <map to='#8e8e8e'>
              <bucket>&quot;1736&quot;</bucket>
            </map>
            <map to='#959595'>
              <bucket>&quot;1288&quot;</bucket>
            </map>
            <map to='#9d9d9d'>
              <bucket>&quot;1094&quot;</bucket>
            </map>
            <map to='#a4a4a4'>
              <bucket>&quot;967&quot;</bucket>
            </map>
            <map to='#ababab'>
              <bucket>&quot;648&quot;</bucket>
            </map>
            <map to='#b3b3b3'>
              <bucket>&quot;292&quot;</bucket>
            </map>
            <map to='#bbbbbb'>
              <bucket>&quot;171&quot;</bucket>
            </map>
            <map to='#c3c3c3'>
              <bucket>&quot;167&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#1e1e1e'>
              <bucket>&quot;[mysql.41699.488635277776].[sum:Calculation_1140301120102569:qk]&quot;</bucket>
            </map>
            <map to='#414451'>
              <bucket>&quot;[mysql.41699.488635277776].[sum:highGoalScores_goalie:qk]&quot;</bucket>
            </map>
            <map to='#60636a'>
              <bucket>&quot;[mysql.41699.488635277776].[sum:highGoalScores_colored:qk]&quot;</bucket>
            </map>
            <map to='#60636a'>
              <bucket>&quot;[mysql.41699.488635277776].[sum:highGoalShots_white:qk]&quot;</bucket>
            </map>
            <map to='#8f8782'>
              <bucket>&quot;[mysql.41699.488635277776].[sum:highGoalShots_goalie:qk]&quot;</bucket>
            </map>
            <map to='#a5acaf'>
              <bucket>&quot;[mysql.41699.488635277776].[sum:highGoalShots_colored:qk]&quot;</bucket>
            </map>
            <map to='#c3c3c3'>
              <bucket>&quot;[mysql.41699.488635277776].[sum:Calculation_9170301120020898:qk]&quot;</bucket>
            </map>
            <map to='#cfcfcf'>
              <bucket>&quot;[mysql.41699.488635277776].[sum:highGoalScores_white:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Accuracy'>
      <table>
        <view>
          <datasources>
            <datasource caption='team_table (yes)' name='mysql.41699.488635277776' />
          </datasources>
          <datasource-dependencies datasource='mysql.41699.488635277776'>
            <column caption='highGoalShots' datatype='real' name='[Calculation_1140301120102569]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[highGoalShots_colored]+[highGoalShots_goalie]+[highGoalShots_white]' scope-isolation='false' />
            </column>
            <column caption='highGoalScores' datatype='real' name='[Calculation_9170301120020898]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[highGoalScores_colored]+[highGoalScores_goalie]+[highGoalScores_white]' scope-isolation='false' />
            </column>
            <column caption='Match Number' datatype='string' name='[MATCH_NUM]' role='dimension' type='nominal'>
            </column>
            <column caption='Team' datatype='string' name='[TEAM_NUM]' role='dimension' type='nominal'>
            </column>
            <column caption='Scores-Colored' datatype='real' datatype-customized='true' name='[highGoalScores_colored]' role='measure' type='quantitative'>
            </column>
            <column caption='Scores-Goalie' datatype='real' datatype-customized='true' name='[highGoalScores_goalie]' role='measure' type='quantitative'>
            </column>
            <column caption='Scores-White' datatype='real' datatype-customized='true' name='[highGoalScores_white]' role='measure' type='quantitative'>
            </column>
            <column caption='Shots-Colored' datatype='real' datatype-customized='true' name='[highGoalShots_colored]' role='measure' type='quantitative'>
            </column>
            <column caption='Shots-Goalie' datatype='real' datatype-customized='true' name='[highGoalShots_goalie]' role='measure' type='quantitative'>
            </column>
            <column caption='Shots-White' datatype='real' datatype-customized='true' name='[highGoalShots_white]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[MATCH_NUM]' derivation='None' name='[none:MATCH_NUM:nk]' pivot='key' type='nominal' />
            <column-instance column='[TEAM_NUM]' derivation='None' name='[none:TEAM_NUM:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1140301120102569]' derivation='Sum' name='[sum:Calculation_1140301120102569:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_9170301120020898]' derivation='Sum' name='[sum:Calculation_9170301120020898:qk]' pivot='key' type='quantitative' />
            <column-instance column='[highGoalScores_colored]' derivation='Sum' name='[sum:highGoalScores_colored:qk]' pivot='key' type='quantitative' />
            <column-instance column='[highGoalScores_goalie]' derivation='Sum' name='[sum:highGoalScores_goalie:qk]' pivot='key' type='quantitative' />
            <column-instance column='[highGoalScores_white]' derivation='Sum' name='[sum:highGoalScores_white:qk]' pivot='key' type='quantitative' />
            <column-instance column='[highGoalShots_colored]' derivation='Sum' name='[sum:highGoalShots_colored:qk]' pivot='key' type='quantitative' />
            <column-instance column='[highGoalShots_goalie]' derivation='Sum' name='[sum:highGoalShots_goalie:qk]' pivot='key' type='quantitative' />
            <column-instance column='[highGoalShots_white]' derivation='Sum' name='[sum:highGoalShots_white:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[mysql.41699.488635277776].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[mysql.41699.488635277776].[sum:Calculation_9170301120020898:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[mysql.41699.488635277776].[sum:Calculation_1140301120102569:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[mysql.41699.488635277776].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[mysql.41699.488635277776].[sum:highGoalScores_colored:qk]&quot;</bucket>
              <bucket>&quot;[mysql.41699.488635277776].[sum:highGoalShots_colored:qk]&quot;</bucket>
              <bucket>&quot;[mysql.41699.488635277776].[sum:highGoalScores_goalie:qk]&quot;</bucket>
              <bucket>&quot;[mysql.41699.488635277776].[sum:highGoalShots_goalie:qk]&quot;</bucket>
              <bucket>&quot;[mysql.41699.488635277776].[sum:highGoalScores_white:qk]&quot;</bucket>
              <bucket>&quot;[mysql.41699.488635277776].[sum:highGoalShots_white:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[mysql.41699.488635277776].[none:TEAM_NUM:nk]' filter-group='3'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:TEAM_NUM:nk]' member='&quot;1&quot;' />
              <groupfilter function='member' level='[none:TEAM_NUM:nk]' member='&quot;2499&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[mysql.41699.488635277776].[:Measure Names]</column>
            <column>[mysql.41699.488635277776].[none:TEAM_NUM:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[mysql.41699.488635277776].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[mysql.41699.488635277776].[Multiple Values]</rows>
        <cols>([mysql.41699.488635277776].[none:MATCH_NUM:nk] / ([mysql.41699.488635277776].[none:TEAM_NUM:nk] / [mysql.41699.488635277776].[:Measure Names]))</cols>
      </table>
    </worksheet>
    <worksheet name='Alliance'>
      <table>
        <view>
          <datasources>
            <datasource caption='team_alliance_cycle' name='mysql.41704.895000625002' />
          </datasources>
          <datasource-dependencies datasource='mysql.41704.895000625002'>
            <column caption='cycleTime' datatype='real' name='[Calculation_6690306221032891]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[endTime]-[startTime]' scope-isolation='false' />
            </column>
            <column datatype='real' datatype-customized='true' name='[TEAM_NUM]' role='dimension' type='ordinal'>
            </column>
            <column datatype='integer' name='[allianceAutoPoints]' role='measure' type='quantitative'>
            </column>
            <column datatype='integer' name='[allianceFoulPoints]' role='measure' type='quantitative'>
            </column>
            <column datatype='integer' name='[allianceTeleopPoints]' role='measure' type='quantitative'>
            </column>
            <column datatype='integer' name='[allianceTotalPoints]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[Calculation_6690306221032891]' derivation='Avg' name='[avg:Calculation_6690306221032891:qk]' pivot='key' type='quantitative' />
            <column-instance column='[allianceAutoPoints]' derivation='Avg' name='[avg:allianceAutoPoints:qk]' pivot='key' type='quantitative' />
            <column-instance column='[allianceFoulPoints]' derivation='Avg' name='[avg:allianceFoulPoints:qk]' pivot='key' type='quantitative' />
            <column-instance column='[allianceTeleopPoints]' derivation='Avg' name='[avg:allianceTeleopPoints:qk]' pivot='key' type='quantitative' />
            <column-instance column='[allianceTotalPoints]' derivation='Avg' name='[avg:allianceTotalPoints:qk]' pivot='key' type='quantitative' />
            <column-instance column='[numAssists]' derivation='Avg' name='[avg:numAssists:qk]' pivot='key' type='quantitative' />
            <column-instance column='[TEAM_NUM]' derivation='None' name='[none:TEAM_NUM:ok]' pivot='key' type='ordinal' />
            <column aggregation='CountD' datatype='real' datatype-customized='true' name='[numAssists]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[allianceAutoPoints]' derivation='Sum' name='[sum:allianceAutoPoints:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[mysql.41704.895000625002].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[mysql.41704.895000625002].[avg:numAssists:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[mysql.41704.895000625002].[avg:Calculation_6690306221032891:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[mysql.41704.895000625002].[avg:allianceAutoPoints:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[mysql.41704.895000625002].[avg:allianceFoulPoints:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[mysql.41704.895000625002].[avg:allianceTeleopPoints:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[mysql.41704.895000625002].[avg:allianceTotalPoints:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[mysql.41704.895000625002].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[mysql.41704.895000625002].[avg:numAssists:qk]&quot;</bucket>
              <bucket>&quot;[mysql.41704.895000625002].[avg:Calculation_6690306221032891:qk]&quot;</bucket>
              <bucket>&quot;[mysql.41704.895000625002].[sum:allianceAutoPoints:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[mysql.41704.895000625002].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[mysql.41704.895000625002].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([mysql.41704.895000625002].[none:TEAM_NUM:ok] / [mysql.41704.895000625002].[:Measure Names])</rows>
        <cols></cols>
      </table>
    </worksheet>
    <worksheet name='Auto Accuracy'>
      <table>
        <view>
          <datasources>
            <datasource caption='team_table (yes)' name='mysql.41699.488635277776' />
          </datasources>
          <datasource-dependencies datasource='mysql.41699.488635277776'>
            <column caption='ShotsColoredProportion' datatype='real' name='[Calculation_2020306003635320]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[highGoalShots_colored]/[Calculation_7770306003540857]' scope-isolation='false' />
            </column>
            <column caption='autoPoints' datatype='integer' name='[Calculation_2270303165543352]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_2350303165504912]+[Calculation_6620303164959017]+[Calculation_1840303165406454]+[Calculation_4630303165425425]' scope-isolation='false' />
            </column>
            <column caption='autoColorZonePoints' datatype='integer' name='[Calculation_2350303165504912]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF CONTAINS([autoColorZone],&quot;autoColorZone&quot;) THEN 5&#13;&#10;ELSE 0&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='assisterProportion' datatype='real' name='[Calculation_3110305223116631]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_3120303174623405]/[Number of Records]' scope-isolation='false' />
            </column>
            <column caption='assister' datatype='integer' name='[Calculation_3120303174623405]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF CONTAINS([role_assister],&quot;assister&quot;) THEN 1 ELSE 0 END' scope-isolation='false' />
            </column>
            <column caption='ManeuveredTF' datatype='integer' name='[Calculation_3320301120424237]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF CONTAINS([maneuvered],&quot;maneuvered&quot;) THEN 1 ELSE 0 END' scope-isolation='false' />
            </column>
            <column caption='ShotsWhiteProportion' datatype='real' name='[Calculation_3980306003743834]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[highGoalShots_white]/[Calculation_7770306003540857]' scope-isolation='false' />
            </column>
            <column caption='ballOneAutoUsed' datatype='integer' name='[Calculation_4630303164056150]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF CONTAINS([ballOneAuto],&quot;highMake&quot;) OR &#13;&#10;CONTAINS([ballOneAuto],&quot;highMiss&quot;) OR &#13;&#10;CONTAINS([ballOneAuto],&quot;lowMake&quot;) OR&#13;&#10;CONTAINS([ballOneAuto],&quot;lowMiss&quot;)&#13;&#10;THEN 1&#13;&#10;ELSE 0&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='ballOneAutoPoints' datatype='integer' name='[Calculation_6620303164959017]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF CONTAINS([ballOneAuto],&quot;highMake&quot;) AND CONTAINS([autoHotGoalOne],&quot;autoHotGoalOne&quot;) THEN 20&#13;&#10;ELSEIF CONTAINS([ballOneAuto],&quot;highMake&quot;) THEN 15&#13;&#10;ELSEIF CONTAINS([ballOneAuto],&quot;lowMake&quot;) AND CONTAINS([autoHotGoalOne],&quot;autoHotGoalOne&quot;) THEN 11&#13;&#10;ELSEIF CONTAINS([ballOneAuto],&quot;lowMake&quot;) THEN 6&#13;&#10;ELSE 0 &#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='ballOneAutoScored' datatype='integer' name='[Calculation_6720306005744157]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF CONTAINS([ballOneAuto],&quot;highMake&quot;) OR CONTAINS([ballOneAuto],&quot;lowMake&quot;) THEN 1 ELSE 0 END' scope-isolation='false' />
            </column>
            <column caption='ShotsTotal' datatype='real' name='[Calculation_7770306003540857]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[highGoalShots_colored]+[highGoalShots_goalie]+[highGoalShots_white]' scope-isolation='false' />
            </column>
            <column caption='autoAccuracy' datatype='real' name='[Calculation_9010306010337187]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_0660306010312790]/[Calculation_6780303164535382]' scope-isolation='false' />
            </column>
            <column caption='ShotsGoalieProportion' datatype='real' name='[Calculation_9570306003707531]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[highGoalShots_goalie]/[Calculation_7770306003540857]' scope-isolation='false' />
            </column>
            <column caption='Match Number' datatype='string' name='[MATCH_NUM]' role='dimension' type='nominal'>
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Team' datatype='string' name='[TEAM_NUM]' role='dimension' type='nominal'>
            </column>
            <column caption='Scores-Colored' datatype='real' datatype-customized='true' name='[highGoalScores_colored]' role='measure' type='quantitative'>
            </column>
            <column caption='Scores-Goalie' datatype='real' datatype-customized='true' name='[highGoalScores_goalie]' role='measure' type='quantitative'>
            </column>
            <column caption='Scores-White' datatype='real' datatype-customized='true' name='[highGoalScores_white]' role='measure' type='quantitative'>
            </column>
            <column caption='Shots-Colored' datatype='real' datatype-customized='true' name='[highGoalShots_colored]' role='measure' type='quantitative'>
            </column>
            <column caption='Shots-Goalie' datatype='real' datatype-customized='true' name='[highGoalShots_goalie]' role='measure' type='quantitative'>
            </column>
            <column caption='Shots-White' datatype='real' datatype-customized='true' name='[highGoalShots_white]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[MATCH_NUM]' derivation='None' name='[none:MATCH_NUM:nk]' pivot='key' type='nominal' />
            <column-instance column='[TEAM_NUM]' derivation='None' name='[none:TEAM_NUM:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2020306003635320]' derivation='Sum' name='[sum:Calculation_2020306003635320:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2270303165543352]' derivation='Sum' name='[sum:Calculation_2270303165543352:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2350303165504912]' derivation='Sum' name='[sum:Calculation_2350303165504912:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_3110305223116631]' derivation='Sum' name='[sum:Calculation_3110305223116631:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_3120303174623405]' derivation='Sum' name='[sum:Calculation_3120303174623405:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_3320301120424237]' derivation='Sum' name='[sum:Calculation_3320301120424237:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_3980306003743834]' derivation='Sum' name='[sum:Calculation_3980306003743834:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4630303164056150]' derivation='Sum' name='[sum:Calculation_4630303164056150:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_6620303164959017]' derivation='Sum' name='[sum:Calculation_6620303164959017:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_6720306005744157]' derivation='Sum' name='[sum:Calculation_6720306005744157:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_7770306003540857]' derivation='Sum' name='[sum:Calculation_7770306003540857:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_9010306010337187]' derivation='Sum' name='[sum:Calculation_9010306010337187:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_9570306003707531]' derivation='Sum' name='[sum:Calculation_9570306003707531:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[highGoalScores_colored]' derivation='Sum' name='[sum:highGoalScores_colored:qk]' pivot='key' type='quantitative' />
            <column-instance column='[highGoalScores_goalie]' derivation='Sum' name='[sum:highGoalScores_goalie:qk]' pivot='key' type='quantitative' />
            <column-instance column='[highGoalScores_white]' derivation='Sum' name='[sum:highGoalScores_white:qk]' pivot='key' type='quantitative' />
            <column-instance column='[highGoalShots_colored]' derivation='Sum' name='[sum:highGoalShots_colored:qk]' pivot='key' type='quantitative' />
            <column-instance column='[highGoalShots_goalie]' derivation='Sum' name='[sum:highGoalShots_goalie:qk]' pivot='key' type='quantitative' />
            <column-instance column='[highGoalShots_white]' derivation='Sum' name='[sum:highGoalShots_white:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[mysql.41699.488635277776].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[mysql.41699.488635277776].[sum:Calculation_3320301120424237:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[mysql.41699.488635277776].[sum:Number of Records:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[mysql.41699.488635277776].[sum:highGoalScores_colored:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[mysql.41699.488635277776].[sum:highGoalScores_goalie:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[mysql.41699.488635277776].[sum:highGoalScores_white:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[mysql.41699.488635277776].[sum:highGoalShots_colored:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[mysql.41699.488635277776].[sum:highGoalShots_goalie:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[mysql.41699.488635277776].[sum:highGoalShots_white:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[mysql.41699.488635277776].[sum:Calculation_2020306003635320:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[mysql.41699.488635277776].[sum:Calculation_9570306003707531:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[mysql.41699.488635277776].[sum:Calculation_7770306003540857:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[mysql.41699.488635277776].[sum:Calculation_3980306003743834:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[mysql.41699.488635277776].[sum:Calculation_3120303174623405:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[mysql.41699.488635277776].[sum:Calculation_3110305223116631:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[mysql.41699.488635277776].[sum:Calculation_9010306010337187:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[mysql.41699.488635277776].[sum:Calculation_2350303165504912:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[mysql.41699.488635277776].[sum:Calculation_2270303165543352:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[mysql.41699.488635277776].[sum:Calculation_6620303164959017:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[mysql.41699.488635277776].[sum:Calculation_6720306005744157:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[mysql.41699.488635277776].[sum:Calculation_4630303164056150:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[mysql.41699.488635277776].[none:TEAM_NUM:nk]'>
            <groupfilter function='empty-level' member='[none:TEAM_NUM:nk]' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[mysql.41699.488635277776].[:Measure Names]</column>
            <column>[mysql.41699.488635277776].[none:TEAM_NUM:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='subtitle' class='0' field='[mysql.41699.488635277776].[sum:Calculation_9010306010337187:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[mysql.41699.488635277776].[sum:Calculation_9010306010337187:qk]' scope='rows' value='true' />
            <encoding attr='space' class='0' field='[mysql.41699.488635277776].[sum:Calculation_9010306010337187:qk]' field-type='quantitative' max='1.0' min='0.0' range-type='fixed' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[mysql.41699.488635277776].[sum:Calculation_9010306010337187:qk]</rows>
        <cols>([mysql.41699.488635277776].[none:TEAM_NUM:nk] / [mysql.41699.488635277776].[none:MATCH_NUM:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='Avgs'>
      <table>
        <view>
          <datasources>
            <datasource caption='team_table (yes)' name='mysql.41699.488635277776' />
          </datasources>
          <datasource-dependencies datasource='mysql.41699.488635277776'>
            <column caption='highGoalShots' datatype='real' name='[Calculation_1140301120102569]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[highGoalShots_colored]+[highGoalShots_goalie]+[highGoalShots_white]' scope-isolation='false' />
            </column>
            <column caption='highGoalAccuracy' datatype='real' name='[Calculation_2210303163902149]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([Calculation_9170301120020898])/AVG([Calculation_1140301120102569])' scope-isolation='false' />
            </column>
            <column caption='autoPoints' datatype='integer' name='[Calculation_2270303165543352]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_2350303165504912]+[Calculation_6620303164959017]+[Calculation_1840303165406454]+[Calculation_4630303165425425]' scope-isolation='false' />
            </column>
            <column caption='numBallsAutoUsed' datatype='integer' name='[Calculation_6780303164535382]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_4630303164056150]+[Calculation_2530303164410072]+[Calculation_8120303164436437]' scope-isolation='false' />
            </column>
            <column caption='autoAccuracy' datatype='real' name='[Calculation_9010306010337187]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_0660306010312790]/[Calculation_6780303164535382]' scope-isolation='false' />
            </column>
            <column caption='highGoalScores' datatype='real' name='[Calculation_9170301120020898]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[highGoalScores_colored]+[highGoalScores_goalie]+[highGoalScores_white]' scope-isolation='false' />
            </column>
            <column caption='Team' datatype='string' name='[TEAM_NUM]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_1140301120102569]' derivation='Avg' name='[avg:Calculation_1140301120102569:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2270303165543352]' derivation='Avg' name='[avg:Calculation_2270303165543352:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_6780303164535382]' derivation='Avg' name='[avg:Calculation_6780303164535382:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_9170301120020898]' derivation='Avg' name='[avg:Calculation_9170301120020898:qk]' pivot='key' type='quantitative' />
            <column-instance column='[fumbles]' derivation='Avg' name='[avg:fumbles:qk]' pivot='key' type='quantitative' />
            <column-instance column='[passRecvHuman]' derivation='Avg' name='[avg:passRecvHuman:qk]' pivot='key' type='quantitative' />
            <column-instance column='[passRecvRobot]' derivation='Avg' name='[avg:passRecvRobot:qk]' pivot='key' type='quantitative' />
            <column-instance column='[passStarts]' derivation='Avg' name='[avg:passStarts:qk]' pivot='key' type='quantitative' />
            <column-instance column='[passesBlocked]' derivation='Avg' name='[avg:passesBlocked:qk]' pivot='key' type='quantitative' />
            <column-instance column='[shotsBlocked]' derivation='Avg' name='[avg:shotsBlocked:qk]' pivot='key' type='quantitative' />
            <column-instance column='[trussThrowScores]' derivation='Avg' name='[avg:trussThrowScores:qk]' pivot='key' type='quantitative' />
            <column aggregation='CountD' datatype='real' datatype-customized='true' name='[fumbles]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[TEAM_NUM]' derivation='None' name='[none:TEAM_NUM:nk]' pivot='key' type='nominal' />
            <column datatype='real' datatype-customized='true' name='[passRecvHuman]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' datatype-customized='true' name='[passRecvRobot]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' datatype-customized='true' name='[passStarts]' role='measure' type='quantitative'>
            </column>
            <column aggregation='CountD' datatype='real' datatype-customized='true' name='[passesBlocked]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' datatype-customized='true' name='[shotsBlocked]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[Calculation_9010306010337187]' derivation='Sum' name='[sum:Calculation_9010306010337187:qk]' pivot='key' type='quantitative' />
            <column datatype='real' datatype-customized='true' name='[trussThrowScores]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[Calculation_2210303163902149]' derivation='User' name='[usr:Calculation_2210303163902149:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[mysql.41699.488635277776].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[mysql.41699.488635277776].[usr:Calculation_2210303163902149:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[mysql.41699.488635277776].[avg:Calculation_9170301120020898:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[mysql.41699.488635277776].[avg:Calculation_1140301120102569:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[mysql.41699.488635277776].[avg:trussThrowScores:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[mysql.41699.488635277776].[avg:passStarts:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[mysql.41699.488635277776].[avg:shotsBlocked:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[mysql.41699.488635277776].[avg:fumbles:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[mysql.41699.488635277776].[avg:passRecvHuman:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[mysql.41699.488635277776].[avg:passRecvRobot:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[mysql.41699.488635277776].[sum:Calculation_9010306010337187:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[mysql.41699.488635277776].[avg:passesBlocked:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[mysql.41699.488635277776].[avg:Calculation_6780303164535382:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[mysql.41699.488635277776].[avg:Calculation_2270303165543352:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[mysql.41699.488635277776].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[mysql.41699.488635277776].[usr:Calculation_2210303163902149:qk]&quot;</bucket>
              <bucket>&quot;[mysql.41699.488635277776].[avg:Calculation_9170301120020898:qk]&quot;</bucket>
              <bucket>&quot;[mysql.41699.488635277776].[avg:Calculation_1140301120102569:qk]&quot;</bucket>
              <bucket>&quot;[mysql.41699.488635277776].[avg:trussThrowScores:qk]&quot;</bucket>
              <bucket>&quot;[mysql.41699.488635277776].[avg:passStarts:qk]&quot;</bucket>
              <bucket>&quot;[mysql.41699.488635277776].[avg:shotsBlocked:qk]&quot;</bucket>
              <bucket>&quot;[mysql.41699.488635277776].[avg:fumbles:qk]&quot;</bucket>
              <bucket>&quot;[mysql.41699.488635277776].[avg:passRecvHuman:qk]&quot;</bucket>
              <bucket>&quot;[mysql.41699.488635277776].[avg:passRecvRobot:qk]&quot;</bucket>
              <bucket>&quot;[mysql.41699.488635277776].[sum:Calculation_9010306010337187:qk]&quot;</bucket>
              <bucket>&quot;[mysql.41699.488635277776].[avg:passesBlocked:qk]&quot;</bucket>
              <bucket>&quot;[mysql.41699.488635277776].[avg:Calculation_6780303164535382:qk]&quot;</bucket>
              <bucket>&quot;[mysql.41699.488635277776].[avg:Calculation_2270303165543352:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[mysql.41699.488635277776].[none:TEAM_NUM:nk]' filter-group='3'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:TEAM_NUM:nk]' member='&quot;1&quot;' />
              <groupfilter function='member' level='[none:TEAM_NUM:nk]' member='&quot;2499&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[mysql.41699.488635277776].[:Measure Names]</column>
            <column>[mysql.41699.488635277776].[none:TEAM_NUM:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='width' field='[mysql.41699.488635277776].[:Measure Names]' value='184' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' field='[mysql.41699.488635277776].[:Measure Names]' value='12' />
            <format attr='font-weight' field='[mysql.41699.488635277776].[:Measure Names]' value='normal' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[mysql.41699.488635277776].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[mysql.41699.488635277776].[:Measure Names]</rows>
        <cols>[mysql.41699.488635277776].[none:TEAM_NUM:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Booleans'>
      <table>
        <view>
          <datasources>
            <datasource caption='team_table (yes)' name='mysql.41699.488635277776' />
          </datasources>
          <datasource-dependencies datasource='mysql.41699.488635277776'>
            <column caption='humanTrussThrow' datatype='integer' name='[Calculation_0560306115107302]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF CONTAINS([throwsToHumanOverTruss],&quot;throwsToHumanOverTruss&quot;) THEN 1 ELSE 0 END' scope-isolation='false' />
            </column>
            <column caption='defenseStopRobot' datatype='integer' name='[Calculation_0880301121037679]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF CONTAINS([defense_stopRobot],&quot;defense_stopRobot&quot;) THEN 1 ELSE 0 END' scope-isolation='false' />
            </column>
            <column caption='ManeuveredTF' datatype='integer' name='[Calculation_3320301120424237]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF CONTAINS([maneuvered],&quot;maneuvered&quot;) THEN 1 ELSE 0 END' scope-isolation='false' />
            </column>
            <column caption='linesUpToLow' datatype='integer' name='[Calculation_3520306115231628]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF CONTAINS([lineUpToLow],&quot;lineUpToLow&quot;) THEN 1 ELSE 0 END' scope-isolation='false' />
            </column>
            <column caption='defenseStopGettingBall' datatype='integer' name='[Calculation_3890301121008021]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF CONTAINS([defense_stopGettingBall],&quot;defense_stopGettingBall&quot;) THEN 1 ELSE 0 END' scope-isolation='false' />
            </column>
            <column caption='defenseInGoalie' datatype='integer' name='[Calculation_6720301120947213]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF CONTAINS([defense_inGoalie],&quot;defense_inGoalie&quot;) THEN 1 ELSE 0 END' scope-isolation='false' />
            </column>
            <column caption='robotCatches' datatype='integer' name='[Calculation_9010303172052832]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF CONTAINS([caughtBallHuman],&quot;caughtBallHuman&quot;) OR &#13;&#10;CONTAINS([caughtBallRobots],&quot;caughtBallRobots&quot;) THEN 1 &#13;&#10;ELSE 0&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='collector' datatype='integer' name='[Calculation_9410303172220189]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF CONTAINS([collectedBall],&quot;collectedBall&quot;) THEN 1&#13;&#10;ELSE 0&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Team' datatype='string' name='[TEAM_NUM]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_0560306115107302]' derivation='Avg' name='[avg:Calculation_0560306115107302:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_0880301121037679]' derivation='Avg' name='[avg:Calculation_0880301121037679:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_3320301120424237]' derivation='Avg' name='[avg:Calculation_3320301120424237:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_3520306115231628]' derivation='Avg' name='[avg:Calculation_3520306115231628:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_3890301121008021]' derivation='Avg' name='[avg:Calculation_3890301121008021:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_6720301120947213]' derivation='Avg' name='[avg:Calculation_6720301120947213:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_9010303172052832]' derivation='Avg' name='[avg:Calculation_9010303172052832:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_9410303172220189]' derivation='Avg' name='[avg:Calculation_9410303172220189:qk]' pivot='key' type='quantitative' />
            <column-instance column='[TEAM_NUM]' derivation='None' name='[none:TEAM_NUM:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_0560306115107302]' derivation='Sum' name='[sum:Calculation_0560306115107302:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[mysql.41699.488635277776].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[mysql.41699.488635277776].[avg:Calculation_3320301120424237:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[mysql.41699.488635277776].[avg:Calculation_9410303172220189:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[mysql.41699.488635277776].[avg:Calculation_6720301120947213:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[mysql.41699.488635277776].[avg:Calculation_3890301121008021:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[mysql.41699.488635277776].[avg:Calculation_0880301121037679:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[mysql.41699.488635277776].[avg:Calculation_9010303172052832:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[mysql.41699.488635277776].[avg:Calculation_0560306115107302:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[mysql.41699.488635277776].[avg:Calculation_3520306115231628:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[mysql.41699.488635277776].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[mysql.41699.488635277776].[avg:Calculation_3320301120424237:qk]&quot;</bucket>
              <bucket>&quot;[mysql.41699.488635277776].[avg:Calculation_9410303172220189:qk]&quot;</bucket>
              <bucket>&quot;[mysql.41699.488635277776].[avg:Calculation_6720301120947213:qk]&quot;</bucket>
              <bucket>&quot;[mysql.41699.488635277776].[avg:Calculation_3890301121008021:qk]&quot;</bucket>
              <bucket>&quot;[mysql.41699.488635277776].[avg:Calculation_0880301121037679:qk]&quot;</bucket>
              <bucket>&quot;[mysql.41699.488635277776].[avg:Calculation_9010303172052832:qk]&quot;</bucket>
              <bucket>&quot;[mysql.41699.488635277776].[sum:Calculation_0560306115107302:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[mysql.41699.488635277776].[none:TEAM_NUM:nk]' filter-group='3'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:TEAM_NUM:nk]' member='&quot;1&quot;' />
              <groupfilter function='member' level='[none:TEAM_NUM:nk]' member='&quot;2499&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[mysql.41699.488635277776].[:Measure Names]</column>
            <column>[mysql.41699.488635277776].[none:TEAM_NUM:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[mysql.41699.488635277776].[:Measure Names]' value='19' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[mysql.41699.488635277776].[:Measure Names]' value='232' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' field='[mysql.41699.488635277776].[:Measure Names]' value='normal' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[mysql.41699.488635277776].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[mysql.41699.488635277776].[:Measure Names]</rows>
        <cols>[mysql.41699.488635277776].[none:TEAM_NUM:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Comments'>
      <table>
        <view>
          <datasources>
            <datasource caption='team_table (yes)' name='mysql.41699.488635277776' />
          </datasources>
          <datasource-dependencies datasource='mysql.41699.488635277776'>
            <column caption='Team' datatype='string' name='[TEAM_NUM]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[breakDescription]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[matchComments]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[TEAM_NUM]' derivation='None' name='[none:TEAM_NUM:nk]' pivot='key' type='nominal' />
            <column-instance column='[breakDescription]' derivation='None' name='[none:breakDescription:nk]' pivot='key' type='nominal' />
            <column-instance column='[matchComments]' derivation='None' name='[none:matchComments:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[mysql.41699.488635277776].[none:TEAM_NUM:nk]'>
            <groupfilter function='empty-level' member='[none:TEAM_NUM:nk]' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[mysql.41699.488635277776].[none:matchComments:nk]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:matchComments:nk]' />
              <groupfilter function='member' level='[none:matchComments:nk]' member='&quot;&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[mysql.41699.488635277776].[none:TEAM_NUM:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[mysql.41699.488635277776].[none:breakDescription:nk]' value='135' />
            <format attr='width' field='[mysql.41699.488635277776].[none:matchComments:nk]' value='478' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[mysql.41699.488635277776].[none:matchComments:nk]' value='62' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows></rows>
        <cols>([mysql.41699.488635277776].[none:TEAM_NUM:nk] / ([mysql.41699.488635277776].[none:breakDescription:nk] / [mysql.41699.488635277776].[none:matchComments:nk]))</cols>
      </table>
    </worksheet>
    <worksheet name='Preferred Shot Position'>
      <table>
        <view>
          <datasources>
            <datasource caption='team_table (yes)' name='mysql.41699.488635277776' />
          </datasources>
          <datasource-dependencies datasource='mysql.41699.488635277776'>
            <column caption='ShotsColoredProportion' datatype='real' name='[Calculation_2020306003635320]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[highGoalShots_colored]/[Calculation_7770306003540857]' scope-isolation='false' />
            </column>
            <column caption='ShotsWhiteProportion' datatype='real' name='[Calculation_3980306003743834]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[highGoalShots_white]/[Calculation_7770306003540857]' scope-isolation='false' />
            </column>
            <column caption='ShotsGoalieProportion' datatype='real' name='[Calculation_9570306003707531]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[highGoalShots_goalie]/[Calculation_7770306003540857]' scope-isolation='false' />
            </column>
            <column caption='Match Number' datatype='string' name='[MATCH_NUM]' role='dimension' type='nominal'>
            </column>
            <column caption='Team' datatype='string' name='[TEAM_NUM]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[MATCH_NUM]' derivation='None' name='[none:MATCH_NUM:nk]' pivot='key' type='nominal' />
            <column-instance column='[TEAM_NUM]' derivation='None' name='[none:TEAM_NUM:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2020306003635320]' derivation='Sum' name='[sum:Calculation_2020306003635320:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_3980306003743834]' derivation='Sum' name='[sum:Calculation_3980306003743834:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_9570306003707531]' derivation='Sum' name='[sum:Calculation_9570306003707531:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[mysql.41699.488635277776].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[mysql.41699.488635277776].[sum:Calculation_2020306003635320:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[mysql.41699.488635277776].[sum:Calculation_9570306003707531:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[mysql.41699.488635277776].[sum:Calculation_3980306003743834:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[mysql.41699.488635277776].[none:TEAM_NUM:nk]' filter-group='3'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:TEAM_NUM:nk]' member='&quot;1&quot;' />
              <groupfilter function='member' level='[none:TEAM_NUM:nk]' member='&quot;2499&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[mysql.41699.488635277776].[none:TEAM_NUM:nk]</column>
            <column>[mysql.41699.488635277776].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[mysql.41699.488635277776].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([mysql.41699.488635277776].[none:TEAM_NUM:nk] / [mysql.41699.488635277776].[none:MATCH_NUM:nk])</rows>
        <cols>[mysql.41699.488635277776].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='Roles'>
      <table>
        <view>
          <datasources>
            <datasource caption='team_table (yes)' name='mysql.41699.488635277776' />
          </datasources>
          <datasource-dependencies datasource='mysql.41699.488635277776'>
            <column caption='defenseProportion' datatype='real' name='[Calculation_1010305223043753]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_2400303174747658]/[Number of Records]' scope-isolation='false' />
            </column>
            <column caption='soloTrussCatcherProportion' datatype='real' name='[Calculation_2310305223237409]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_3480303174853084]/[Number of Records]' scope-isolation='false' />
            </column>
            <column caption='ballTwoAutoUsed' datatype='integer' name='[Calculation_2530303164410072]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF CONTAINS([ballTwoAuto],&quot;highMake&quot;) OR &#13;&#10;CONTAINS([ballTwoAuto],&quot;highMiss&quot;) OR &#13;&#10;CONTAINS([ballTwoAuto],&quot;lowMake&quot;) OR&#13;&#10;CONTAINS([ballTwoAuto],&quot;lowMiss&quot;)&#13;&#10;THEN 1&#13;&#10;ELSE 0&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='assisterProportion' datatype='real' name='[Calculation_3110305223116631]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_3120303174623405]/[Number of Records]' scope-isolation='false' />
            </column>
            <column caption='soloCyclerProportion' datatype='real' name='[Calculation_6160305223212906]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_9890303174831752]/[Number of Records]' scope-isolation='false' />
            </column>
            <column caption='shooterProportion' datatype='real' name='[Calculation_8100305223149782]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_8670303174818409]/[Number of Records]' scope-isolation='false' />
            </column>
            <column caption='catcherProportion' datatype='real' name='[Calculation_8320305222936780]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_9080303174733079]/[Number of Records]' scope-isolation='false' />
            </column>
            <column caption='catcher(role)' datatype='integer' name='[Calculation_9080303174733079]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF CONTAINS([role_catcher],&quot;catcher&quot;) THEN 1 ELSE 0 END' scope-isolation='false' />
            </column>
            <column caption='Team' datatype='string' name='[TEAM_NUM]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[TEAM_NUM]' derivation='None' name='[none:TEAM_NUM:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1010305223043753]' derivation='Sum' name='[sum:Calculation_1010305223043753:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2310305223237409]' derivation='Sum' name='[sum:Calculation_2310305223237409:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2530303164410072]' derivation='Sum' name='[sum:Calculation_2530303164410072:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_3110305223116631]' derivation='Sum' name='[sum:Calculation_3110305223116631:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_6160305223212906]' derivation='Sum' name='[sum:Calculation_6160305223212906:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_8100305223149782]' derivation='Sum' name='[sum:Calculation_8100305223149782:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_8320305222936780]' derivation='Sum' name='[sum:Calculation_8320305222936780:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_9080303174733079]' derivation='Sum' name='[sum:Calculation_9080303174733079:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[mysql.41699.488635277776].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[mysql.41699.488635277776].[sum:Calculation_8320305222936780:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[mysql.41699.488635277776].[sum:Calculation_3110305223116631:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[mysql.41699.488635277776].[sum:Calculation_1010305223043753:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[mysql.41699.488635277776].[sum:Calculation_8100305223149782:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[mysql.41699.488635277776].[sum:Calculation_6160305223212906:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[mysql.41699.488635277776].[sum:Calculation_2310305223237409:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[mysql.41699.488635277776].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[mysql.41699.488635277776].[sum:Calculation_2530303164410072:qk]&quot;</bucket>
              <bucket>&quot;[mysql.41699.488635277776].[sum:Calculation_9080303174733079:qk]&quot;</bucket>
              <bucket>&quot;[mysql.41699.488635277776].[sum:Calculation_8320305222936780:qk]&quot;</bucket>
              <bucket>&quot;[mysql.41699.488635277776].[sum:Calculation_3110305223116631:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[mysql.41699.488635277776].[none:TEAM_NUM:nk]' filter-group='3'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:TEAM_NUM:nk]' member='&quot;1&quot;' />
              <groupfilter function='member' level='[none:TEAM_NUM:nk]' member='&quot;2499&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[mysql.41699.488635277776].[none:TEAM_NUM:nk]</column>
            <column>[mysql.41699.488635277776].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[mysql.41699.488635277776].[none:TEAM_NUM:nk]' value='98' />
            <format attr='width' value='117' />
            <format attr='height' field='[mysql.41699.488635277776].[none:TEAM_NUM:nk]' value='24' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[mysql.41699.488635277776].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[mysql.41699.488635277776].[:Measure Names]</rows>
        <cols>[mysql.41699.488635277776].[none:TEAM_NUM:nk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <style>
      </style>
      <size maxheight='1600' maxwidth='1000' minheight='1600' minwidth='1000' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='95250' id='11' param='horz' type='layout-flow' w='100000' x='0' y='4750'>
            <zone fixed-size='384' h='95250' id='8' is-fixed='true' param='horz' type='layout-flow' w='38400' x='0' y='4750'>
              <zone fixed-size='234' h='95250' id='5' is-fixed='true' param='horz' type='layout-flow' w='38400' x='0' y='4750'>
                <zone h='95250' id='3' type='layout-basic' w='38400' x='0' y='4750'>
                  <zone h='57431' id='1' name='Avgs' show-title='true' w='38400' x='0' y='19625'>
                  </zone>
                  <zone h='14875' id='6' name='Booleans' show-title='true' w='38400' x='0' y='4750'>
                  </zone>
                  <zone h='22944' id='20' type='text' w='38400' x='0' y='77056'>
                    <formatted-text>
                      <run fontsize='14'>This team had 1 match out of 1 where they did not shoot any balls in autonomous.</run>
                    </formatted-text>
                  </zone>
                </zone>
              </zone>
            </zone>
            <zone fixed-size='492' h='95250' id='10' is-fixed='true' param='vert' type='layout-flow' w='49200' x='38400' y='4750'>
              <zone h='3938' id='13' name='Accuracy' param='[mysql.41699.488635277776].[:Measure Names]' type='color' w='49200' x='38400' y='4750'>
              </zone>
              <zone h='10938' id='21' name='Alliance' show-title='true' w='49200' x='38400' y='8688'>
                <layout-cache fixed-size-w='282' type-h='fixed' type-w='fixed' />
              </zone>
              <zone h='2188' id='14' name='Comments' show-title='true' w='49200' x='38400' y='19626'>
                <layout-cache fixed-size-w='485' type-h='fixed' type-w='fixed' />
              </zone>
              <zone fixed-size='202' h='13125' id='15' is-fixed='true' name='Roles' show-title='true' w='49200' x='38400' y='21814'>
                <layout-cache fixed-size-w='260' type-h='fixed' type-w='fixed' />
              </zone>
              <zone h='4688' id='16' name='Preferred Shot Position' show-title='true' w='49200' x='38400' y='34939'>
                <layout-cache fixed-size-w='342' type-h='fixed' type-w='fixed' />
              </zone>
              <zone fixed-size='795' h='50188' id='9' is-fixed='true' name='Accuracy' show-title='true' w='49200' x='38400' y='39627'>
                <layout-cache cell-count-w='2' minheight='207' non-cell-size-w='41' type-h='scalable' type-w='cell' />
              </zone>
            </zone>
            <zone h='95250' id='19' name='Auto Accuracy' show-title='true' w='900' x='87600' y='4750'>
              <layout-cache type-h='fixed' type-w='cell' />
            </zone>
          </zone>
          <zone h='4750' id='18' type='text' w='100000' x='0' y='0'>
            <formatted-text>
              <run bold='true' fontsize='16'>2499</run>
            </formatted-text>
          </zone>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows>
    <window class='schema' source-height='64' />
    <window auto-hidden='0' class='worksheet' maximized='1' name='Alliance'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[mysql.41704.895000625002].[:Measure Names]</field>
          <field>[mysql.41704.895000625002].[none:MATCH_NUM:ok]</field>
          <field>[mysql.41704.895000625002].[none:TEAM_NUM:nk]</field>
          <field>[mysql.41704.895000625002].[none:TEAM_NUM:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Avgs'>
      <cards>
        <edge name='left'>
          <strip size='158'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[mysql.41699.488635277776].[none:TEAM_NUM:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[mysql.41699.488635277776].[:Measure Names]</field>
          <field>[mysql.41699.488635277776].[none:TEAM_NUM:nk]</field>
          <field>[mysql.41699.488635277776].[none:matchComments:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Booleans'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[mysql.41699.488635277776].[none:TEAM_NUM:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[mysql.41699.488635277776].[:Measure Names]</field>
          <field>[mysql.41699.488635277776].[none:Calculation_3320301120424237:nk]</field>
          <field>[mysql.41699.488635277776].[none:TEAM_NUM:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Accuracy'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card size='37' type='pages' />
            <card size='73' type='filters' />
            <card size='182' type='marks' />
            <card size='98' type='measures' />
            <card pane-specification-id='0' param='[mysql.41699.488635277776].[:Measure Names]' size='121' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[mysql.41699.488635277776].[none:TEAM_NUM:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[mysql.41699.488635277776].[none:MATCH_NUM:nk]</field>
          <field>[mysql.41699.488635277776].[none:TEAM_NUM:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Auto Accuracy'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[mysql.41699.488635277776].[none:TEAM_NUM:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[mysql.41699.488635277776].[:Measure Names]</field>
          <field>[mysql.41699.488635277776].[none:MATCH_NUM:nk]</field>
          <field>[mysql.41699.488635277776].[none:TEAM_NUM:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Comments'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[mysql.41699.488635277776].[none:TEAM_NUM:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[mysql.41699.488635277776].[:Measure Names]</field>
          <field>[mysql.41699.488635277776].[none:TEAM_NUM:nk]</field>
          <field>[mysql.41699.488635277776].[none:breakDescription:nk]</field>
          <field>[mysql.41699.488635277776].[none:matchComments:nk]</field>
          <field>[mysql.41699.488635277776].[none:robotBreakage:nk]</field>
          <field>[mysql.41699.488635277776].[usr:Calculation_7140303175912315:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Roles'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[mysql.41699.488635277776].[none:TEAM_NUM:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[mysql.41699.488635277776].[:Measure Names]</field>
          <field>[mysql.41699.488635277776].[none:TEAM_NUM:nk]</field>
          <field>[mysql.41699.488635277776].[usr:Calculation_7140303175912315:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Preferred Shot Position'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[mysql.41699.488635277776].[none:TEAM_NUM:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[mysql.41699.488635277776].[none:MATCH_NUM:nk]</field>
          <field>[mysql.41699.488635277776].[none:TEAM_NUM:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='0' name='Dashboard 1'>
      <active id='1' />
      <zones>
        <zone forceUpdate='true' name='' type='text' />
        <zone name='Accuracy' pane-specification-id='0' param='[mysql.41699.488635277776].[:Measure Names]' type='color' />
        <zone name='Accuracy'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='Auto Accuracy'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
      </zones>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='164' name='Alliance' width='192'>
      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
      Bl1SNF8AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Avgs' width='191'>
      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
      ns6fSD7/lAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Booleans' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAIAAADdvvtQAAAAA3NCSVQICAjb4U/gAAAACXBI
      WXMAAA7EAAAOxAGVKw4bAAAgAElEQVR4nOy9Z4Ac13Xneyp1V+ec0/TM9OSMQc4ZpMQEZioH
      B1nJz5bXWr/1rrxe+1lykrSWJSuTVGAAiEjknGaAweScu3u6ezrnXOl9GIAEKADEcEhIlPr3
      sau67q17/3VuOvdchOM4KFHivYL+tjNQ4sNNSUAllkRJQCWWRElAJZZESUAllkRJQCWWRElA
      JZZESUAllkRJQCWWRElAJZZESUAllkRJQCWWRElAJZZESUAllkRJQCWWRElAJZZESUAllkRJ
      QCWWRElAJZZESUAllkRJQCWWRElAJZZESUAllkRJQCWWRElAJZZESUAllkRJQCWWRElAJZZE
      SUAllkRJQCWWRElAJZZESUAllkRJQCWWRElAJZZESUAllkRJQCWWRElAJZZESUAllkRJQCWW
      RElAJZZESUAllkRJQCWWRElAJZZESUAllkRJQCWWRElAJZYEfsdf8/m80+l8sDkp8aEEueN5
      YaVDxErcJ3cW0D3hWJZlaJoFFMdxDEU+kHxxHMsyDMMhGIqiKIogt17hWJZhAcFQHP19bII5
      lmUYmkMwDEVYhmbYO9UQcqP0WYaiGfY3KhHFCfy2YvuguHMTdi84er7n2N5f/6pXsG730899
      pFn1gdRhMea6/uZL++cM69ZtWrfGocJvFgVHJeaGLp86MoE3b9j+yDLjB5H4b5mUt//or14a
      1z33uR1k/74XX70WAQCOpSmKAYzg4SgAgG3jx59+ZHujxnX2By/uvzKZIPDbPuWm5//uMxvL
      lIIPPLOLFhBHBX3eAIVa9EjOOTUTalTqPhAjxDFUJjE/4u/E8zyT/aEK4mby/onBK+fPT2Ct
      tcwHkOzvFKSx+eEv/tvDXwQACPQd2nu4G2t79vmHa6XvuE+16oU/enpLs/GDl8tvslgBcbl5
      76wrjjWtWEl4Jjyzbn+L1kggAMAxhVy2yBKkgE9gCAAAR+XSWQYXCvg4CnQ+ky3QDAcYThJI
      vsCSEgmJIfc0skKpVKlWZyYnvTsqyjAAAC7rmUtm86TdQtySJ5amCvl8gWI4DgDDeaSAJDAM
      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
    </thumbnail>
    <thumbnail height='192' name='Accuracy' width='164'>
      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
    </thumbnail>
    <thumbnail height='164' name='Roles' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAACkCAIAAABO27YcAAAAA3NCSVQICAjb4U/gAAAACXBI
      WXMAAA7EAAAOxAGVKw4bAAAX70lEQVR4nO2dfzxU+f7H33XQ5ZJti8qPBvkVJZJIdtvtl1Z7
      dXWtR9qaZSn6naSU7NaWUopImsosSc2uZrPrbrZfdre71q/xK8n1K9HgWyOVCkuO/f4xjDFz
      hsahu+n9/GMf68znfD7v+cxrPmeO+Xg24s8//wQEGSgj/9cFIG82GCCEFhgghBYYIIQWGCCE
      FhgghBYYIIQWGCCEFhgghBYYIIQWGCCEFhgghBYYIIQWGCCEFhgghBYYIIQWGCCEFhgghBYY
      IIQWGCCEFhgghBYYIIQWGCCEFhgghBYYIIQWGCCEFhgghBYYIIQWGCCEFhgghBYYIIQWGCCE
      FhgghBYYIIQWGCCEFhgghBYYIIQWGCCEFhgghBYYIIQWGCCEFhgghBYYIIQWGCCEFhgghBYY
      IIQWGCCEFgqyHigtLX2ddSBvKCPwH5xD6ICXMIQWGCCEFhgghBYYIIQWgx6g52XJBxLzKR+q
      Sw5wc4viydMbL8pNxAqPzVH/EZCDUqUUorIHUORbzWAHqO5GLKfw8aC+ygz3iKSkJM6Z9ZbP
      0llnM1sHs+9uesrWdglLStpkMxSDDEtk/h6Iivbq1GNHOLmCtlGaM1ft8F+kC/xrRw+dyxW0
      KahMnLt+vw/E+XFqAGrC3PjuESFWtyRaAwDwrxzeEJUrIN+19AreNV+bFGTFHjqRxm8bpTlz
      2ca1LialUW5h6Qxj4wflD+fvPWMuGptQnzPHKjKD3/CYF+XX04Ll1BR7lHXzXguoTLR089vi
      pKfEi3ILSze1cXhclC4AzfmbDvrYqMHzsuSTxy/lCtpGjTaav377Kiv1/J6BzKc15XeXvdM+
      4yBHNyBpkw0pyKLqutrecULlr7kC0HUK2ONhoTa4r8cbhxwrEHnnXEj8fw3Xs5PYq3UKYw9z
      7z1J+zr2ueMRThLb2+j/0pJu1NlsinBnADgEJIU5P5VsLezlkdr7B8+xfc0fFyZeuQONV4+H
      35q6MzEpcbcNnxPKKRKuXc1Gq+I5J1YYi4/e9PvvBaCgqfGueAtF7r7wmyM+PpDIOek7uSJ+
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='44' name='Preferred Shot Position' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAAAsCAIAAAC8OCCpAAAAA3NCSVQICAjb4U/gAAAACXBI
      WXMAAA7EAAAOxAGVKw4bAAAEeklEQVR4nO3ba0xbZRzH8R8rQUdTG8Z1qQYIYqF7ASp1ZGtw
      3l4IRsXBWUBQkC3DrKuOpMBUlrAl24QArrhRHWQ1EDorCbplZGJcNlYGWRkiDgOSgKTrshYK
      sqYwmx7xBRRj3NTuoVyy/+fdac9pnqf59pxenvrNzc2BkPu1bqUHQNY2CogwoYAIEwqIMKGA
      CBMKiDChgAgTCogwoYAIEwqIMKGACBMKiDChgAgTCojM483tFcpcjuOy80p0/Q7A0qrmOI3p
      Pw6jgAgAYLbrtK7njxcP6RsK48xtNYaB/3mcv09HRdaM6Um7GwAgSiltTgEAyy8AzOcrlJoe
      G78hsaDsgxck4G3d9VXaS6MzCNyYyO17P4HOQAQAEPHcdoV44lz5ngO6zht3eM/NE6KUI40N
      hZsm+5rODwCjLYeqL/m9crhJX1cYM6wr196kgMg8kVx1XFOcKXN+f6zonQ9bzfMNJSTLRRBJ
      ZZFwOmdg6eux4pnX06MCBOLk1G0hTmMXBUQWBUQkpauqdEVb3CNfnf0RALBOIPj3YyggAgC8
      SZPN5X/S7QA/MW4HgoOD7rKXJDEpHFe/bv3VxU93t12cEG9T0JtoAgACeX5pqlVzvID7HQ+F
      Je0syYjGmX/uFp1RVvTbsfqyHAMfuDFx54HdT/nRvzIIC7qEESYUEGFCAREmFBBhQgERJvf8
      GD84OLic4yBrFH2MJ0zoEkaYUECECQVEmFBAhIlXATn6dSV52RzH5So1HbbFRUcOk2aXZ/Ws
      Z2WtZ2HtXwflKivazfy9Hnr1cg19sXdxaTBv69D8fXoPOm8CGv7mRJtts7pJX8sFGbWfXZwC
      AMz2Nn5unF7YZbSlor7v0V0N+rq3gtqPao2zs0bt0baZlw7qmz6Sm+srWkaXfAa+5LrVeaK4
      /JzVs23/tlY7lValN+j2y66dbFtbk/ENbwKKzdEaTr37ZIDgEbEQ7tu3ZwDM9p6qMz4cHrKw
      y4TVCok0RiQQS6USt6n3+uS4zY3YJx4XBEhlsbD29Fl8MAlfsXxnuJ5Qukfh2Z66ZrKnvfly
      mAAB0rdra3dEr+TgVon7eA/kMJ1s7IV/WOiG+XxiCpXPCxfuCwkPh2VoaJp3mMcmAPONO6Fh
      /hj+ecjFm8fMwJj55pIO37ckaardWyMCFrft49ZgZ8/hwmy6hC3ybkGZ5UypumnELVaoG1Ry
      kUnDVRoBfFrWC2CskoPaoKo17AAASGVRuBoaGaNIb154BcfHCSGIemxpx7+s1gcKh+wxBm0z
      YGlV7zvYWlOZLlnpQa0wb85A9vb60yNu4ZaiapVcBECuMsyryYoEFGqDSu7oqMrLLjtrdVm7
      uoaEyfJ4DH/5Xm5+3Q8uV39ntzNy89MRvprJMpAkJoX/1NU9zfO2/n6LeFPcg14PvDoD3eq8
      MOAG3FeqC64AiMy6y+tPtJV740KZfm+OISwpszRfvh5IzVFc1hzJuRwY/WyR+tW1/ZRHZxRn
      Vn2szKrmA2Wv7d8ev9LjWQXotzDChL5IJEwoIMLkT4skqfxC1cdaAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      Y1HQrTr1If8/8YaO7jVkDN8AAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
