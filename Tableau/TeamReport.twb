<?xml version='1.0' encoding='utf-8' ?>

<workbook version='8.2' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <!-- build 8100.14.0213.2024                -->
  <preferences>
  </preferences>
  <datasources>
    <datasource caption='team_table (yes)' inline='true' name='mysql.41699.488635277776' version='8.2'>
      <connection class='mysql' dbname='yes' odbc-native-protocol='yes' port='3306' server='169.254.228.182' username='root'>
        <relation name='team_table' table='[team_table]' type='table' />
        <refresh increment-key='' incremental-updates='false'>
        </refresh>
      </connection>
      <aliases enabled='yes' />
      <column caption='humanTrussThrow' datatype='integer' name='[Calculation_0560306115107302]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF CONTAINS([throwsToHumanOverTruss],&quot;throwsToHumanOverTruss&quot;) THEN 1 ELSE 0 END' scope-isolation='false' />
      </column>
      <column caption='numBallsAutoScored' datatype='integer' name='[Calculation_0660306010312790]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_6720306005744157]+[Calculation_2650306010036590]+[Calculation_5400306010106313]' scope-isolation='false' />
      </column>
      <column caption='defenseStopRobot' datatype='integer' name='[Calculation_0880301121037679]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF CONTAINS([defense_stopRobot],&quot;defense_stopRobot&quot;) THEN 1 ELSE 0 END' scope-isolation='false' />
      </column>
      <column caption='defenseProportion' datatype='real' name='[Calculation_1010305223043753]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_2400303174747658]/[Number of Records]' scope-isolation='false' />
      </column>
      <column caption='highGoalShots' datatype='real' name='[Calculation_1140301120102569]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[highGoalShots_colored]+[highGoalShots_goalie]+[highGoalShots_white]' scope-isolation='false' />
      </column>
      <column caption='ballTwoAutoPoints' datatype='integer' name='[Calculation_1840303165406454]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF CONTAINS([ballTwoAuto],&quot;highMake&quot;) AND CONTAINS([autoHotGoalTwo],&quot;autoHotGoalTwo&quot;) THEN 20&#13;&#10;ELSEIF CONTAINS([ballTwoAuto],&quot;highMake&quot;) THEN 15&#13;&#10;ELSEIF CONTAINS([ballTwoAuto],&quot;lowMake&quot;) AND CONTAINS([autoHotGoalTwo],&quot;autoHotGoalTwo&quot;) THEN 11&#13;&#10;ELSEIF CONTAINS([ballTwoAuto],&quot;lowMake&quot;) THEN 6&#13;&#10;ELSE 0 &#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='ShotsColoredProportion' datatype='real' name='[Calculation_2020306003635320]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[highGoalShots_colored]/[Calculation_7770306003540857]' scope-isolation='false' />
      </column>
      <column caption='highGoalAccuracy' datatype='real' name='[Calculation_2210303163902149]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([highGoalScores_colored]+[highGoalScores_goalie]+[highGoalScores_white])/([highGoalShots_colored]+[highGoalShots_goalie]+[highGoalShots_white])' scope-isolation='false' />
      </column>
      <column caption='autoPoints' datatype='integer' name='[Calculation_2270303165543352]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_2350303165504912]+[Calculation_6620303164959017]+[Calculation_1840303165406454]+[Calculation_4630303165425425]' scope-isolation='false' />
      </column>
      <column caption='soloTrussCatcherProportion' datatype='real' name='[Calculation_2310305223237409]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_3480303174853084]/[Number of Records]' scope-isolation='false' />
      </column>
      <column caption='autoColorZonePoints' datatype='integer' name='[Calculation_2350303165504912]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF CONTAINS([autoColorZone],&quot;autoColorZone&quot;) THEN 5&#13;&#10;ELSE 0&#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='defense' datatype='integer' name='[Calculation_2400303174747658]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF CONTAINS([role_defense],&quot;defense&quot;) THEN 1 ELSE 0 END' scope-isolation='false' />
      </column>
      <column caption='ballTwoAutoUsed' datatype='integer' name='[Calculation_2530303164410072]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF CONTAINS([ballTwoAuto],&quot;highMake&quot;) OR &#13;&#10;CONTAINS([ballTwoAuto],&quot;highMiss&quot;) OR &#13;&#10;CONTAINS([ballTwoAuto],&quot;lowMake&quot;) OR&#13;&#10;CONTAINS([ballTwoAuto],&quot;lowMiss&quot;)&#13;&#10;THEN 1&#13;&#10;ELSE 0&#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='ballTwoAutoScored' datatype='integer' name='[Calculation_2650306010036590]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF CONTAINS([ballTwoAuto],&quot;highMake&quot;) OR CONTAINS([ballTwoAuto],&quot;lowMake&quot;) THEN 1 ELSE 0 END' scope-isolation='false' />
      </column>
      <column caption='assisterProportion' datatype='real' name='[Calculation_3110305223116631]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_3120303174623405]/[Number of Records]' scope-isolation='false' />
      </column>
      <column caption='assister' datatype='integer' name='[Calculation_3120303174623405]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF CONTAINS([role_assister],&quot;assister&quot;) THEN 1 ELSE 0 END' scope-isolation='false' />
      </column>
      <column caption='ManeuveredTF' datatype='integer' name='[Calculation_3320301120424237]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF CONTAINS([maneuvered],&quot;maneuvered&quot;) THEN 1 ELSE 0 END' scope-isolation='false' />
      </column>
      <column caption='soloTrussCatcher' datatype='integer' name='[Calculation_3480303174853084]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF CONTAINS([role_soloTrussCatcher],&quot;soloTrussCatcher&quot;) THEN 1 ELSE 0 END' scope-isolation='false' />
      </column>
      <column caption='linesUpToLow' datatype='integer' name='[Calculation_3520306115231628]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF CONTAINS([lineUpToLow],&quot;lineUpToLow&quot;) THEN 1 ELSE 0 END' scope-isolation='false' />
      </column>
      <column caption='defenseStopGettingBall' datatype='integer' name='[Calculation_3890301121008021]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF CONTAINS([defense_stopGettingBall],&quot;defense_stopGettingBall&quot;) THEN 1 ELSE 0 END' scope-isolation='false' />
      </column>
      <column caption='ShotsWhiteProportion' datatype='real' name='[Calculation_3980306003743834]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[highGoalShots_white]/[Calculation_7770306003540857]' scope-isolation='false' />
      </column>
      <column caption='pushedTF' datatype='integer' name='[Calculation_4200301121859883]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF CONTAINS(pushed,&quot;pushed&quot;)THEN 1 ELSE 0 END' scope-isolation='false' />
      </column>
      <column caption='ballOneAutoUsed' datatype='integer' name='[Calculation_4630303164056150]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF CONTAINS([ballOneAuto],&quot;highMake&quot;) OR &#13;&#10;CONTAINS([ballOneAuto],&quot;highMiss&quot;) OR &#13;&#10;CONTAINS([ballOneAuto],&quot;lowMake&quot;) OR&#13;&#10;CONTAINS([ballOneAuto],&quot;lowMiss&quot;)&#13;&#10;THEN 1&#13;&#10;ELSE 0&#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='ballThreeAutoPoints' datatype='integer' name='[Calculation_4630303165425425]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF CONTAINS([ballThreeAuto],&quot;highMake&quot;) AND CONTAINS([autoHotGoalThree],&quot;autoHotGoalThree&quot;) THEN 20&#13;&#10;ELSEIF CONTAINS([ballThreeAuto],&quot;highMake&quot;) THEN 15&#13;&#10;ELSEIF CONTAINS([ballThreeAuto],&quot;lowMake&quot;) AND CONTAINS([autoHotGoalThree],&quot;autoHotGoalThree&quot;) THEN 11&#13;&#10;ELSEIF CONTAINS([ballThreeAuto],&quot;lowMake&quot;) THEN 6&#13;&#10;ELSE 0 &#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='ballThreeAutoScored' datatype='integer' name='[Calculation_5400306010106313]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF CONTAINS([ballThreeAuto],&quot;highMake&quot;) OR CONTAINS([ballThreeAuto],&quot;lowMake&quot;) THEN 1 ELSE 0 END' scope-isolation='false' />
      </column>
      <column caption='highGoalColoredAccuracy1' datatype='real' name='[Calculation_5970404211653993]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([highGoalScores_colored]+[highGoalScores_goalie]+[highGoalScores_white])/([highGoalShots_colored]+[highGoalShots_goalie]+[highGoalShots_white])' scope-isolation='false' />
      </column>
      <column caption='soloCyclerProportion' datatype='real' name='[Calculation_6160305223212906]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_9890303174831752]/[Number of Records]' scope-isolation='false' />
      </column>
      <column caption='ballOneAutoPoints' datatype='integer' name='[Calculation_6620303164959017]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF CONTAINS([ballOneAuto],&quot;highMake&quot;) AND CONTAINS([autoHotGoalOne],&quot;autoHotGoalOne&quot;) THEN 20&#13;&#10;ELSEIF CONTAINS([ballOneAuto],&quot;highMake&quot;) THEN 15&#13;&#10;ELSEIF CONTAINS([ballOneAuto],&quot;lowMake&quot;) AND CONTAINS([autoHotGoalOne],&quot;autoHotGoalOne&quot;) THEN 11&#13;&#10;ELSEIF CONTAINS([ballOneAuto],&quot;lowMake&quot;) THEN 6&#13;&#10;ELSE 0 &#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='defenseInGoalie' datatype='integer' name='[Calculation_6720301120947213]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF CONTAINS([defense_inGoalie],&quot;defense_inGoalie&quot;) THEN 1 ELSE 0 END' scope-isolation='false' />
      </column>
      <column caption='ballOneAutoScored' datatype='integer' name='[Calculation_6720306005744157]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF CONTAINS([ballOneAuto],&quot;highMake&quot;) OR CONTAINS([ballOneAuto],&quot;lowMake&quot;) THEN 1 ELSE 0 END' scope-isolation='false' />
      </column>
      <column caption='numBallsAutoUsed' datatype='integer' name='[Calculation_6780303164535382]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_4630303164056150]+[Calculation_2530303164410072]+[Calculation_8120303164436437]' scope-isolation='false' />
      </column>
      <column caption='ShotsTotal' datatype='real' name='[Calculation_7770306003540857]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[highGoalShots_colored]+[highGoalShots_goalie]+[highGoalShots_white]' scope-isolation='false' />
      </column>
      <column caption='shooterProportion' datatype='real' name='[Calculation_8100305223149782]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_8670303174818409]/[Number of Records]' scope-isolation='false' />
      </column>
      <column caption='ballThreeAutoUsed' datatype='integer' name='[Calculation_8120303164436437]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF CONTAINS([ballThreeAuto],&quot;highMake&quot;) OR &#13;&#10;CONTAINS([ballThreeAuto],&quot;highMiss&quot;) OR &#13;&#10;CONTAINS([ballThreeAuto],&quot;lowMake&quot;) OR&#13;&#10;CONTAINS([ballThreeAuto],&quot;lowMiss&quot;)&#13;&#10;THEN 1&#13;&#10;ELSE 0&#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='catcherProportion' datatype='real' name='[Calculation_8320305222936780]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_9080303174733079]/[Number of Records]' scope-isolation='false' />
      </column>
      <column caption='shooter' datatype='integer' name='[Calculation_8670303174818409]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF CONTAINS([role_shooter],&quot;shooter&quot;) THEN 1 ELSE 0 END' scope-isolation='false' />
      </column>
      <column caption='robotCatches' datatype='integer' name='[Calculation_9010303172052832]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF CONTAINS([caughtBallHuman],&quot;caughtBallHuman&quot;) OR &#13;&#10;CONTAINS([caughtBallRobots],&quot;caughtBallRobots&quot;) THEN 1 &#13;&#10;ELSE 0&#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='autoAccuracy' datatype='real' name='[Calculation_9010306010337187]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_0660306010312790]/[Calculation_6780303164535382]' scope-isolation='false' />
      </column>
      <column caption='catcher(role)' datatype='integer' name='[Calculation_9080303174733079]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF CONTAINS([role_catcher],&quot;catcher&quot;) THEN 1 ELSE 0 END' scope-isolation='false' />
      </column>
      <column caption='highGoalScores' datatype='real' name='[Calculation_9170301120020898]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[highGoalScores_colored]+[highGoalScores_goalie]+[highGoalScores_white]' scope-isolation='false' />
      </column>
      <column caption='collector' datatype='integer' name='[Calculation_9410303172220189]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF CONTAINS([collectedBall],&quot;collectedBall&quot;) THEN 1&#13;&#10;ELSE 0&#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='ShotsGoalieProportion' datatype='real' name='[Calculation_9570306003707531]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[highGoalShots_goalie]/[Calculation_7770306003540857]' scope-isolation='false' />
      </column>
      <column caption='soloCycler' datatype='integer' name='[Calculation_9890303174831752]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF CONTAINS([role_soloCycler],&quot;soloCycler&quot;) THEN 1 ELSE 0 END' scope-isolation='false' />
      </column>
      <column caption='trussThrowAccuracy' datatype='real' name='[Calculation_9950403190641483]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[trussThrowScores]/[trussThrowShots]' scope-isolation='false' />
      </column>
      <column caption='Match Number' datatype='string' name='[MATCH_NUM]' role='dimension' type='nominal'>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Team' datatype='string' name='[TEAM_NUM]' role='dimension' type='nominal'>
      </column>
      <column aggregation='CountD' datatype='real' datatype-customized='true' name='[fumbles]' role='measure' type='quantitative'>
      </column>
      <column caption='Scores-Colored' datatype='real' datatype-customized='true' name='[highGoalScores_colored]' role='measure' type='quantitative'>
      </column>
      <column caption='Scores-Goalie' datatype='real' datatype-customized='true' name='[highGoalScores_goalie]' role='measure' type='quantitative'>
      </column>
      <column caption='Scores-White' datatype='real' datatype-customized='true' name='[highGoalScores_white]' role='measure' type='quantitative'>
      </column>
      <column caption='Shots-Colored' datatype='real' datatype-customized='true' name='[highGoalShots_colored]' role='measure' type='quantitative'>
      </column>
      <column caption='Shots-Goalie' datatype='real' datatype-customized='true' name='[highGoalShots_goalie]' role='measure' type='quantitative'>
      </column>
      <column caption='Shots-White' datatype='real' datatype-customized='true' name='[highGoalShots_white]' role='measure' type='quantitative'>
      </column>
      <column datatype='real' datatype-customized='true' name='[lowGoalScores]' role='measure' type='quantitative'>
      </column>
      <column datatype='real' datatype-customized='true' name='[lowGoalShots]' role='measure' type='quantitative'>
      </column>
      <column datatype='real' datatype-customized='true' name='[passRecvHuman]' role='measure' type='quantitative'>
      </column>
      <column datatype='real' datatype-customized='true' name='[passRecvRobot]' role='measure' type='quantitative'>
      </column>
      <column datatype='real' datatype-customized='true' name='[passStarts]' role='measure' type='quantitative'>
      </column>
      <column datatype='real' datatype-customized='true' name='[robotSpeed]' role='measure' type='quantitative'>
      </column>
      <column datatype='real' datatype-customized='true' name='[shotsBlocked]' role='measure' type='quantitative'>
      </column>
      <column datatype='real' datatype-customized='true' name='[trussCatchScores]' role='measure' type='quantitative'>
      </column>
      <column datatype='real' datatype-customized='true' name='[trussCatchShots]' role='measure' type='quantitative'>
      </column>
      <column datatype='real' datatype-customized='true' name='[trussThrowScores]' role='measure' type='quantitative'>
      </column>
      <column datatype='real' datatype-customized='true' name='[trussThrowShots]' role='measure' type='quantitative'>
      </column>
      <column-instance column='[TEAM_NUM]' derivation='None' name='[none:TEAM_NUM:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_1140301120102569]' derivation='Sum' name='[sum:Calculation_1140301120102569:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_9170301120020898]' derivation='Sum' name='[sum:Calculation_9170301120020898:qk]' pivot='key' type='quantitative' />
      <column-instance column='[highGoalScores_colored]' derivation='Sum' name='[sum:highGoalScores_colored:qk]' pivot='key' type='quantitative' />
      <column-instance column='[highGoalScores_goalie]' derivation='Sum' name='[sum:highGoalScores_goalie:qk]' pivot='key' type='quantitative' />
      <column-instance column='[highGoalScores_white]' derivation='Sum' name='[sum:highGoalScores_white:qk]' pivot='key' type='quantitative' />
      <column-instance column='[highGoalShots_colored]' derivation='Sum' name='[sum:highGoalShots_colored:qk]' pivot='key' type='quantitative' />
      <column-instance column='[highGoalShots_goalie]' derivation='Sum' name='[sum:highGoalShots_goalie:qk]' pivot='key' type='quantitative' />
      <column-instance column='[highGoalShots_white]' derivation='Sum' name='[sum:highGoalShots_white:qk]' pivot='key' type='quantitative' />
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='C:\Users\nnrobot\Documents\My Tableau Repository\Datasources\team_table (yes).tde' schema='Extract' tablename='Extract' update-time='4/5/2014 4:16:56 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Calculation_0560306115107302]' formula='IF CONTAINS([throwsToHumanOverTruss],&quot;throwsToHumanOverTruss&quot;) THEN 1 ELSE 0 END' />
            <calculation column='[Calculation_0660306010312790]' formula='[Calculation_6720306005744157]+[Calculation_2650306010036590]+[Calculation_5400306010106313]' />
            <calculation column='[Calculation_0880301121037679]' formula='IF CONTAINS([defense_stopRobot],&quot;defense_stopRobot&quot;) THEN 1 ELSE 0 END' />
            <calculation column='[Calculation_1010305223043753]' formula='[Calculation_2400303174747658]/[Number of Records]' />
            <calculation column='[Calculation_1140301120102569]' formula='[highGoalShots_colored]+[highGoalShots_goalie]+[highGoalShots_white]' />
            <calculation column='[Calculation_1840303165406454]' formula='IF CONTAINS([ballTwoAuto],&quot;highMake&quot;) AND CONTAINS([autoHotGoalTwo],&quot;autoHotGoalTwo&quot;) THEN 20&#13;&#10;ELSEIF CONTAINS([ballTwoAuto],&quot;highMake&quot;) THEN 15&#13;&#10;ELSEIF CONTAINS([ballTwoAuto],&quot;lowMake&quot;) AND CONTAINS([autoHotGoalTwo],&quot;autoHotGoalTwo&quot;) THEN 11&#13;&#10;ELSEIF CONTAINS([ballTwoAuto],&quot;lowMake&quot;) THEN 6&#13;&#10;ELSE 0 &#13;&#10;END' />
            <calculation column='[Calculation_2020306003635320]' formula='[highGoalShots_colored]/[Calculation_7770306003540857]' />
            <calculation column='[Calculation_2210303163902149]' formula='([highGoalScores_colored]+[highGoalScores_goalie]+[highGoalScores_white])/([highGoalShots_colored]+[highGoalShots_goalie]+[highGoalShots_white])' />
            <calculation column='[Calculation_2310305223237409]' formula='[Calculation_3480303174853084]/[Number of Records]' />
            <calculation column='[Calculation_2400303174747658]' formula='IF CONTAINS([role_defense],&quot;defense&quot;) THEN 1 ELSE 0 END' />
            <calculation column='[Calculation_2530303164410072]' formula='IF CONTAINS([ballTwoAuto],&quot;highMake&quot;) OR &#13;&#10;CONTAINS([ballTwoAuto],&quot;highMiss&quot;) OR &#13;&#10;CONTAINS([ballTwoAuto],&quot;lowMake&quot;) OR&#13;&#10;CONTAINS([ballTwoAuto],&quot;lowMiss&quot;)&#13;&#10;THEN 1&#13;&#10;ELSE 0&#13;&#10;END' />
            <calculation column='[Calculation_2650306010036590]' formula='IF CONTAINS([ballTwoAuto],&quot;highMake&quot;) OR CONTAINS([ballTwoAuto],&quot;lowMake&quot;) THEN 1 ELSE 0 END' />
            <calculation column='[Calculation_3110305223116631]' formula='[Calculation_3120303174623405]/[Number of Records]' />
            <calculation column='[Calculation_3120303174623405]' formula='IF CONTAINS([role_assister],&quot;assister&quot;) THEN 1 ELSE 0 END' />
            <calculation column='[Calculation_3320301120424237]' formula='IF CONTAINS([maneuvered],&quot;maneuvered&quot;) THEN 1 ELSE 0 END' />
            <calculation column='[Calculation_3480303174853084]' formula='IF CONTAINS([role_soloTrussCatcher],&quot;soloTrussCatcher&quot;) THEN 1 ELSE 0 END' />
            <calculation column='[Calculation_3890301121008021]' formula='IF CONTAINS([defense_stopGettingBall],&quot;defense_stopGettingBall&quot;) THEN 1 ELSE 0 END' />
            <calculation column='[Calculation_3980306003743834]' formula='[highGoalShots_white]/[Calculation_7770306003540857]' />
            <calculation column='[Calculation_4200301121859883]' formula='IF CONTAINS(pushed,&quot;pushed&quot;)THEN 1 ELSE 0 END' />
            <calculation column='[Calculation_4630303164056150]' formula='IF CONTAINS([ballOneAuto],&quot;highMake&quot;) OR &#13;&#10;CONTAINS([ballOneAuto],&quot;highMiss&quot;) OR &#13;&#10;CONTAINS([ballOneAuto],&quot;lowMake&quot;) OR&#13;&#10;CONTAINS([ballOneAuto],&quot;lowMiss&quot;)&#13;&#10;THEN 1&#13;&#10;ELSE 0&#13;&#10;END' />
            <calculation column='[Calculation_4630303165425425]' formula='IF CONTAINS([ballThreeAuto],&quot;highMake&quot;) AND CONTAINS([autoHotGoalThree],&quot;autoHotGoalThree&quot;) THEN 20&#13;&#10;ELSEIF CONTAINS([ballThreeAuto],&quot;highMake&quot;) THEN 15&#13;&#10;ELSEIF CONTAINS([ballThreeAuto],&quot;lowMake&quot;) AND CONTAINS([autoHotGoalThree],&quot;autoHotGoalThree&quot;) THEN 11&#13;&#10;ELSEIF CONTAINS([ballThreeAuto],&quot;lowMake&quot;) THEN 6&#13;&#10;ELSE 0 &#13;&#10;END' />
            <calculation column='[Calculation_5400306010106313]' formula='IF CONTAINS([ballThreeAuto],&quot;highMake&quot;) OR CONTAINS([ballThreeAuto],&quot;lowMake&quot;) THEN 1 ELSE 0 END' />
            <calculation column='[Calculation_5970404211653993]' formula='([highGoalScores_colored]+[highGoalScores_goalie]+[highGoalScores_white])/([highGoalShots_colored]+[highGoalShots_goalie]+[highGoalShots_white])' />
            <calculation column='[Calculation_6160305223212906]' formula='[Calculation_9890303174831752]/[Number of Records]' />
            <calculation column='[Calculation_6620303164959017]' formula='IF CONTAINS([ballOneAuto],&quot;highMake&quot;) AND CONTAINS([autoHotGoalOne],&quot;autoHotGoalOne&quot;) THEN 20&#13;&#10;ELSEIF CONTAINS([ballOneAuto],&quot;highMake&quot;) THEN 15&#13;&#10;ELSEIF CONTAINS([ballOneAuto],&quot;lowMake&quot;) AND CONTAINS([autoHotGoalOne],&quot;autoHotGoalOne&quot;) THEN 11&#13;&#10;ELSEIF CONTAINS([ballOneAuto],&quot;lowMake&quot;) THEN 6&#13;&#10;ELSE 0 &#13;&#10;END' />
            <calculation column='[Calculation_6720301120947213]' formula='IF CONTAINS([defense_inGoalie],&quot;defense_inGoalie&quot;) THEN 1 ELSE 0 END' />
            <calculation column='[Calculation_6720306005744157]' formula='IF CONTAINS([ballOneAuto],&quot;highMake&quot;) OR CONTAINS([ballOneAuto],&quot;lowMake&quot;) THEN 1 ELSE 0 END' />
            <calculation column='[Calculation_6780303164535382]' formula='[Calculation_4630303164056150]+[Calculation_2530303164410072]+[Calculation_8120303164436437]' />
            <calculation column='[Calculation_7770306003540857]' formula='[highGoalShots_colored]+[highGoalShots_goalie]+[highGoalShots_white]' />
            <calculation column='[Calculation_8100305223149782]' formula='[Calculation_8670303174818409]/[Number of Records]' />
            <calculation column='[Calculation_8120303164436437]' formula='IF CONTAINS([ballThreeAuto],&quot;highMake&quot;) OR &#13;&#10;CONTAINS([ballThreeAuto],&quot;highMiss&quot;) OR &#13;&#10;CONTAINS([ballThreeAuto],&quot;lowMake&quot;) OR&#13;&#10;CONTAINS([ballThreeAuto],&quot;lowMiss&quot;)&#13;&#10;THEN 1&#13;&#10;ELSE 0&#13;&#10;END' />
            <calculation column='[Calculation_8320305222936780]' formula='[Calculation_9080303174733079]/[Number of Records]' />
            <calculation column='[Calculation_8670303174818409]' formula='IF CONTAINS([role_shooter],&quot;shooter&quot;) THEN 1 ELSE 0 END' />
            <calculation column='[Calculation_9010306010337187]' formula='[Calculation_0660306010312790]/[Calculation_6780303164535382]' />
            <calculation column='[Calculation_9080303174733079]' formula='IF CONTAINS([role_catcher],&quot;catcher&quot;) THEN 1 ELSE 0 END' />
            <calculation column='[Calculation_9170301120020898]' formula='[highGoalScores_colored]+[highGoalScores_goalie]+[highGoalScores_white]' />
            <calculation column='[Calculation_9570306003707531]' formula='[highGoalShots_goalie]/[Calculation_7770306003540857]' />
            <calculation column='[Calculation_9890303174831752]' formula='IF CONTAINS([role_soloCycler],&quot;soloCycler&quot;) THEN 1 ELSE 0 END' />
            <calculation column='[Calculation_9950403190641483]' formula='[trussThrowScores]/[trussThrowShots]' />
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='605' timestamp-start='2014-04-05 16:16:56.618000' />
          </refresh>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.477848' measure-ordering='alphabetic' measure-percentage='0.522152' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:TEAM_NUM:nk]' type='palette'>
            <map to='#1e1e1e'>
              <bucket>&quot;5041&quot;</bucket>
            </map>
            <map to='#222222'>
              <bucket>&quot;4330&quot;</bucket>
            </map>
            <map to='#272727'>
              <bucket>&quot;4329&quot;</bucket>
            </map>
            <map to='#2c2c2c'>
              <bucket>&quot;4296&quot;</bucket>
            </map>
            <map to='#313131'>
              <bucket>&quot;4212&quot;</bucket>
            </map>
            <map to='#363636'>
              <bucket>&quot;4196&quot;</bucket>
            </map>
            <map to='#3c3c3c'>
              <bucket>&quot;4143&quot;</bucket>
            </map>
            <map to='#414141'>
              <bucket>&quot;3138&quot;</bucket>
            </map>
            <map to='#474747'>
              <bucket>&quot;2481&quot;</bucket>
            </map>
            <map to='#4d4d4d'>
              <bucket>&quot;2451&quot;</bucket>
            </map>
            <map to='#535353'>
              <bucket>&quot;2194&quot;</bucket>
            </map>
            <map to='#595959'>
              <bucket>&quot;2164&quot;</bucket>
            </map>
            <map to='#5f5f5f'>
              <bucket>&quot;2081&quot;</bucket>
            </map>
            <map to='#666666'>
              <bucket>&quot;2040&quot;</bucket>
            </map>
            <map to='#6c6c6c'>
              <bucket>&quot;2022&quot;</bucket>
            </map>
            <map to='#727272'>
              <bucket>&quot;1986&quot;</bucket>
            </map>
            <map to='#797979'>
              <bucket>&quot;1764&quot;</bucket>
            </map>
            <map to='#808080'>
              <bucket>&quot;1756&quot;</bucket>
            </map>
            <map to='#878787'>
              <bucket>&quot;1747&quot;</bucket>
            </map>
            <map to='#8e8e8e'>
              <bucket>&quot;1736&quot;</bucket>
            </map>
            <map to='#959595'>
              <bucket>&quot;1288&quot;</bucket>
            </map>
            <map to='#9d9d9d'>
              <bucket>&quot;1094&quot;</bucket>
            </map>
            <map to='#a4a4a4'>
              <bucket>&quot;967&quot;</bucket>
            </map>
            <map to='#ababab'>
              <bucket>&quot;648&quot;</bucket>
            </map>
            <map to='#b3b3b3'>
              <bucket>&quot;292&quot;</bucket>
            </map>
            <map to='#bbbbbb'>
              <bucket>&quot;171&quot;</bucket>
            </map>
            <map to='#c3c3c3'>
              <bucket>&quot;167&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#1e1e1e'>
              <bucket>&quot;[mysql.41699.488635277776].[sum:Calculation_1140301120102569:qk]&quot;</bucket>
            </map>
            <map to='#414451'>
              <bucket>&quot;[mysql.41699.488635277776].[sum:highGoalScores_goalie:qk]&quot;</bucket>
            </map>
            <map to='#60636a'>
              <bucket>&quot;[mysql.41699.488635277776].[sum:highGoalScores_colored:qk]&quot;</bucket>
            </map>
            <map to='#60636a'>
              <bucket>&quot;[mysql.41699.488635277776].[sum:highGoalShots_white:qk]&quot;</bucket>
            </map>
            <map to='#8f8782'>
              <bucket>&quot;[mysql.41699.488635277776].[sum:highGoalShots_goalie:qk]&quot;</bucket>
            </map>
            <map to='#a5acaf'>
              <bucket>&quot;[mysql.41699.488635277776].[sum:highGoalShots_colored:qk]&quot;</bucket>
            </map>
            <map to='#c3c3c3'>
              <bucket>&quot;[mysql.41699.488635277776].[sum:Calculation_9170301120020898:qk]&quot;</bucket>
            </map>
            <map to='#cfcfcf'>
              <bucket>&quot;[mysql.41699.488635277776].[sum:highGoalScores_white:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='alliance_table (yes)' inline='true' name='mysql.41703.893065949072' version='8.2'>
      <connection class='mysql' dbname='yes' odbc-native-protocol='yes' port='3306' server='169.254.228.182' username='root'>
        <relation name='alliance_table' table='[alliance_table]' type='table' />
        <refresh increment-key='' incremental-updates='false'>
        </refresh>
      </connection>
      <column datatype='integer' name='[MATCH_NUM]' role='dimension' type='ordinal'>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='C:\Users\nnrobot\Documents\My Tableau Repository\Datasources\alliance_table (yes).tde' schema='Extract' tablename='Extract' update-time='4/5/2014 4:18:25 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='186' timestamp-start='2014-04-05 16:18:25.666000' />
          </refresh>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.497453' measure-ordering='alphabetic' measure-percentage='0.502547' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='team_alliance_cycle' inline='true' name='mysql.41704.895000625002' version='8.2'>
      <connection class='mysql' dbname='yes' odbc-native-protocol='yes' port='3306' server='169.254.228.182' username='root'>
        <relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[alliance_table].[HASH]'>
              </expression>
              <expression op='[cycle_table].[hash]'>
              </expression>
            </expression>
          </clause>
          <relation join='inner' type='join'>
            <clause type='join'>
              <expression op='='>
                <expression op='[alliance_table].[MATCH_NUM]'>
                </expression>
                <expression op='[team_table].[MATCH_NUM]'>
                </expression>
              </expression>
            </clause>
            <relation name='alliance_table' table='[alliance_table]' type='table' />
            <relation name='team_table' table='[team_table]' type='table' />
          </relation>
          <relation name='cycle_table' table='[cycle_table]' type='table' />
        </relation>
        <cols>
          <map key='[ALLIANCE_COLOR]' value='[alliance_table].[ALLIANCE_COLOR]' />
          <map key='[HASH]' value='[alliance_table].[HASH]' />
          <map key='[MATCH_NUM]' value='[alliance_table].[MATCH_NUM]' />
          <map key='[NAME_OF_SCOUT]' value='[alliance_table].[NAME_OF_SCOUT]' />
          <map key='[TEAM_NUM]' value='[team_table].[TEAM_NUM]' />
          <map key='[allianceAutoPoints]' value='[alliance_table].[allianceAutoPoints]' />
          <map key='[allianceBallEndTime]' value='[alliance_table].[allianceBallEndTime]' />
          <map key='[allianceBallEndTime_checkbox]' value='[team_table].[allianceBallEndTime_checkbox]' />
          <map key='[allianceFoulPoints]' value='[alliance_table].[allianceFoulPoints]' />
          <map key='[allianceTeleopPoints]' value='[alliance_table].[allianceTeleopPoints]' />
          <map key='[allianceTotalPoints]' value='[alliance_table].[allianceTotalPoints]' />
          <map key='[autoHotGoalOne]' value='[team_table].[autoHotGoalOne]' />
          <map key='[autoHotGoalThree]' value='[team_table].[autoHotGoalThree]' />
          <map key='[autoHotGoalTwo]' value='[team_table].[autoHotGoalTwo]' />
          <map key='[ballOneAuto]' value='[team_table].[ballOneAuto]' />
          <map key='[ballThreeAuto]' value='[team_table].[ballThreeAuto]' />
          <map key='[ballTwoAuto]' value='[team_table].[ballTwoAuto]' />
          <map key='[breakDescription]' value='[team_table].[breakDescription]' />
          <map key='[comments]' value='[alliance_table].[comments]' />
          <map key='[defense_inGoalie]' value='[team_table].[defense_inGoalie]' />
          <map key='[defense_stopGettingBall]' value='[team_table].[defense_stopGettingBall]' />
          <map key='[defense_stopRobot]' value='[team_table].[defense_stopRobot]' />
          <map key='[endTime]' value='[cycle_table].[endTime]' />
          <map key='[foulDescription]' value='[alliance_table].[foulDescription]' />
          <map key='[fumbleDescription]' value='[team_table].[fumbleDescription]' />
          <map key='[fumbles]' value='[team_table].[fumbles]' />
          <map key='[hash]' value='[cycle_table].[hash]' />
          <map key='[highGoalScores_colored]' value='[team_table].[highGoalScores_colored]' />
          <map key='[highGoalScores_goalie]' value='[team_table].[highGoalScores_goalie]' />
          <map key='[highGoalScores_white]' value='[team_table].[highGoalScores_white]' />
          <map key='[highGoalShots_colored]' value='[team_table].[highGoalShots_colored]' />
          <map key='[highGoalShots_goalie]' value='[team_table].[highGoalShots_goalie]' />
          <map key='[highGoalShots_white]' value='[team_table].[highGoalShots_white]' />
          <map key='[lateAutoReason]' value='[alliance_table].[lateAutoReason]' />
          <map key='[lowGoalScores]' value='[team_table].[lowGoalScores]' />
          <map key='[lowGoalShots]' value='[team_table].[lowGoalShots]' />
          <map key='[maneuvered]' value='[team_table].[maneuvered]' />
          <map key='[matchComments]' value='[team_table].[matchComments]' />
          <map key='[numAssists]' value='[cycle_table].[numAssists]' />
          <map key='[passRecvHuman]' value='[team_table].[passRecvHuman]' />
          <map key='[passRecvRobot]' value='[team_table].[passRecvRobot]' />
          <map key='[passStarts]' value='[team_table].[passStarts]' />
          <map key='[preBallsOnField]' value='[alliance_table].[preBallsOnField]' />
          <map key='[preGameBallOnePosition]' value='[team_table].[preGameBallOnePosition]' />
          <map key='[preGameBallThreePosition]' value='[team_table].[preGameBallThreePosition]' />
          <map key='[preGameBallTwoPosition]' value='[team_table].[preGameBallTwoPosition]' />
          <map key='[preGamePosition]' value='[team_table].[preGamePosition]' />
          <map key='[pushed]' value='[team_table].[pushed]' />
          <map key='[robotBreakage]' value='[team_table].[robotBreakage]' />
          <map key='[robotSpeed]' value='[team_table].[robotSpeed]' />
          <map key='[role_assister]' value='[team_table].[role_assister]' />
          <map key='[role_catcher]' value='[team_table].[role_catcher]' />
          <map key='[role_defense]' value='[team_table].[role_defense]' />
          <map key='[role_shooter]' value='[team_table].[role_shooter]' />
          <map key='[role_soloCycler]' value='[team_table].[role_soloCycler]' />
          <map key='[role_soloTrussCatcher]' value='[team_table].[role_soloTrussCatcher]' />
          <map key='[seedNum]' value='[alliance_table].[seedNum]' />
          <map key='[shotsBlocked]' value='[team_table].[shotsBlocked]' />
          <map key='[startTime]' value='[cycle_table].[startTime]' />
          <map key='[team_table_ALLIANCE_COLOR]' value='[team_table].[ALLIANCE_COLOR]' />
          <map key='[team_table_MATCH_NUM]' value='[team_table].[MATCH_NUM]' />
          <map key='[team_table_NAME_OF_SCOUT]' value='[team_table].[NAME_OF_SCOUT]' />
          <map key='[team_table_allianceBallEndTime]' value='[team_table].[allianceBallEndTime]' />
          <map key='[throwsToHumanOverTruss]' value='[team_table].[throwsToHumanOverTruss]' />
          <map key='[trussCatchScores]' value='[team_table].[trussCatchScores]' />
          <map key='[trussCatchShots]' value='[team_table].[trussCatchShots]' />
          <map key='[trussThrowScores]' value='[team_table].[trussThrowScores]' />
          <map key='[trussThrowShots]' value='[team_table].[trussThrowShots]' />
        </cols>
        <refresh increment-key='' incremental-updates='false'>
        </refresh>
      </connection>
      <aliases enabled='yes' />
      <column caption='highGoalAccuracy' datatype='real' name='[Calculation_2210303163902149]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='AVG([Calculation_9170301120020898])/AVG([Calculation_1140301120102569])' scope-isolation='false' />
      </column>
      <column caption='autoPoints' datatype='integer' name='[Calculation_2270303165543352]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_2350303165504912]+[Calculation_6620303164959017]+[Calculation_1840303165406454]+[Calculation_4630303165425425]' scope-isolation='false' />
      </column>
      <column caption='autoColorZonePoints' datatype='integer' name='[Calculation_2350303165504912]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF CONTAINS([autoColorZone],&quot;autoColorZone&quot;) THEN 5&#13;&#10;ELSE 0&#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='linesUpToLow' datatype='integer' name='[Calculation_3520306115231628]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF CONTAINS([lineUpToLow],&quot;lineUpToLow&quot;) THEN 1 ELSE 0 END' scope-isolation='false' />
      </column>
      <column caption='robotCatches' datatype='integer' name='[Calculation_9010303172052832]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF CONTAINS([caughtBallHuman],&quot;caughtBallHuman&quot;) OR &#13;&#10;CONTAINS([caughtBallRobots],&quot;caughtBallRobots&quot;) THEN 1 &#13;&#10;ELSE 0&#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='collector' datatype='integer' name='[Calculation_9410303172220189]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF CONTAINS([collectedBall],&quot;collectedBall&quot;) THEN 1&#13;&#10;ELSE 0&#13;&#10;END' scope-isolation='false' />
      </column>
      <column datatype='integer' name='[MATCH_NUM]' role='dimension' type='ordinal'>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='real' datatype-customized='true' name='[TEAM_NUM]' role='dimension' type='ordinal'>
      </column>
      <column datatype='real' datatype-customized='true' name='[endTime]' role='measure' type='quantitative'>
      </column>
      <column datatype='real' datatype-customized='true' name='[fumbles]' role='measure' type='quantitative'>
      </column>
      <column caption='Scores-Colored' datatype='real' datatype-customized='true' name='[highGoalScores_colored]' role='measure' type='quantitative'>
      </column>
      <column caption='Scores-Goalie' datatype='real' datatype-customized='true' name='[highGoalScores_goalie]' role='measure' type='quantitative'>
      </column>
      <column caption='Scores-White' datatype='real' datatype-customized='true' name='[highGoalScores_white]' role='measure' type='quantitative'>
      </column>
      <column caption='Shots-Colored' datatype='real' datatype-customized='true' name='[highGoalShots_colored]' role='measure' type='quantitative'>
      </column>
      <column caption='Shots-Goalie' datatype='real' datatype-customized='true' name='[highGoalShots_goalie]' role='measure' type='quantitative'>
      </column>
      <column caption='Shots-White' datatype='real' datatype-customized='true' name='[highGoalShots_white]' role='measure' type='quantitative'>
      </column>
      <column datatype='real' datatype-customized='true' name='[lowGoalScores]' role='measure' type='quantitative'>
      </column>
      <column datatype='real' datatype-customized='true' name='[lowGoalShots]' role='measure' type='quantitative'>
      </column>
      <column aggregation='CountD' datatype='real' datatype-customized='true' name='[numAssists]' role='measure' type='quantitative'>
      </column>
      <column datatype='real' datatype-customized='true' name='[passRecvHuman]' role='measure' type='quantitative'>
      </column>
      <column datatype='real' datatype-customized='true' name='[passRecvRobot]' role='measure' type='quantitative'>
      </column>
      <column datatype='real' datatype-customized='true' name='[passStarts]' role='measure' type='quantitative'>
      </column>
      <column datatype='real' datatype-customized='true' name='[robotSpeed]' role='measure' type='quantitative'>
      </column>
      <column datatype='real' datatype-customized='true' name='[shotsBlocked]' role='measure' type='quantitative'>
      </column>
      <column aggregation='CountD' datatype='real' datatype-customized='true' name='[startTime]' role='measure' type='quantitative'>
      </column>
      <column datatype='real' datatype-customized='true' name='[trussCatchScores]' role='measure' type='quantitative'>
      </column>
      <column datatype='real' datatype-customized='true' name='[trussCatchShots]' role='measure' type='quantitative'>
      </column>
      <column datatype='real' datatype-customized='true' name='[trussThrowScores]' role='measure' type='quantitative'>
      </column>
      <column datatype='real' datatype-customized='true' name='[trussThrowShots]' role='measure' type='quantitative'>
      </column>
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='C:\Users\nnrobot\Documents\My Tableau Repository\Datasources\team_alliance_cycle.tde' schema='Extract' tablename='Extract' update-time='4/5/2014 4:18:44 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <cols>
            <map key='[ALLIANCE_COLOR]' value='[Extract].[ALLIANCE_COLOR]' />
            <map key='[HASH]' value='[Extract].[HASH]' />
            <map key='[MATCH_NUM]' value='[Extract].[MATCH_NUM]' />
            <map key='[NAME_OF_SCOUT]' value='[Extract].[NAME_OF_SCOUT]' />
            <map key='[Number of Records]' value='[Extract].[Number of Records]' />
            <map key='[TEAM_NUM]' value='[Extract].[TEAM_NUM]' />
            <map key='[allianceAutoPoints]' value='[Extract].[allianceAutoPoints]' />
            <map key='[allianceBallEndTime]' value='[Extract].[allianceBallEndTime]' />
            <map key='[allianceBallEndTime_checkbox]' value='[Extract].[allianceBallEndTime_checkbox]' />
            <map key='[allianceFoulPoints]' value='[Extract].[allianceFoulPoints]' />
            <map key='[allianceTeleopPoints]' value='[Extract].[allianceTeleopPoints]' />
            <map key='[allianceTotalPoints]' value='[Extract].[allianceTotalPoints]' />
            <map key='[autoHotGoalOne]' value='[Extract].[autoHotGoalOne]' />
            <map key='[autoHotGoalThree]' value='[Extract].[autoHotGoalThree]' />
            <map key='[autoHotGoalTwo]' value='[Extract].[autoHotGoalTwo]' />
            <map key='[ballOneAuto]' value='[Extract].[ballOneAuto]' />
            <map key='[ballThreeAuto]' value='[Extract].[ballThreeAuto]' />
            <map key='[ballTwoAuto]' value='[Extract].[ballTwoAuto]' />
            <map key='[breakDescription]' value='[Extract].[breakDescription]' />
            <map key='[comments]' value='[Extract].[comments]' />
            <map key='[defense_inGoalie]' value='[Extract].[defense_inGoalie]' />
            <map key='[defense_stopGettingBall]' value='[Extract].[defense_stopGettingBall]' />
            <map key='[defense_stopRobot]' value='[Extract].[defense_stopRobot]' />
            <map key='[endTime]' value='[Extract].[endTime]' />
            <map key='[foulDescription]' value='[Extract].[foulDescription]' />
            <map key='[fumbleDescription]' value='[Extract].[fumbleDescription]' />
            <map key='[fumbles]' value='[Extract].[fumbles]' />
            <map key='[hash]' value='[Extract].[hash1]' />
            <map key='[highGoalScores_colored]' value='[Extract].[highGoalScores_colored]' />
            <map key='[highGoalScores_goalie]' value='[Extract].[highGoalScores_goalie]' />
            <map key='[highGoalScores_white]' value='[Extract].[highGoalScores_white]' />
            <map key='[highGoalShots_colored]' value='[Extract].[highGoalShots_colored]' />
            <map key='[highGoalShots_goalie]' value='[Extract].[highGoalShots_goalie]' />
            <map key='[highGoalShots_white]' value='[Extract].[highGoalShots_white]' />
            <map key='[lateAutoReason]' value='[Extract].[lateAutoReason]' />
            <map key='[lowGoalScores]' value='[Extract].[lowGoalScores]' />
            <map key='[lowGoalShots]' value='[Extract].[lowGoalShots]' />
            <map key='[maneuvered]' value='[Extract].[maneuvered]' />
            <map key='[matchComments]' value='[Extract].[matchComments]' />
            <map key='[numAssists]' value='[Extract].[numAssists]' />
            <map key='[passRecvHuman]' value='[Extract].[passRecvHuman]' />
            <map key='[passRecvRobot]' value='[Extract].[passRecvRobot]' />
            <map key='[passStarts]' value='[Extract].[passStarts]' />
            <map key='[preBallsOnField]' value='[Extract].[preBallsOnField]' />
            <map key='[preGameBallOnePosition]' value='[Extract].[preGameBallOnePosition]' />
            <map key='[preGameBallThreePosition]' value='[Extract].[preGameBallThreePosition]' />
            <map key='[preGameBallTwoPosition]' value='[Extract].[preGameBallTwoPosition]' />
            <map key='[preGamePosition]' value='[Extract].[preGamePosition]' />
            <map key='[pushed]' value='[Extract].[pushed]' />
            <map key='[robotBreakage]' value='[Extract].[robotBreakage]' />
            <map key='[robotSpeed]' value='[Extract].[robotSpeed]' />
            <map key='[role_assister]' value='[Extract].[role_assister]' />
            <map key='[role_catcher]' value='[Extract].[role_catcher]' />
            <map key='[role_defense]' value='[Extract].[role_defense]' />
            <map key='[role_shooter]' value='[Extract].[role_shooter]' />
            <map key='[role_soloCycler]' value='[Extract].[role_soloCycler]' />
            <map key='[role_soloTrussCatcher]' value='[Extract].[role_soloTrussCatcher]' />
            <map key='[seedNum]' value='[Extract].[seedNum]' />
            <map key='[shotsBlocked]' value='[Extract].[shotsBlocked]' />
            <map key='[startTime]' value='[Extract].[startTime]' />
            <map key='[team_table_ALLIANCE_COLOR]' value='[Extract].[ALLIANCE_COLOR1]' />
            <map key='[team_table_MATCH_NUM]' value='[Extract].[MATCH_NUM1]' />
            <map key='[team_table_NAME_OF_SCOUT]' value='[Extract].[NAME_OF_SCOUT1]' />
            <map key='[team_table_allianceBallEndTime]' value='[Extract].[allianceBallEndTime1]' />
            <map key='[throwsToHumanOverTruss]' value='[Extract].[throwsToHumanOverTruss]' />
            <map key='[trussCatchScores]' value='[Extract].[trussCatchScores]' />
            <map key='[trussCatchShots]' value='[Extract].[trussCatchShots]' />
            <map key='[trussThrowScores]' value='[Extract].[trussThrowScores]' />
            <map key='[trussThrowShots]' value='[Extract].[trussThrowShots]' />
          </cols>
          <calculations>
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='1912' timestamp-start='2014-04-05 16:18:44.657000' />
          </refresh>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <shared-views>
    <shared-view name='mysql.41699.488635277776'>
      <datasources>
        <datasource caption='team_table (yes)' name='mysql.41699.488635277776' />
      </datasources>
      <datasource-dependencies datasource='mysql.41699.488635277776'>
        <column caption='Team' datatype='string' name='[TEAM_NUM]' role='dimension' type='nominal'>
        </column>
        <column-instance column='[TEAM_NUM]' derivation='None' name='[none:TEAM_NUM:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <filter class='categorical' column='[mysql.41699.488635277776].[none:TEAM_NUM:nk]'>
        <groupfilter function='member' level='[none:TEAM_NUM:nk]' member='&quot;695&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
      </filter>
    </shared-view>
    <shared-view name='mysql.41704.895000625002'>
      <datasources>
        <datasource caption='team_alliance_cycle' name='mysql.41704.895000625002' />
      </datasources>
      <datasource-dependencies datasource='mysql.41704.895000625002'>
        <column datatype='real' datatype-customized='true' name='[TEAM_NUM]' role='dimension' type='ordinal'>
        </column>
        <column-instance column='[TEAM_NUM]' derivation='None' name='[none:TEAM_NUM:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <filter class='categorical' column='[mysql.41704.895000625002].[none:TEAM_NUM:ok]'>
        <groupfilter function='member' level='[none:TEAM_NUM:ok]' member='695.0' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
      </filter>
    </shared-view>
  </shared-views>
  <worksheets>
    <worksheet name='Accuracy'>
      <table>
        <view>
          <datasources>
            <datasource caption='team_table (yes)' name='mysql.41699.488635277776' />
          </datasources>
          <datasource-dependencies datasource='mysql.41699.488635277776'>
            <column caption='highGoalShots' datatype='real' name='[Calculation_1140301120102569]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[highGoalShots_colored]+[highGoalShots_goalie]+[highGoalShots_white]' scope-isolation='false' />
            </column>
            <column caption='highGoalScores' datatype='real' name='[Calculation_9170301120020898]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[highGoalScores_colored]+[highGoalScores_goalie]+[highGoalScores_white]' scope-isolation='false' />
            </column>
            <column caption='Match Number' datatype='string' name='[MATCH_NUM]' role='dimension' type='nominal'>
            </column>
            <column caption='Team' datatype='string' name='[TEAM_NUM]' role='dimension' type='nominal'>
            </column>
            <column caption='Scores-Colored' datatype='real' datatype-customized='true' name='[highGoalScores_colored]' role='measure' type='quantitative'>
            </column>
            <column caption='Scores-Goalie' datatype='real' datatype-customized='true' name='[highGoalScores_goalie]' role='measure' type='quantitative'>
            </column>
            <column caption='Scores-White' datatype='real' datatype-customized='true' name='[highGoalScores_white]' role='measure' type='quantitative'>
            </column>
            <column caption='Shots-Colored' datatype='real' datatype-customized='true' name='[highGoalShots_colored]' role='measure' type='quantitative'>
            </column>
            <column caption='Shots-Goalie' datatype='real' datatype-customized='true' name='[highGoalShots_goalie]' role='measure' type='quantitative'>
            </column>
            <column caption='Shots-White' datatype='real' datatype-customized='true' name='[highGoalShots_white]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[MATCH_NUM]' derivation='None' name='[none:MATCH_NUM:nk]' pivot='key' type='nominal' />
            <column-instance column='[TEAM_NUM]' derivation='None' name='[none:TEAM_NUM:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1140301120102569]' derivation='Sum' name='[sum:Calculation_1140301120102569:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_9170301120020898]' derivation='Sum' name='[sum:Calculation_9170301120020898:qk]' pivot='key' type='quantitative' />
            <column-instance column='[highGoalScores_colored]' derivation='Sum' name='[sum:highGoalScores_colored:qk]' pivot='key' type='quantitative' />
            <column-instance column='[highGoalScores_goalie]' derivation='Sum' name='[sum:highGoalScores_goalie:qk]' pivot='key' type='quantitative' />
            <column-instance column='[highGoalScores_white]' derivation='Sum' name='[sum:highGoalScores_white:qk]' pivot='key' type='quantitative' />
            <column-instance column='[highGoalShots_colored]' derivation='Sum' name='[sum:highGoalShots_colored:qk]' pivot='key' type='quantitative' />
            <column-instance column='[highGoalShots_goalie]' derivation='Sum' name='[sum:highGoalShots_goalie:qk]' pivot='key' type='quantitative' />
            <column-instance column='[highGoalShots_white]' derivation='Sum' name='[sum:highGoalShots_white:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[mysql.41699.488635277776].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[mysql.41699.488635277776].[sum:Calculation_9170301120020898:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[mysql.41699.488635277776].[sum:Calculation_1140301120102569:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[mysql.41699.488635277776].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[mysql.41699.488635277776].[sum:highGoalScores_colored:qk]&quot;</bucket>
              <bucket>&quot;[mysql.41699.488635277776].[sum:highGoalShots_colored:qk]&quot;</bucket>
              <bucket>&quot;[mysql.41699.488635277776].[sum:highGoalScores_goalie:qk]&quot;</bucket>
              <bucket>&quot;[mysql.41699.488635277776].[sum:highGoalShots_goalie:qk]&quot;</bucket>
              <bucket>&quot;[mysql.41699.488635277776].[sum:highGoalScores_white:qk]&quot;</bucket>
              <bucket>&quot;[mysql.41699.488635277776].[sum:highGoalShots_white:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[mysql.41699.488635277776].[:Measure Names]</column>
            <column>[mysql.41699.488635277776].[none:TEAM_NUM:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[mysql.41699.488635277776].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[mysql.41699.488635277776].[Multiple Values]</rows>
        <cols>([mysql.41699.488635277776].[none:MATCH_NUM:nk] / ([mysql.41699.488635277776].[none:TEAM_NUM:nk] / [mysql.41699.488635277776].[:Measure Names]))</cols>
      </table>
    </worksheet>
    <worksheet name='Alliance'>
      <table>
        <view>
          <datasources>
            <datasource caption='team_alliance_cycle' name='mysql.41704.895000625002' />
          </datasources>
          <datasource-dependencies datasource='mysql.41704.895000625002'>
            <column datatype='integer' name='[HASH]' role='measure' type='quantitative'>
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column datatype='real' datatype-customized='true' name='[TEAM_NUM]' role='dimension' type='ordinal'>
            </column>
            <column datatype='integer' name='[allianceAutoPoints]' role='measure' type='quantitative'>
            </column>
            <column datatype='integer' name='[allianceFoulPoints]' role='measure' type='quantitative'>
            </column>
            <column datatype='integer' name='[allianceTeleopPoints]' role='measure' type='quantitative'>
            </column>
            <column datatype='integer' name='[allianceTotalPoints]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[numAssists]' derivation='Avg' name='[avg:numAssists:qk]' pivot='key' type='quantitative' />
            <column-instance column='[numAssists]' derivation='CountD' name='[ctd:numAssists:qk]' pivot='key' type='quantitative' />
            <column-instance column='[startTime]' derivation='CountD' name='[ctd:startTime:qk]' pivot='key' type='quantitative' />
            <column datatype='real' datatype-customized='true' name='[endTime]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' datatype-customized='true' name='[fumbles]' role='measure' type='quantitative'>
            </column>
            <column caption='Scores-Colored' datatype='real' datatype-customized='true' name='[highGoalScores_colored]' role='measure' type='quantitative'>
            </column>
            <column caption='Scores-Goalie' datatype='real' datatype-customized='true' name='[highGoalScores_goalie]' role='measure' type='quantitative'>
            </column>
            <column caption='Scores-White' datatype='real' datatype-customized='true' name='[highGoalScores_white]' role='measure' type='quantitative'>
            </column>
            <column caption='Shots-Colored' datatype='real' datatype-customized='true' name='[highGoalShots_colored]' role='measure' type='quantitative'>
            </column>
            <column caption='Shots-Goalie' datatype='real' datatype-customized='true' name='[highGoalShots_goalie]' role='measure' type='quantitative'>
            </column>
            <column caption='Shots-White' datatype='real' datatype-customized='true' name='[highGoalShots_white]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' datatype-customized='true' name='[lowGoalScores]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' datatype-customized='true' name='[lowGoalShots]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[TEAM_NUM]' derivation='None' name='[none:TEAM_NUM:ok]' pivot='key' type='ordinal' />
            <column aggregation='CountD' datatype='real' datatype-customized='true' name='[numAssists]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' datatype-customized='true' name='[passRecvHuman]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' datatype-customized='true' name='[passRecvRobot]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' datatype-customized='true' name='[passStarts]' role='measure' type='quantitative'>
            </column>
            <column datatype='integer' name='[preBallsOnField]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' datatype-customized='true' name='[robotSpeed]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' datatype-customized='true' name='[shotsBlocked]' role='measure' type='quantitative'>
            </column>
            <column aggregation='CountD' datatype='real' datatype-customized='true' name='[startTime]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[HASH]' derivation='Sum' name='[sum:HASH:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[allianceAutoPoints]' derivation='Sum' name='[sum:allianceAutoPoints:qk]' pivot='key' type='quantitative' />
            <column-instance column='[allianceFoulPoints]' derivation='Sum' name='[sum:allianceFoulPoints:qk]' pivot='key' type='quantitative' />
            <column-instance column='[allianceTeleopPoints]' derivation='Sum' name='[sum:allianceTeleopPoints:qk]' pivot='key' type='quantitative' />
            <column-instance column='[allianceTotalPoints]' derivation='Sum' name='[sum:allianceTotalPoints:qk]' pivot='key' type='quantitative' />
            <column-instance column='[endTime]' derivation='Sum' name='[sum:endTime:qk]' pivot='key' type='quantitative' />
            <column-instance column='[fumbles]' derivation='Sum' name='[sum:fumbles:qk]' pivot='key' type='quantitative' />
            <column-instance column='[highGoalScores_colored]' derivation='Sum' name='[sum:highGoalScores_colored:qk]' pivot='key' type='quantitative' />
            <column-instance column='[highGoalScores_goalie]' derivation='Sum' name='[sum:highGoalScores_goalie:qk]' pivot='key' type='quantitative' />
            <column-instance column='[highGoalScores_white]' derivation='Sum' name='[sum:highGoalScores_white:qk]' pivot='key' type='quantitative' />
            <column-instance column='[highGoalShots_colored]' derivation='Sum' name='[sum:highGoalShots_colored:qk]' pivot='key' type='quantitative' />
            <column-instance column='[highGoalShots_goalie]' derivation='Sum' name='[sum:highGoalShots_goalie:qk]' pivot='key' type='quantitative' />
            <column-instance column='[highGoalShots_white]' derivation='Sum' name='[sum:highGoalShots_white:qk]' pivot='key' type='quantitative' />
            <column-instance column='[lowGoalScores]' derivation='Sum' name='[sum:lowGoalScores:qk]' pivot='key' type='quantitative' />
            <column-instance column='[lowGoalShots]' derivation='Sum' name='[sum:lowGoalShots:qk]' pivot='key' type='quantitative' />
            <column-instance column='[passRecvHuman]' derivation='Sum' name='[sum:passRecvHuman:qk]' pivot='key' type='quantitative' />
            <column-instance column='[passRecvRobot]' derivation='Sum' name='[sum:passRecvRobot:qk]' pivot='key' type='quantitative' />
            <column-instance column='[passStarts]' derivation='Sum' name='[sum:passStarts:qk]' pivot='key' type='quantitative' />
            <column-instance column='[preBallsOnField]' derivation='Sum' name='[sum:preBallsOnField:qk]' pivot='key' type='quantitative' />
            <column-instance column='[robotSpeed]' derivation='Sum' name='[sum:robotSpeed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[shotsBlocked]' derivation='Sum' name='[sum:shotsBlocked:qk]' pivot='key' type='quantitative' />
            <column-instance column='[trussCatchScores]' derivation='Sum' name='[sum:trussCatchScores:qk]' pivot='key' type='quantitative' />
            <column-instance column='[trussCatchShots]' derivation='Sum' name='[sum:trussCatchShots:qk]' pivot='key' type='quantitative' />
            <column-instance column='[trussThrowScores]' derivation='Sum' name='[sum:trussThrowScores:qk]' pivot='key' type='quantitative' />
            <column-instance column='[trussThrowShots]' derivation='Sum' name='[sum:trussThrowShots:qk]' pivot='key' type='quantitative' />
            <column datatype='real' datatype-customized='true' name='[trussCatchScores]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' datatype-customized='true' name='[trussCatchShots]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' datatype-customized='true' name='[trussThrowScores]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' datatype-customized='true' name='[trussThrowShots]' role='measure' type='quantitative'>
            </column>
          </datasource-dependencies>
          <sort class='manual' column='[mysql.41704.895000625002].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[mysql.41704.895000625002].[avg:numAssists:qk]&quot;</bucket>
              <bucket>&quot;[mysql.41704.895000625002].[avg:Calculation_6690306221032891:qk]&quot;</bucket>
              <bucket>&quot;[mysql.41704.895000625002].[sum:allianceAutoPoints:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[mysql.41704.895000625002].[none:TEAM_NUM:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[mysql.41704.895000625002].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([mysql.41704.895000625002].[none:TEAM_NUM:ok] / [mysql.41704.895000625002].[:Measure Names])</rows>
        <cols></cols>
      </table>
    </worksheet>
    <worksheet name='Alliance Foul Descriptions'>
      <table>
        <view>
          <datasources>
            <datasource caption='team_alliance_cycle' name='mysql.41704.895000625002' />
          </datasources>
          <datasource-dependencies datasource='mysql.41704.895000625002'>
            <column datatype='integer' name='[MATCH_NUM]' role='dimension' type='ordinal'>
            </column>
            <column datatype='real' datatype-customized='true' name='[TEAM_NUM]' role='dimension' type='ordinal'>
            </column>
            <column datatype='string' name='[foulDescription]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[MATCH_NUM]' derivation='None' name='[none:MATCH_NUM:ok]' pivot='key' type='ordinal' />
            <column-instance column='[TEAM_NUM]' derivation='None' name='[none:TEAM_NUM:ok]' pivot='key' type='ordinal' />
            <column-instance column='[foulDescription]' derivation='None' name='[none:foulDescription:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <slices>
            <column>[mysql.41704.895000625002].[none:TEAM_NUM:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[mysql.41704.895000625002].[:Measure Names]' value='319' />
            <format attr='height' field='[mysql.41704.895000625002].[none:MATCH_NUM:ok]' value='32' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[mysql.41704.895000625002].[none:MATCH_NUM:ok]' value='56' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[mysql.41704.895000625002].[none:foulDescription:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([mysql.41704.895000625002].[none:TEAM_NUM:ok] / [mysql.41704.895000625002].[none:MATCH_NUM:ok])</rows>
        <cols>[mysql.41704.895000625002].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='Alliance Foul Points'>
      <table>
        <view>
          <datasources>
            <datasource caption='team_alliance_cycle' name='mysql.41704.895000625002' />
          </datasources>
          <datasource-dependencies datasource='mysql.41704.895000625002'>
            <column datatype='integer' name='[MATCH_NUM]' role='dimension' type='ordinal'>
            </column>
            <column datatype='real' datatype-customized='true' name='[TEAM_NUM]' role='dimension' type='ordinal'>
            </column>
            <column datatype='integer' name='[allianceFoulPoints]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[MATCH_NUM]' derivation='None' name='[none:MATCH_NUM:ok]' pivot='key' type='ordinal' />
            <column-instance column='[TEAM_NUM]' derivation='None' name='[none:TEAM_NUM:ok]' pivot='key' type='ordinal' />
            <column-instance column='[allianceFoulPoints]' derivation='Sum' name='[sum:allianceFoulPoints:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <slices>
            <column>[mysql.41704.895000625002].[none:TEAM_NUM:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([mysql.41704.895000625002].[none:TEAM_NUM:ok] / [mysql.41704.895000625002].[none:MATCH_NUM:ok])</rows>
        <cols>[mysql.41704.895000625002].[sum:allianceFoulPoints:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Auto Accuracy'>
      <table>
        <view>
          <datasources>
            <datasource caption='team_table (yes)' name='mysql.41699.488635277776' />
          </datasources>
          <datasource-dependencies datasource='mysql.41699.488635277776'>
            <column caption='autoAccuracy' datatype='real' name='[Calculation_9010306010337187]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_0660306010312790]/[Calculation_6780303164535382]' scope-isolation='false' />
            </column>
            <column caption='Match Number' datatype='string' name='[MATCH_NUM]' role='dimension' type='nominal'>
            </column>
            <column caption='Team' datatype='string' name='[TEAM_NUM]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[MATCH_NUM]' derivation='None' name='[none:MATCH_NUM:nk]' pivot='key' type='nominal' />
            <column-instance column='[TEAM_NUM]' derivation='None' name='[none:TEAM_NUM:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_9010306010337187]' derivation='Sum' name='[sum:Calculation_9010306010337187:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <slices>
            <column>[mysql.41699.488635277776].[none:TEAM_NUM:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='subtitle' class='0' field='[mysql.41699.488635277776].[sum:Calculation_9010306010337187:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[mysql.41699.488635277776].[sum:Calculation_9010306010337187:qk]' scope='rows' value='true' />
            <encoding attr='space' class='0' field='[mysql.41699.488635277776].[sum:Calculation_9010306010337187:qk]' field-type='quantitative' max='1.0' min='0.0' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[mysql.41699.488635277776].[none:TEAM_NUM:nk]' value='62' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[mysql.41699.488635277776].[sum:Calculation_9010306010337187:qk]</rows>
        <cols>([mysql.41699.488635277776].[none:TEAM_NUM:nk] / [mysql.41699.488635277776].[none:MATCH_NUM:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='Auto Accuracy Sort'>
      <table>
        <view>
          <datasources>
            <datasource caption='team_table (yes)' name='mysql.41699.488635277776' />
          </datasources>
          <datasource-dependencies datasource='mysql.41699.488635277776'>
            <column caption='autoAccuracy' datatype='real' name='[Calculation_9010306010337187]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_0660306010312790]/[Calculation_6780303164535382]' scope-isolation='false' />
            </column>
            <column caption='Team' datatype='string' name='[TEAM_NUM]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_9010306010337187]' derivation='Avg' name='[avg:Calculation_9010306010337187:qk]' pivot='key' type='quantitative' />
            <column-instance column='[TEAM_NUM]' derivation='None' name='[none:TEAM_NUM:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <sort class='computed' column='[mysql.41699.488635277776].[none:TEAM_NUM:nk]' direction='DESC' using='[mysql.41699.488635277776].[avg:Calculation_9010306010337187:qk]'>
          </sort>
          <slices>
            <column>[mysql.41699.488635277776].[none:TEAM_NUM:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[mysql.41699.488635277776].[avg:Calculation_9010306010337187:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[mysql.41699.488635277776].[none:TEAM_NUM:nk]</rows>
        <cols></cols>
      </table>
    </worksheet>
    <worksheet name='Avgs'>
      <table>
        <view>
          <datasources>
            <datasource caption='team_table (yes)' name='mysql.41699.488635277776' />
          </datasources>
          <datasource-dependencies datasource='mysql.41699.488635277776'>
            <column caption='humanTrussThrow' datatype='integer' name='[Calculation_0560306115107302]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF CONTAINS([throwsToHumanOverTruss],&quot;throwsToHumanOverTruss&quot;) THEN 1 ELSE 0 END' scope-isolation='false' />
            </column>
            <column caption='numBallsAutoScored' datatype='integer' name='[Calculation_0660306010312790]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_6720306005744157]+[Calculation_2650306010036590]+[Calculation_5400306010106313]' scope-isolation='false' />
            </column>
            <column caption='defenseStopRobot' datatype='integer' name='[Calculation_0880301121037679]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF CONTAINS([defense_stopRobot],&quot;defense_stopRobot&quot;) THEN 1 ELSE 0 END' scope-isolation='false' />
            </column>
            <column caption='defenseProportion' datatype='real' name='[Calculation_1010305223043753]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_2400303174747658]/[Number of Records]' scope-isolation='false' />
            </column>
            <column caption='highGoalShots' datatype='real' name='[Calculation_1140301120102569]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[highGoalShots_colored]+[highGoalShots_goalie]+[highGoalShots_white]' scope-isolation='false' />
            </column>
            <column caption='ballTwoAutoPoints' datatype='integer' name='[Calculation_1840303165406454]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF CONTAINS([ballTwoAuto],&quot;highMake&quot;) AND CONTAINS([autoHotGoalTwo],&quot;autoHotGoalTwo&quot;) THEN 20&#13;&#10;ELSEIF CONTAINS([ballTwoAuto],&quot;highMake&quot;) THEN 15&#13;&#10;ELSEIF CONTAINS([ballTwoAuto],&quot;lowMake&quot;) AND CONTAINS([autoHotGoalTwo],&quot;autoHotGoalTwo&quot;) THEN 11&#13;&#10;ELSEIF CONTAINS([ballTwoAuto],&quot;lowMake&quot;) THEN 6&#13;&#10;ELSE 0 &#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='ShotsColoredProportion' datatype='real' name='[Calculation_2020306003635320]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[highGoalShots_colored]/[Calculation_7770306003540857]' scope-isolation='false' />
            </column>
            <column caption='highGoalAccuracy' datatype='real' name='[Calculation_2210303163902149]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([highGoalScores_colored]+[highGoalScores_goalie]+[highGoalScores_white])/([highGoalShots_colored]+[highGoalShots_goalie]+[highGoalShots_white])' scope-isolation='false' />
            </column>
            <column caption='autoPoints' datatype='integer' name='[Calculation_2270303165543352]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_2350303165504912]+[Calculation_6620303164959017]+[Calculation_1840303165406454]+[Calculation_4630303165425425]' scope-isolation='false' />
            </column>
            <column caption='soloTrussCatcherProportion' datatype='real' name='[Calculation_2310305223237409]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_3480303174853084]/[Number of Records]' scope-isolation='false' />
            </column>
            <column caption='defense' datatype='integer' name='[Calculation_2400303174747658]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF CONTAINS([role_defense],&quot;defense&quot;) THEN 1 ELSE 0 END' scope-isolation='false' />
            </column>
            <column caption='ballTwoAutoUsed' datatype='integer' name='[Calculation_2530303164410072]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF CONTAINS([ballTwoAuto],&quot;highMake&quot;) OR &#13;&#10;CONTAINS([ballTwoAuto],&quot;highMiss&quot;) OR &#13;&#10;CONTAINS([ballTwoAuto],&quot;lowMake&quot;) OR&#13;&#10;CONTAINS([ballTwoAuto],&quot;lowMiss&quot;)&#13;&#10;THEN 1&#13;&#10;ELSE 0&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='ballTwoAutoScored' datatype='integer' name='[Calculation_2650306010036590]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF CONTAINS([ballTwoAuto],&quot;highMake&quot;) OR CONTAINS([ballTwoAuto],&quot;lowMake&quot;) THEN 1 ELSE 0 END' scope-isolation='false' />
            </column>
            <column caption='assisterProportion' datatype='real' name='[Calculation_3110305223116631]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_3120303174623405]/[Number of Records]' scope-isolation='false' />
            </column>
            <column caption='assister' datatype='integer' name='[Calculation_3120303174623405]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF CONTAINS([role_assister],&quot;assister&quot;) THEN 1 ELSE 0 END' scope-isolation='false' />
            </column>
            <column caption='ManeuveredTF' datatype='integer' name='[Calculation_3320301120424237]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF CONTAINS([maneuvered],&quot;maneuvered&quot;) THEN 1 ELSE 0 END' scope-isolation='false' />
            </column>
            <column caption='soloTrussCatcher' datatype='integer' name='[Calculation_3480303174853084]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF CONTAINS([role_soloTrussCatcher],&quot;soloTrussCatcher&quot;) THEN 1 ELSE 0 END' scope-isolation='false' />
            </column>
            <column caption='defenseStopGettingBall' datatype='integer' name='[Calculation_3890301121008021]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF CONTAINS([defense_stopGettingBall],&quot;defense_stopGettingBall&quot;) THEN 1 ELSE 0 END' scope-isolation='false' />
            </column>
            <column caption='ShotsWhiteProportion' datatype='real' name='[Calculation_3980306003743834]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[highGoalShots_white]/[Calculation_7770306003540857]' scope-isolation='false' />
            </column>
            <column caption='pushedTF' datatype='integer' name='[Calculation_4200301121859883]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF CONTAINS(pushed,&quot;pushed&quot;)THEN 1 ELSE 0 END' scope-isolation='false' />
            </column>
            <column caption='ballOneAutoUsed' datatype='integer' name='[Calculation_4630303164056150]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF CONTAINS([ballOneAuto],&quot;highMake&quot;) OR &#13;&#10;CONTAINS([ballOneAuto],&quot;highMiss&quot;) OR &#13;&#10;CONTAINS([ballOneAuto],&quot;lowMake&quot;) OR&#13;&#10;CONTAINS([ballOneAuto],&quot;lowMiss&quot;)&#13;&#10;THEN 1&#13;&#10;ELSE 0&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='ballThreeAutoPoints' datatype='integer' name='[Calculation_4630303165425425]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF CONTAINS([ballThreeAuto],&quot;highMake&quot;) AND CONTAINS([autoHotGoalThree],&quot;autoHotGoalThree&quot;) THEN 20&#13;&#10;ELSEIF CONTAINS([ballThreeAuto],&quot;highMake&quot;) THEN 15&#13;&#10;ELSEIF CONTAINS([ballThreeAuto],&quot;lowMake&quot;) AND CONTAINS([autoHotGoalThree],&quot;autoHotGoalThree&quot;) THEN 11&#13;&#10;ELSEIF CONTAINS([ballThreeAuto],&quot;lowMake&quot;) THEN 6&#13;&#10;ELSE 0 &#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='ballThreeAutoScored' datatype='integer' name='[Calculation_5400306010106313]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF CONTAINS([ballThreeAuto],&quot;highMake&quot;) OR CONTAINS([ballThreeAuto],&quot;lowMake&quot;) THEN 1 ELSE 0 END' scope-isolation='false' />
            </column>
            <column caption='highGoalColoredAccuracy1' datatype='real' name='[Calculation_5970404211653993]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([highGoalScores_colored]+[highGoalScores_goalie]+[highGoalScores_white])/([highGoalShots_colored]+[highGoalShots_goalie]+[highGoalShots_white])' scope-isolation='false' />
            </column>
            <column caption='soloCyclerProportion' datatype='real' name='[Calculation_6160305223212906]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_9890303174831752]/[Number of Records]' scope-isolation='false' />
            </column>
            <column caption='ballOneAutoPoints' datatype='integer' name='[Calculation_6620303164959017]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF CONTAINS([ballOneAuto],&quot;highMake&quot;) AND CONTAINS([autoHotGoalOne],&quot;autoHotGoalOne&quot;) THEN 20&#13;&#10;ELSEIF CONTAINS([ballOneAuto],&quot;highMake&quot;) THEN 15&#13;&#10;ELSEIF CONTAINS([ballOneAuto],&quot;lowMake&quot;) AND CONTAINS([autoHotGoalOne],&quot;autoHotGoalOne&quot;) THEN 11&#13;&#10;ELSEIF CONTAINS([ballOneAuto],&quot;lowMake&quot;) THEN 6&#13;&#10;ELSE 0 &#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='defenseInGoalie' datatype='integer' name='[Calculation_6720301120947213]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF CONTAINS([defense_inGoalie],&quot;defense_inGoalie&quot;) THEN 1 ELSE 0 END' scope-isolation='false' />
            </column>
            <column caption='ballOneAutoScored' datatype='integer' name='[Calculation_6720306005744157]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF CONTAINS([ballOneAuto],&quot;highMake&quot;) OR CONTAINS([ballOneAuto],&quot;lowMake&quot;) THEN 1 ELSE 0 END' scope-isolation='false' />
            </column>
            <column caption='numBallsAutoUsed' datatype='integer' name='[Calculation_6780303164535382]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_4630303164056150]+[Calculation_2530303164410072]+[Calculation_8120303164436437]' scope-isolation='false' />
            </column>
            <column caption='ShotsTotal' datatype='real' name='[Calculation_7770306003540857]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[highGoalShots_colored]+[highGoalShots_goalie]+[highGoalShots_white]' scope-isolation='false' />
            </column>
            <column caption='shooterProportion' datatype='real' name='[Calculation_8100305223149782]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_8670303174818409]/[Number of Records]' scope-isolation='false' />
            </column>
            <column caption='ballThreeAutoUsed' datatype='integer' name='[Calculation_8120303164436437]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF CONTAINS([ballThreeAuto],&quot;highMake&quot;) OR &#13;&#10;CONTAINS([ballThreeAuto],&quot;highMiss&quot;) OR &#13;&#10;CONTAINS([ballThreeAuto],&quot;lowMake&quot;) OR&#13;&#10;CONTAINS([ballThreeAuto],&quot;lowMiss&quot;)&#13;&#10;THEN 1&#13;&#10;ELSE 0&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='catcherProportion' datatype='real' name='[Calculation_8320305222936780]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_9080303174733079]/[Number of Records]' scope-isolation='false' />
            </column>
            <column caption='shooter' datatype='integer' name='[Calculation_8670303174818409]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF CONTAINS([role_shooter],&quot;shooter&quot;) THEN 1 ELSE 0 END' scope-isolation='false' />
            </column>
            <column caption='autoAccuracy' datatype='real' name='[Calculation_9010306010337187]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_0660306010312790]/[Calculation_6780303164535382]' scope-isolation='false' />
            </column>
            <column caption='catcher(role)' datatype='integer' name='[Calculation_9080303174733079]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF CONTAINS([role_catcher],&quot;catcher&quot;) THEN 1 ELSE 0 END' scope-isolation='false' />
            </column>
            <column caption='highGoalScores' datatype='real' name='[Calculation_9170301120020898]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[highGoalScores_colored]+[highGoalScores_goalie]+[highGoalScores_white]' scope-isolation='false' />
            </column>
            <column caption='ShotsGoalieProportion' datatype='real' name='[Calculation_9570306003707531]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[highGoalShots_goalie]/[Calculation_7770306003540857]' scope-isolation='false' />
            </column>
            <column caption='soloCycler' datatype='integer' name='[Calculation_9890303174831752]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF CONTAINS([role_soloCycler],&quot;soloCycler&quot;) THEN 1 ELSE 0 END' scope-isolation='false' />
            </column>
            <column caption='trussThrowAccuracy' datatype='real' name='[Calculation_9950403190641483]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[trussThrowScores]/[trussThrowShots]' scope-isolation='false' />
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Team' datatype='string' name='[TEAM_NUM]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_1140301120102569]' derivation='Avg' name='[avg:Calculation_1140301120102569:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2270303165543352]' derivation='Avg' name='[avg:Calculation_2270303165543352:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_6780303164535382]' derivation='Avg' name='[avg:Calculation_6780303164535382:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_9170301120020898]' derivation='Avg' name='[avg:Calculation_9170301120020898:qk]' pivot='key' type='quantitative' />
            <column-instance column='[fumbles]' derivation='Avg' name='[avg:fumbles:qk]' pivot='key' type='quantitative' />
            <column-instance column='[passRecvHuman]' derivation='Avg' name='[avg:passRecvHuman:qk]' pivot='key' type='quantitative' />
            <column-instance column='[passRecvRobot]' derivation='Avg' name='[avg:passRecvRobot:qk]' pivot='key' type='quantitative' />
            <column-instance column='[passStarts]' derivation='Avg' name='[avg:passStarts:qk]' pivot='key' type='quantitative' />
            <column-instance column='[shotsBlocked]' derivation='Avg' name='[avg:shotsBlocked:qk]' pivot='key' type='quantitative' />
            <column-instance column='[trussThrowScores]' derivation='Avg' name='[avg:trussThrowScores:qk]' pivot='key' type='quantitative' />
            <column-instance column='[fumbles]' derivation='CountD' name='[ctd:fumbles:qk]' pivot='key' type='quantitative' />
            <column aggregation='CountD' datatype='real' datatype-customized='true' name='[fumbles]' role='measure' type='quantitative'>
            </column>
            <column caption='Scores-Colored' datatype='real' datatype-customized='true' name='[highGoalScores_colored]' role='measure' type='quantitative'>
            </column>
            <column caption='Scores-Goalie' datatype='real' datatype-customized='true' name='[highGoalScores_goalie]' role='measure' type='quantitative'>
            </column>
            <column caption='Scores-White' datatype='real' datatype-customized='true' name='[highGoalScores_white]' role='measure' type='quantitative'>
            </column>
            <column caption='Shots-Colored' datatype='real' datatype-customized='true' name='[highGoalShots_colored]' role='measure' type='quantitative'>
            </column>
            <column caption='Shots-Goalie' datatype='real' datatype-customized='true' name='[highGoalShots_goalie]' role='measure' type='quantitative'>
            </column>
            <column caption='Shots-White' datatype='real' datatype-customized='true' name='[highGoalShots_white]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' datatype-customized='true' name='[lowGoalScores]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' datatype-customized='true' name='[lowGoalShots]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[TEAM_NUM]' derivation='None' name='[none:TEAM_NUM:nk]' pivot='key' type='nominal' />
            <column datatype='real' datatype-customized='true' name='[passRecvHuman]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' datatype-customized='true' name='[passRecvRobot]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' datatype-customized='true' name='[passStarts]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' datatype-customized='true' name='[robotSpeed]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' datatype-customized='true' name='[shotsBlocked]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[Calculation_0560306115107302]' derivation='Sum' name='[sum:Calculation_0560306115107302:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_0660306010312790]' derivation='Sum' name='[sum:Calculation_0660306010312790:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_0880301121037679]' derivation='Sum' name='[sum:Calculation_0880301121037679:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1010305223043753]' derivation='Sum' name='[sum:Calculation_1010305223043753:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1140301120102569]' derivation='Sum' name='[sum:Calculation_1140301120102569:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1840303165406454]' derivation='Sum' name='[sum:Calculation_1840303165406454:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2020306003635320]' derivation='Sum' name='[sum:Calculation_2020306003635320:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2210303163902149]' derivation='Sum' name='[sum:Calculation_2210303163902149:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2310305223237409]' derivation='Sum' name='[sum:Calculation_2310305223237409:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2400303174747658]' derivation='Sum' name='[sum:Calculation_2400303174747658:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2530303164410072]' derivation='Sum' name='[sum:Calculation_2530303164410072:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2650306010036590]' derivation='Sum' name='[sum:Calculation_2650306010036590:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_3110305223116631]' derivation='Sum' name='[sum:Calculation_3110305223116631:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_3120303174623405]' derivation='Sum' name='[sum:Calculation_3120303174623405:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_3320301120424237]' derivation='Sum' name='[sum:Calculation_3320301120424237:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_3480303174853084]' derivation='Sum' name='[sum:Calculation_3480303174853084:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_3890301121008021]' derivation='Sum' name='[sum:Calculation_3890301121008021:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_3980306003743834]' derivation='Sum' name='[sum:Calculation_3980306003743834:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4200301121859883]' derivation='Sum' name='[sum:Calculation_4200301121859883:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4630303164056150]' derivation='Sum' name='[sum:Calculation_4630303164056150:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4630303165425425]' derivation='Sum' name='[sum:Calculation_4630303165425425:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_5400306010106313]' derivation='Sum' name='[sum:Calculation_5400306010106313:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_5970404211653993]' derivation='Sum' name='[sum:Calculation_5970404211653993:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_6160305223212906]' derivation='Sum' name='[sum:Calculation_6160305223212906:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_6620303164959017]' derivation='Sum' name='[sum:Calculation_6620303164959017:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_6720301120947213]' derivation='Sum' name='[sum:Calculation_6720301120947213:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_6720306005744157]' derivation='Sum' name='[sum:Calculation_6720306005744157:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_6780303164535382]' derivation='Sum' name='[sum:Calculation_6780303164535382:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_7770306003540857]' derivation='Sum' name='[sum:Calculation_7770306003540857:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_8100305223149782]' derivation='Sum' name='[sum:Calculation_8100305223149782:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_8120303164436437]' derivation='Sum' name='[sum:Calculation_8120303164436437:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_8320305222936780]' derivation='Sum' name='[sum:Calculation_8320305222936780:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_8670303174818409]' derivation='Sum' name='[sum:Calculation_8670303174818409:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_9010306010337187]' derivation='Sum' name='[sum:Calculation_9010306010337187:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_9080303174733079]' derivation='Sum' name='[sum:Calculation_9080303174733079:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_9170301120020898]' derivation='Sum' name='[sum:Calculation_9170301120020898:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_9570306003707531]' derivation='Sum' name='[sum:Calculation_9570306003707531:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_9890303174831752]' derivation='Sum' name='[sum:Calculation_9890303174831752:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_9950403190641483]' derivation='Sum' name='[sum:Calculation_9950403190641483:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[highGoalScores_colored]' derivation='Sum' name='[sum:highGoalScores_colored:qk]' pivot='key' type='quantitative' />
            <column-instance column='[highGoalScores_goalie]' derivation='Sum' name='[sum:highGoalScores_goalie:qk]' pivot='key' type='quantitative' />
            <column-instance column='[highGoalScores_white]' derivation='Sum' name='[sum:highGoalScores_white:qk]' pivot='key' type='quantitative' />
            <column-instance column='[highGoalShots_colored]' derivation='Sum' name='[sum:highGoalShots_colored:qk]' pivot='key' type='quantitative' />
            <column-instance column='[highGoalShots_goalie]' derivation='Sum' name='[sum:highGoalShots_goalie:qk]' pivot='key' type='quantitative' />
            <column-instance column='[highGoalShots_white]' derivation='Sum' name='[sum:highGoalShots_white:qk]' pivot='key' type='quantitative' />
            <column-instance column='[lowGoalScores]' derivation='Sum' name='[sum:lowGoalScores:qk]' pivot='key' type='quantitative' />
            <column-instance column='[lowGoalShots]' derivation='Sum' name='[sum:lowGoalShots:qk]' pivot='key' type='quantitative' />
            <column-instance column='[passRecvHuman]' derivation='Sum' name='[sum:passRecvHuman:qk]' pivot='key' type='quantitative' />
            <column-instance column='[passRecvRobot]' derivation='Sum' name='[sum:passRecvRobot:qk]' pivot='key' type='quantitative' />
            <column-instance column='[passStarts]' derivation='Sum' name='[sum:passStarts:qk]' pivot='key' type='quantitative' />
            <column-instance column='[robotSpeed]' derivation='Sum' name='[sum:robotSpeed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[shotsBlocked]' derivation='Sum' name='[sum:shotsBlocked:qk]' pivot='key' type='quantitative' />
            <column-instance column='[trussCatchScores]' derivation='Sum' name='[sum:trussCatchScores:qk]' pivot='key' type='quantitative' />
            <column-instance column='[trussCatchShots]' derivation='Sum' name='[sum:trussCatchShots:qk]' pivot='key' type='quantitative' />
            <column-instance column='[trussThrowScores]' derivation='Sum' name='[sum:trussThrowScores:qk]' pivot='key' type='quantitative' />
            <column-instance column='[trussThrowShots]' derivation='Sum' name='[sum:trussThrowShots:qk]' pivot='key' type='quantitative' />
            <column datatype='real' datatype-customized='true' name='[trussCatchScores]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' datatype-customized='true' name='[trussCatchShots]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' datatype-customized='true' name='[trussThrowScores]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' datatype-customized='true' name='[trussThrowShots]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[Calculation_2210303163902149]' derivation='User' name='[usr:Calculation_2210303163902149:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <sort class='manual' column='[mysql.41699.488635277776].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[mysql.41699.488635277776].[usr:Calculation_2210303163902149:qk]&quot;</bucket>
              <bucket>&quot;[mysql.41699.488635277776].[avg:Calculation_9170301120020898:qk]&quot;</bucket>
              <bucket>&quot;[mysql.41699.488635277776].[avg:Calculation_1140301120102569:qk]&quot;</bucket>
              <bucket>&quot;[mysql.41699.488635277776].[avg:trussThrowScores:qk]&quot;</bucket>
              <bucket>&quot;[mysql.41699.488635277776].[avg:passStarts:qk]&quot;</bucket>
              <bucket>&quot;[mysql.41699.488635277776].[avg:shotsBlocked:qk]&quot;</bucket>
              <bucket>&quot;[mysql.41699.488635277776].[avg:fumbles:qk]&quot;</bucket>
              <bucket>&quot;[mysql.41699.488635277776].[avg:passRecvHuman:qk]&quot;</bucket>
              <bucket>&quot;[mysql.41699.488635277776].[avg:passRecvRobot:qk]&quot;</bucket>
              <bucket>&quot;[mysql.41699.488635277776].[sum:Calculation_9010306010337187:qk]&quot;</bucket>
              <bucket>&quot;[mysql.41699.488635277776].[avg:passesBlocked:qk]&quot;</bucket>
              <bucket>&quot;[mysql.41699.488635277776].[avg:Calculation_6780303164535382:qk]&quot;</bucket>
              <bucket>&quot;[mysql.41699.488635277776].[avg:Calculation_2270303165543352:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[mysql.41699.488635277776].[none:TEAM_NUM:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='font-size' field='[mysql.41699.488635277776].[:Measure Names]' value='12' />
            <format attr='font-weight' field='[mysql.41699.488635277776].[:Measure Names]' value='normal' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[mysql.41699.488635277776].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[mysql.41699.488635277776].[:Measure Names]</rows>
        <cols>[mysql.41699.488635277776].[none:TEAM_NUM:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Booleans'>
      <table>
        <view>
          <datasources>
            <datasource caption='team_table (yes)' name='mysql.41699.488635277776' />
          </datasources>
          <datasource-dependencies datasource='mysql.41699.488635277776'>
            <column caption='humanTrussThrow' datatype='integer' name='[Calculation_0560306115107302]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF CONTAINS([throwsToHumanOverTruss],&quot;throwsToHumanOverTruss&quot;) THEN 1 ELSE 0 END' scope-isolation='false' />
            </column>
            <column caption='numBallsAutoScored' datatype='integer' name='[Calculation_0660306010312790]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_6720306005744157]+[Calculation_2650306010036590]+[Calculation_5400306010106313]' scope-isolation='false' />
            </column>
            <column caption='defenseStopRobot' datatype='integer' name='[Calculation_0880301121037679]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF CONTAINS([defense_stopRobot],&quot;defense_stopRobot&quot;) THEN 1 ELSE 0 END' scope-isolation='false' />
            </column>
            <column caption='defenseProportion' datatype='real' name='[Calculation_1010305223043753]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_2400303174747658]/[Number of Records]' scope-isolation='false' />
            </column>
            <column caption='highGoalShots' datatype='real' name='[Calculation_1140301120102569]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[highGoalShots_colored]+[highGoalShots_goalie]+[highGoalShots_white]' scope-isolation='false' />
            </column>
            <column caption='ballTwoAutoPoints' datatype='integer' name='[Calculation_1840303165406454]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF CONTAINS([ballTwoAuto],&quot;highMake&quot;) AND CONTAINS([autoHotGoalTwo],&quot;autoHotGoalTwo&quot;) THEN 20&#13;&#10;ELSEIF CONTAINS([ballTwoAuto],&quot;highMake&quot;) THEN 15&#13;&#10;ELSEIF CONTAINS([ballTwoAuto],&quot;lowMake&quot;) AND CONTAINS([autoHotGoalTwo],&quot;autoHotGoalTwo&quot;) THEN 11&#13;&#10;ELSEIF CONTAINS([ballTwoAuto],&quot;lowMake&quot;) THEN 6&#13;&#10;ELSE 0 &#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='ShotsColoredProportion' datatype='real' name='[Calculation_2020306003635320]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[highGoalShots_colored]/[Calculation_7770306003540857]' scope-isolation='false' />
            </column>
            <column caption='highGoalAccuracy' datatype='real' name='[Calculation_2210303163902149]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([highGoalScores_colored]+[highGoalScores_goalie]+[highGoalScores_white])/([highGoalShots_colored]+[highGoalShots_goalie]+[highGoalShots_white])' scope-isolation='false' />
            </column>
            <column caption='soloTrussCatcherProportion' datatype='real' name='[Calculation_2310305223237409]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_3480303174853084]/[Number of Records]' scope-isolation='false' />
            </column>
            <column caption='defense' datatype='integer' name='[Calculation_2400303174747658]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF CONTAINS([role_defense],&quot;defense&quot;) THEN 1 ELSE 0 END' scope-isolation='false' />
            </column>
            <column caption='ballTwoAutoUsed' datatype='integer' name='[Calculation_2530303164410072]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF CONTAINS([ballTwoAuto],&quot;highMake&quot;) OR &#13;&#10;CONTAINS([ballTwoAuto],&quot;highMiss&quot;) OR &#13;&#10;CONTAINS([ballTwoAuto],&quot;lowMake&quot;) OR&#13;&#10;CONTAINS([ballTwoAuto],&quot;lowMiss&quot;)&#13;&#10;THEN 1&#13;&#10;ELSE 0&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='ballTwoAutoScored' datatype='integer' name='[Calculation_2650306010036590]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF CONTAINS([ballTwoAuto],&quot;highMake&quot;) OR CONTAINS([ballTwoAuto],&quot;lowMake&quot;) THEN 1 ELSE 0 END' scope-isolation='false' />
            </column>
            <column caption='assisterProportion' datatype='real' name='[Calculation_3110305223116631]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_3120303174623405]/[Number of Records]' scope-isolation='false' />
            </column>
            <column caption='assister' datatype='integer' name='[Calculation_3120303174623405]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF CONTAINS([role_assister],&quot;assister&quot;) THEN 1 ELSE 0 END' scope-isolation='false' />
            </column>
            <column caption='ManeuveredTF' datatype='integer' name='[Calculation_3320301120424237]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF CONTAINS([maneuvered],&quot;maneuvered&quot;) THEN 1 ELSE 0 END' scope-isolation='false' />
            </column>
            <column caption='soloTrussCatcher' datatype='integer' name='[Calculation_3480303174853084]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF CONTAINS([role_soloTrussCatcher],&quot;soloTrussCatcher&quot;) THEN 1 ELSE 0 END' scope-isolation='false' />
            </column>
            <column caption='defenseStopGettingBall' datatype='integer' name='[Calculation_3890301121008021]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF CONTAINS([defense_stopGettingBall],&quot;defense_stopGettingBall&quot;) THEN 1 ELSE 0 END' scope-isolation='false' />
            </column>
            <column caption='ShotsWhiteProportion' datatype='real' name='[Calculation_3980306003743834]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[highGoalShots_white]/[Calculation_7770306003540857]' scope-isolation='false' />
            </column>
            <column caption='pushedTF' datatype='integer' name='[Calculation_4200301121859883]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF CONTAINS(pushed,&quot;pushed&quot;)THEN 1 ELSE 0 END' scope-isolation='false' />
            </column>
            <column caption='ballOneAutoUsed' datatype='integer' name='[Calculation_4630303164056150]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF CONTAINS([ballOneAuto],&quot;highMake&quot;) OR &#13;&#10;CONTAINS([ballOneAuto],&quot;highMiss&quot;) OR &#13;&#10;CONTAINS([ballOneAuto],&quot;lowMake&quot;) OR&#13;&#10;CONTAINS([ballOneAuto],&quot;lowMiss&quot;)&#13;&#10;THEN 1&#13;&#10;ELSE 0&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='ballThreeAutoPoints' datatype='integer' name='[Calculation_4630303165425425]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF CONTAINS([ballThreeAuto],&quot;highMake&quot;) AND CONTAINS([autoHotGoalThree],&quot;autoHotGoalThree&quot;) THEN 20&#13;&#10;ELSEIF CONTAINS([ballThreeAuto],&quot;highMake&quot;) THEN 15&#13;&#10;ELSEIF CONTAINS([ballThreeAuto],&quot;lowMake&quot;) AND CONTAINS([autoHotGoalThree],&quot;autoHotGoalThree&quot;) THEN 11&#13;&#10;ELSEIF CONTAINS([ballThreeAuto],&quot;lowMake&quot;) THEN 6&#13;&#10;ELSE 0 &#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='ballThreeAutoScored' datatype='integer' name='[Calculation_5400306010106313]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF CONTAINS([ballThreeAuto],&quot;highMake&quot;) OR CONTAINS([ballThreeAuto],&quot;lowMake&quot;) THEN 1 ELSE 0 END' scope-isolation='false' />
            </column>
            <column caption='highGoalColoredAccuracy1' datatype='real' name='[Calculation_5970404211653993]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([highGoalScores_colored]+[highGoalScores_goalie]+[highGoalScores_white])/([highGoalShots_colored]+[highGoalShots_goalie]+[highGoalShots_white])' scope-isolation='false' />
            </column>
            <column caption='soloCyclerProportion' datatype='real' name='[Calculation_6160305223212906]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_9890303174831752]/[Number of Records]' scope-isolation='false' />
            </column>
            <column caption='ballOneAutoPoints' datatype='integer' name='[Calculation_6620303164959017]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF CONTAINS([ballOneAuto],&quot;highMake&quot;) AND CONTAINS([autoHotGoalOne],&quot;autoHotGoalOne&quot;) THEN 20&#13;&#10;ELSEIF CONTAINS([ballOneAuto],&quot;highMake&quot;) THEN 15&#13;&#10;ELSEIF CONTAINS([ballOneAuto],&quot;lowMake&quot;) AND CONTAINS([autoHotGoalOne],&quot;autoHotGoalOne&quot;) THEN 11&#13;&#10;ELSEIF CONTAINS([ballOneAuto],&quot;lowMake&quot;) THEN 6&#13;&#10;ELSE 0 &#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='defenseInGoalie' datatype='integer' name='[Calculation_6720301120947213]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF CONTAINS([defense_inGoalie],&quot;defense_inGoalie&quot;) THEN 1 ELSE 0 END' scope-isolation='false' />
            </column>
            <column caption='ballOneAutoScored' datatype='integer' name='[Calculation_6720306005744157]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF CONTAINS([ballOneAuto],&quot;highMake&quot;) OR CONTAINS([ballOneAuto],&quot;lowMake&quot;) THEN 1 ELSE 0 END' scope-isolation='false' />
            </column>
            <column caption='numBallsAutoUsed' datatype='integer' name='[Calculation_6780303164535382]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_4630303164056150]+[Calculation_2530303164410072]+[Calculation_8120303164436437]' scope-isolation='false' />
            </column>
            <column caption='ShotsTotal' datatype='real' name='[Calculation_7770306003540857]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[highGoalShots_colored]+[highGoalShots_goalie]+[highGoalShots_white]' scope-isolation='false' />
            </column>
            <column caption='shooterProportion' datatype='real' name='[Calculation_8100305223149782]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_8670303174818409]/[Number of Records]' scope-isolation='false' />
            </column>
            <column caption='ballThreeAutoUsed' datatype='integer' name='[Calculation_8120303164436437]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF CONTAINS([ballThreeAuto],&quot;highMake&quot;) OR &#13;&#10;CONTAINS([ballThreeAuto],&quot;highMiss&quot;) OR &#13;&#10;CONTAINS([ballThreeAuto],&quot;lowMake&quot;) OR&#13;&#10;CONTAINS([ballThreeAuto],&quot;lowMiss&quot;)&#13;&#10;THEN 1&#13;&#10;ELSE 0&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='catcherProportion' datatype='real' name='[Calculation_8320305222936780]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_9080303174733079]/[Number of Records]' scope-isolation='false' />
            </column>
            <column caption='shooter' datatype='integer' name='[Calculation_8670303174818409]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF CONTAINS([role_shooter],&quot;shooter&quot;) THEN 1 ELSE 0 END' scope-isolation='false' />
            </column>
            <column caption='robotCatches' datatype='integer' name='[Calculation_9010303172052832]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF CONTAINS([caughtBallHuman],&quot;caughtBallHuman&quot;) OR &#13;&#10;CONTAINS([caughtBallRobots],&quot;caughtBallRobots&quot;) THEN 1 &#13;&#10;ELSE 0&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='autoAccuracy' datatype='real' name='[Calculation_9010306010337187]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_0660306010312790]/[Calculation_6780303164535382]' scope-isolation='false' />
            </column>
            <column caption='catcher(role)' datatype='integer' name='[Calculation_9080303174733079]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF CONTAINS([role_catcher],&quot;catcher&quot;) THEN 1 ELSE 0 END' scope-isolation='false' />
            </column>
            <column caption='highGoalScores' datatype='real' name='[Calculation_9170301120020898]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[highGoalScores_colored]+[highGoalScores_goalie]+[highGoalScores_white]' scope-isolation='false' />
            </column>
            <column caption='collector' datatype='integer' name='[Calculation_9410303172220189]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF CONTAINS([collectedBall],&quot;collectedBall&quot;) THEN 1&#13;&#10;ELSE 0&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='ShotsGoalieProportion' datatype='real' name='[Calculation_9570306003707531]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[highGoalShots_goalie]/[Calculation_7770306003540857]' scope-isolation='false' />
            </column>
            <column caption='soloCycler' datatype='integer' name='[Calculation_9890303174831752]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF CONTAINS([role_soloCycler],&quot;soloCycler&quot;) THEN 1 ELSE 0 END' scope-isolation='false' />
            </column>
            <column caption='trussThrowAccuracy' datatype='real' name='[Calculation_9950403190641483]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[trussThrowScores]/[trussThrowShots]' scope-isolation='false' />
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Team' datatype='string' name='[TEAM_NUM]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_0880301121037679]' derivation='Avg' name='[avg:Calculation_0880301121037679:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_3320301120424237]' derivation='Avg' name='[avg:Calculation_3320301120424237:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_3890301121008021]' derivation='Avg' name='[avg:Calculation_3890301121008021:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_6720301120947213]' derivation='Avg' name='[avg:Calculation_6720301120947213:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_9010303172052832]' derivation='Avg' name='[avg:Calculation_9010303172052832:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_9410303172220189]' derivation='Avg' name='[avg:Calculation_9410303172220189:qk]' pivot='key' type='quantitative' />
            <column-instance column='[fumbles]' derivation='CountD' name='[ctd:fumbles:qk]' pivot='key' type='quantitative' />
            <column aggregation='CountD' datatype='real' datatype-customized='true' name='[fumbles]' role='measure' type='quantitative'>
            </column>
            <column caption='Scores-Colored' datatype='real' datatype-customized='true' name='[highGoalScores_colored]' role='measure' type='quantitative'>
            </column>
            <column caption='Scores-Goalie' datatype='real' datatype-customized='true' name='[highGoalScores_goalie]' role='measure' type='quantitative'>
            </column>
            <column caption='Scores-White' datatype='real' datatype-customized='true' name='[highGoalScores_white]' role='measure' type='quantitative'>
            </column>
            <column caption='Shots-Colored' datatype='real' datatype-customized='true' name='[highGoalShots_colored]' role='measure' type='quantitative'>
            </column>
            <column caption='Shots-Goalie' datatype='real' datatype-customized='true' name='[highGoalShots_goalie]' role='measure' type='quantitative'>
            </column>
            <column caption='Shots-White' datatype='real' datatype-customized='true' name='[highGoalShots_white]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' datatype-customized='true' name='[lowGoalScores]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' datatype-customized='true' name='[lowGoalShots]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[TEAM_NUM]' derivation='None' name='[none:TEAM_NUM:nk]' pivot='key' type='nominal' />
            <column datatype='real' datatype-customized='true' name='[passRecvHuman]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' datatype-customized='true' name='[passRecvRobot]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' datatype-customized='true' name='[passStarts]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' datatype-customized='true' name='[robotSpeed]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' datatype-customized='true' name='[shotsBlocked]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[Calculation_0560306115107302]' derivation='Sum' name='[sum:Calculation_0560306115107302:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_0660306010312790]' derivation='Sum' name='[sum:Calculation_0660306010312790:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_0880301121037679]' derivation='Sum' name='[sum:Calculation_0880301121037679:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1010305223043753]' derivation='Sum' name='[sum:Calculation_1010305223043753:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1140301120102569]' derivation='Sum' name='[sum:Calculation_1140301120102569:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1840303165406454]' derivation='Sum' name='[sum:Calculation_1840303165406454:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2020306003635320]' derivation='Sum' name='[sum:Calculation_2020306003635320:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2210303163902149]' derivation='Sum' name='[sum:Calculation_2210303163902149:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2310305223237409]' derivation='Sum' name='[sum:Calculation_2310305223237409:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2400303174747658]' derivation='Sum' name='[sum:Calculation_2400303174747658:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2530303164410072]' derivation='Sum' name='[sum:Calculation_2530303164410072:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2650306010036590]' derivation='Sum' name='[sum:Calculation_2650306010036590:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_3110305223116631]' derivation='Sum' name='[sum:Calculation_3110305223116631:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_3120303174623405]' derivation='Sum' name='[sum:Calculation_3120303174623405:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_3320301120424237]' derivation='Sum' name='[sum:Calculation_3320301120424237:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_3480303174853084]' derivation='Sum' name='[sum:Calculation_3480303174853084:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_3890301121008021]' derivation='Sum' name='[sum:Calculation_3890301121008021:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_3980306003743834]' derivation='Sum' name='[sum:Calculation_3980306003743834:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4200301121859883]' derivation='Sum' name='[sum:Calculation_4200301121859883:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4630303164056150]' derivation='Sum' name='[sum:Calculation_4630303164056150:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4630303165425425]' derivation='Sum' name='[sum:Calculation_4630303165425425:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_5400306010106313]' derivation='Sum' name='[sum:Calculation_5400306010106313:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_5970404211653993]' derivation='Sum' name='[sum:Calculation_5970404211653993:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_6160305223212906]' derivation='Sum' name='[sum:Calculation_6160305223212906:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_6620303164959017]' derivation='Sum' name='[sum:Calculation_6620303164959017:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_6720301120947213]' derivation='Sum' name='[sum:Calculation_6720301120947213:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_6720306005744157]' derivation='Sum' name='[sum:Calculation_6720306005744157:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_6780303164535382]' derivation='Sum' name='[sum:Calculation_6780303164535382:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_7770306003540857]' derivation='Sum' name='[sum:Calculation_7770306003540857:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_8100305223149782]' derivation='Sum' name='[sum:Calculation_8100305223149782:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_8120303164436437]' derivation='Sum' name='[sum:Calculation_8120303164436437:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_8320305222936780]' derivation='Sum' name='[sum:Calculation_8320305222936780:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_8670303174818409]' derivation='Sum' name='[sum:Calculation_8670303174818409:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_9010306010337187]' derivation='Sum' name='[sum:Calculation_9010306010337187:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_9080303174733079]' derivation='Sum' name='[sum:Calculation_9080303174733079:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_9170301120020898]' derivation='Sum' name='[sum:Calculation_9170301120020898:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_9570306003707531]' derivation='Sum' name='[sum:Calculation_9570306003707531:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_9890303174831752]' derivation='Sum' name='[sum:Calculation_9890303174831752:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_9950403190641483]' derivation='Sum' name='[sum:Calculation_9950403190641483:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[highGoalScores_colored]' derivation='Sum' name='[sum:highGoalScores_colored:qk]' pivot='key' type='quantitative' />
            <column-instance column='[highGoalScores_goalie]' derivation='Sum' name='[sum:highGoalScores_goalie:qk]' pivot='key' type='quantitative' />
            <column-instance column='[highGoalScores_white]' derivation='Sum' name='[sum:highGoalScores_white:qk]' pivot='key' type='quantitative' />
            <column-instance column='[highGoalShots_colored]' derivation='Sum' name='[sum:highGoalShots_colored:qk]' pivot='key' type='quantitative' />
            <column-instance column='[highGoalShots_goalie]' derivation='Sum' name='[sum:highGoalShots_goalie:qk]' pivot='key' type='quantitative' />
            <column-instance column='[highGoalShots_white]' derivation='Sum' name='[sum:highGoalShots_white:qk]' pivot='key' type='quantitative' />
            <column-instance column='[lowGoalScores]' derivation='Sum' name='[sum:lowGoalScores:qk]' pivot='key' type='quantitative' />
            <column-instance column='[lowGoalShots]' derivation='Sum' name='[sum:lowGoalShots:qk]' pivot='key' type='quantitative' />
            <column-instance column='[passRecvHuman]' derivation='Sum' name='[sum:passRecvHuman:qk]' pivot='key' type='quantitative' />
            <column-instance column='[passRecvRobot]' derivation='Sum' name='[sum:passRecvRobot:qk]' pivot='key' type='quantitative' />
            <column-instance column='[passStarts]' derivation='Sum' name='[sum:passStarts:qk]' pivot='key' type='quantitative' />
            <column-instance column='[robotSpeed]' derivation='Sum' name='[sum:robotSpeed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[shotsBlocked]' derivation='Sum' name='[sum:shotsBlocked:qk]' pivot='key' type='quantitative' />
            <column-instance column='[trussCatchScores]' derivation='Sum' name='[sum:trussCatchScores:qk]' pivot='key' type='quantitative' />
            <column-instance column='[trussCatchShots]' derivation='Sum' name='[sum:trussCatchShots:qk]' pivot='key' type='quantitative' />
            <column-instance column='[trussThrowScores]' derivation='Sum' name='[sum:trussThrowScores:qk]' pivot='key' type='quantitative' />
            <column-instance column='[trussThrowShots]' derivation='Sum' name='[sum:trussThrowShots:qk]' pivot='key' type='quantitative' />
            <column datatype='real' datatype-customized='true' name='[trussCatchScores]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' datatype-customized='true' name='[trussCatchShots]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' datatype-customized='true' name='[trussThrowScores]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' datatype-customized='true' name='[trussThrowShots]' role='measure' type='quantitative'>
            </column>
          </datasource-dependencies>
          <sort class='manual' column='[mysql.41699.488635277776].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[mysql.41699.488635277776].[avg:Calculation_3320301120424237:qk]&quot;</bucket>
              <bucket>&quot;[mysql.41699.488635277776].[avg:Calculation_9410303172220189:qk]&quot;</bucket>
              <bucket>&quot;[mysql.41699.488635277776].[avg:Calculation_6720301120947213:qk]&quot;</bucket>
              <bucket>&quot;[mysql.41699.488635277776].[avg:Calculation_3890301121008021:qk]&quot;</bucket>
              <bucket>&quot;[mysql.41699.488635277776].[avg:Calculation_0880301121037679:qk]&quot;</bucket>
              <bucket>&quot;[mysql.41699.488635277776].[avg:Calculation_9010303172052832:qk]&quot;</bucket>
              <bucket>&quot;[mysql.41699.488635277776].[sum:Calculation_0560306115107302:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[mysql.41699.488635277776].[none:TEAM_NUM:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[mysql.41699.488635277776].[:Measure Names]' value='19' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[mysql.41699.488635277776].[:Measure Names]' value='232' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' field='[mysql.41699.488635277776].[:Measure Names]' value='normal' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[mysql.41699.488635277776].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[mysql.41699.488635277776].[:Measure Names]</rows>
        <cols>[mysql.41699.488635277776].[none:TEAM_NUM:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Comments'>
      <table>
        <view>
          <datasources>
            <datasource caption='team_table (yes)' name='mysql.41699.488635277776' />
          </datasources>
          <datasource-dependencies datasource='mysql.41699.488635277776'>
            <column caption='Team' datatype='string' name='[TEAM_NUM]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[breakDescription]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[matchComments]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[TEAM_NUM]' derivation='None' name='[none:TEAM_NUM:nk]' pivot='key' type='nominal' />
            <column-instance column='[breakDescription]' derivation='None' name='[none:breakDescription:nk]' pivot='key' type='nominal' />
            <column-instance column='[matchComments]' derivation='None' name='[none:matchComments:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[mysql.41699.488635277776].[none:matchComments:nk]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:matchComments:nk]' />
              <groupfilter function='member' level='[none:matchComments:nk]' member='&quot;&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[mysql.41699.488635277776].[none:TEAM_NUM:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[mysql.41699.488635277776].[none:breakDescription:nk]' value='135' />
            <format attr='width' field='[mysql.41699.488635277776].[none:matchComments:nk]' value='478' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[mysql.41699.488635277776].[none:matchComments:nk]' value='62' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([mysql.41699.488635277776].[none:matchComments:nk] / [mysql.41699.488635277776].[none:breakDescription:nk])</rows>
        <cols></cols>
      </table>
    </worksheet>
    <worksheet name='Other Data'>
      <table>
        <view>
          <datasources>
            <datasource caption='team_table (yes)' name='mysql.41699.488635277776' />
          </datasources>
          <datasource-dependencies datasource='mysql.41699.488635277776'>
            <column caption='defenseProportion' datatype='real' name='[Calculation_1010305223043753]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_2400303174747658]/[Number of Records]' scope-isolation='false' />
            </column>
            <column caption='soloTrussCatcherProportion' datatype='real' name='[Calculation_2310305223237409]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_3480303174853084]/[Number of Records]' scope-isolation='false' />
            </column>
            <column caption='assisterProportion' datatype='real' name='[Calculation_3110305223116631]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_3120303174623405]/[Number of Records]' scope-isolation='false' />
            </column>
            <column caption='soloCyclerProportion' datatype='real' name='[Calculation_6160305223212906]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_9890303174831752]/[Number of Records]' scope-isolation='false' />
            </column>
            <column caption='shooterProportion' datatype='real' name='[Calculation_8100305223149782]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_8670303174818409]/[Number of Records]' scope-isolation='false' />
            </column>
            <column caption='catcherProportion' datatype='real' name='[Calculation_8320305222936780]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_9080303174733079]/[Number of Records]' scope-isolation='false' />
            </column>
            <column caption='Team' datatype='string' name='[TEAM_NUM]' role='dimension' type='nominal'>
            </column>
            <column aggregation='CountD' datatype='real' datatype-customized='true' name='[fumbles]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[TEAM_NUM]' derivation='None' name='[none:TEAM_NUM:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1010305223043753]' derivation='Sum' name='[sum:Calculation_1010305223043753:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2310305223237409]' derivation='Sum' name='[sum:Calculation_2310305223237409:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_3110305223116631]' derivation='Sum' name='[sum:Calculation_3110305223116631:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_6160305223212906]' derivation='Sum' name='[sum:Calculation_6160305223212906:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_8100305223149782]' derivation='Sum' name='[sum:Calculation_8100305223149782:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_8320305222936780]' derivation='Sum' name='[sum:Calculation_8320305222936780:qk]' pivot='key' type='quantitative' />
            <column-instance column='[fumbles]' derivation='Sum' name='[sum:fumbles:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[mysql.41699.488635277776].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[mysql.41699.488635277776].[sum:fumbles:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[mysql.41699.488635277776].[sum:Calculation_3110305223116631:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[mysql.41699.488635277776].[sum:Calculation_8320305222936780:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[mysql.41699.488635277776].[sum:Calculation_1010305223043753:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[mysql.41699.488635277776].[sum:Calculation_8100305223149782:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[mysql.41699.488635277776].[sum:Calculation_6160305223212906:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[mysql.41699.488635277776].[sum:Calculation_2310305223237409:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[mysql.41699.488635277776].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[mysql.41699.488635277776].[sum:fumbles:qk]&quot;</bucket>
              <bucket>&quot;[mysql.41699.488635277776].[sum:Calculation_3110305223116631:qk]&quot;</bucket>
              <bucket>&quot;[mysql.41699.488635277776].[sum:Calculation_8320305222936780:qk]&quot;</bucket>
              <bucket>&quot;[mysql.41699.488635277776].[sum:Calculation_1010305223043753:qk]&quot;</bucket>
              <bucket>&quot;[mysql.41699.488635277776].[sum:Calculation_8100305223149782:qk]&quot;</bucket>
              <bucket>&quot;[mysql.41699.488635277776].[sum:Calculation_6160305223212906:qk]&quot;</bucket>
              <bucket>&quot;[mysql.41699.488635277776].[sum:Calculation_2310305223237409:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[mysql.41699.488635277776].[:Measure Names]</column>
            <column>[mysql.41699.488635277776].[none:TEAM_NUM:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[mysql.41699.488635277776].[:Measure Names]' value='95' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[mysql.41699.488635277776].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[mysql.41699.488635277776].[none:TEAM_NUM:nk]</rows>
        <cols>[mysql.41699.488635277776].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='Preferred Shot Position'>
      <table>
        <view>
          <datasources>
            <datasource caption='team_table (yes)' name='mysql.41699.488635277776' />
          </datasources>
          <datasource-dependencies datasource='mysql.41699.488635277776'>
            <column caption='humanTrussThrow' datatype='integer' name='[Calculation_0560306115107302]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF CONTAINS([throwsToHumanOverTruss],&quot;throwsToHumanOverTruss&quot;) THEN 1 ELSE 0 END' scope-isolation='false' />
            </column>
            <column caption='numBallsAutoScored' datatype='integer' name='[Calculation_0660306010312790]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_6720306005744157]+[Calculation_2650306010036590]+[Calculation_5400306010106313]' scope-isolation='false' />
            </column>
            <column caption='defenseStopRobot' datatype='integer' name='[Calculation_0880301121037679]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF CONTAINS([defense_stopRobot],&quot;defense_stopRobot&quot;) THEN 1 ELSE 0 END' scope-isolation='false' />
            </column>
            <column caption='defenseProportion' datatype='real' name='[Calculation_1010305223043753]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_2400303174747658]/[Number of Records]' scope-isolation='false' />
            </column>
            <column caption='highGoalShots' datatype='real' name='[Calculation_1140301120102569]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[highGoalShots_colored]+[highGoalShots_goalie]+[highGoalShots_white]' scope-isolation='false' />
            </column>
            <column caption='ballTwoAutoPoints' datatype='integer' name='[Calculation_1840303165406454]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF CONTAINS([ballTwoAuto],&quot;highMake&quot;) AND CONTAINS([autoHotGoalTwo],&quot;autoHotGoalTwo&quot;) THEN 20&#13;&#10;ELSEIF CONTAINS([ballTwoAuto],&quot;highMake&quot;) THEN 15&#13;&#10;ELSEIF CONTAINS([ballTwoAuto],&quot;lowMake&quot;) AND CONTAINS([autoHotGoalTwo],&quot;autoHotGoalTwo&quot;) THEN 11&#13;&#10;ELSEIF CONTAINS([ballTwoAuto],&quot;lowMake&quot;) THEN 6&#13;&#10;ELSE 0 &#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='ShotsColoredProportion' datatype='real' name='[Calculation_2020306003635320]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[highGoalShots_colored]/[Calculation_7770306003540857]' scope-isolation='false' />
            </column>
            <column caption='highGoalAccuracy' datatype='real' name='[Calculation_2210303163902149]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([highGoalScores_colored]+[highGoalScores_goalie]+[highGoalScores_white])/([highGoalShots_colored]+[highGoalShots_goalie]+[highGoalShots_white])' scope-isolation='false' />
            </column>
            <column caption='soloTrussCatcherProportion' datatype='real' name='[Calculation_2310305223237409]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_3480303174853084]/[Number of Records]' scope-isolation='false' />
            </column>
            <column caption='defense' datatype='integer' name='[Calculation_2400303174747658]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF CONTAINS([role_defense],&quot;defense&quot;) THEN 1 ELSE 0 END' scope-isolation='false' />
            </column>
            <column caption='ballTwoAutoUsed' datatype='integer' name='[Calculation_2530303164410072]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF CONTAINS([ballTwoAuto],&quot;highMake&quot;) OR &#13;&#10;CONTAINS([ballTwoAuto],&quot;highMiss&quot;) OR &#13;&#10;CONTAINS([ballTwoAuto],&quot;lowMake&quot;) OR&#13;&#10;CONTAINS([ballTwoAuto],&quot;lowMiss&quot;)&#13;&#10;THEN 1&#13;&#10;ELSE 0&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='ballTwoAutoScored' datatype='integer' name='[Calculation_2650306010036590]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF CONTAINS([ballTwoAuto],&quot;highMake&quot;) OR CONTAINS([ballTwoAuto],&quot;lowMake&quot;) THEN 1 ELSE 0 END' scope-isolation='false' />
            </column>
            <column caption='assisterProportion' datatype='real' name='[Calculation_3110305223116631]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_3120303174623405]/[Number of Records]' scope-isolation='false' />
            </column>
            <column caption='assister' datatype='integer' name='[Calculation_3120303174623405]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF CONTAINS([role_assister],&quot;assister&quot;) THEN 1 ELSE 0 END' scope-isolation='false' />
            </column>
            <column caption='ManeuveredTF' datatype='integer' name='[Calculation_3320301120424237]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF CONTAINS([maneuvered],&quot;maneuvered&quot;) THEN 1 ELSE 0 END' scope-isolation='false' />
            </column>
            <column caption='soloTrussCatcher' datatype='integer' name='[Calculation_3480303174853084]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF CONTAINS([role_soloTrussCatcher],&quot;soloTrussCatcher&quot;) THEN 1 ELSE 0 END' scope-isolation='false' />
            </column>
            <column caption='defenseStopGettingBall' datatype='integer' name='[Calculation_3890301121008021]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF CONTAINS([defense_stopGettingBall],&quot;defense_stopGettingBall&quot;) THEN 1 ELSE 0 END' scope-isolation='false' />
            </column>
            <column caption='ShotsWhiteProportion' datatype='real' name='[Calculation_3980306003743834]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[highGoalShots_white]/[Calculation_7770306003540857]' scope-isolation='false' />
            </column>
            <column caption='pushedTF' datatype='integer' name='[Calculation_4200301121859883]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF CONTAINS(pushed,&quot;pushed&quot;)THEN 1 ELSE 0 END' scope-isolation='false' />
            </column>
            <column caption='ballOneAutoUsed' datatype='integer' name='[Calculation_4630303164056150]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF CONTAINS([ballOneAuto],&quot;highMake&quot;) OR &#13;&#10;CONTAINS([ballOneAuto],&quot;highMiss&quot;) OR &#13;&#10;CONTAINS([ballOneAuto],&quot;lowMake&quot;) OR&#13;&#10;CONTAINS([ballOneAuto],&quot;lowMiss&quot;)&#13;&#10;THEN 1&#13;&#10;ELSE 0&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='ballThreeAutoPoints' datatype='integer' name='[Calculation_4630303165425425]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF CONTAINS([ballThreeAuto],&quot;highMake&quot;) AND CONTAINS([autoHotGoalThree],&quot;autoHotGoalThree&quot;) THEN 20&#13;&#10;ELSEIF CONTAINS([ballThreeAuto],&quot;highMake&quot;) THEN 15&#13;&#10;ELSEIF CONTAINS([ballThreeAuto],&quot;lowMake&quot;) AND CONTAINS([autoHotGoalThree],&quot;autoHotGoalThree&quot;) THEN 11&#13;&#10;ELSEIF CONTAINS([ballThreeAuto],&quot;lowMake&quot;) THEN 6&#13;&#10;ELSE 0 &#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='ballThreeAutoScored' datatype='integer' name='[Calculation_5400306010106313]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF CONTAINS([ballThreeAuto],&quot;highMake&quot;) OR CONTAINS([ballThreeAuto],&quot;lowMake&quot;) THEN 1 ELSE 0 END' scope-isolation='false' />
            </column>
            <column caption='highGoalColoredAccuracy1' datatype='real' name='[Calculation_5970404211653993]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([highGoalScores_colored]+[highGoalScores_goalie]+[highGoalScores_white])/([highGoalShots_colored]+[highGoalShots_goalie]+[highGoalShots_white])' scope-isolation='false' />
            </column>
            <column caption='soloCyclerProportion' datatype='real' name='[Calculation_6160305223212906]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_9890303174831752]/[Number of Records]' scope-isolation='false' />
            </column>
            <column caption='ballOneAutoPoints' datatype='integer' name='[Calculation_6620303164959017]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF CONTAINS([ballOneAuto],&quot;highMake&quot;) AND CONTAINS([autoHotGoalOne],&quot;autoHotGoalOne&quot;) THEN 20&#13;&#10;ELSEIF CONTAINS([ballOneAuto],&quot;highMake&quot;) THEN 15&#13;&#10;ELSEIF CONTAINS([ballOneAuto],&quot;lowMake&quot;) AND CONTAINS([autoHotGoalOne],&quot;autoHotGoalOne&quot;) THEN 11&#13;&#10;ELSEIF CONTAINS([ballOneAuto],&quot;lowMake&quot;) THEN 6&#13;&#10;ELSE 0 &#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='defenseInGoalie' datatype='integer' name='[Calculation_6720301120947213]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF CONTAINS([defense_inGoalie],&quot;defense_inGoalie&quot;) THEN 1 ELSE 0 END' scope-isolation='false' />
            </column>
            <column caption='ballOneAutoScored' datatype='integer' name='[Calculation_6720306005744157]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF CONTAINS([ballOneAuto],&quot;highMake&quot;) OR CONTAINS([ballOneAuto],&quot;lowMake&quot;) THEN 1 ELSE 0 END' scope-isolation='false' />
            </column>
            <column caption='numBallsAutoUsed' datatype='integer' name='[Calculation_6780303164535382]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_4630303164056150]+[Calculation_2530303164410072]+[Calculation_8120303164436437]' scope-isolation='false' />
            </column>
            <column caption='ShotsTotal' datatype='real' name='[Calculation_7770306003540857]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[highGoalShots_colored]+[highGoalShots_goalie]+[highGoalShots_white]' scope-isolation='false' />
            </column>
            <column caption='shooterProportion' datatype='real' name='[Calculation_8100305223149782]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_8670303174818409]/[Number of Records]' scope-isolation='false' />
            </column>
            <column caption='ballThreeAutoUsed' datatype='integer' name='[Calculation_8120303164436437]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF CONTAINS([ballThreeAuto],&quot;highMake&quot;) OR &#13;&#10;CONTAINS([ballThreeAuto],&quot;highMiss&quot;) OR &#13;&#10;CONTAINS([ballThreeAuto],&quot;lowMake&quot;) OR&#13;&#10;CONTAINS([ballThreeAuto],&quot;lowMiss&quot;)&#13;&#10;THEN 1&#13;&#10;ELSE 0&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='catcherProportion' datatype='real' name='[Calculation_8320305222936780]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_9080303174733079]/[Number of Records]' scope-isolation='false' />
            </column>
            <column caption='shooter' datatype='integer' name='[Calculation_8670303174818409]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF CONTAINS([role_shooter],&quot;shooter&quot;) THEN 1 ELSE 0 END' scope-isolation='false' />
            </column>
            <column caption='autoAccuracy' datatype='real' name='[Calculation_9010306010337187]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_0660306010312790]/[Calculation_6780303164535382]' scope-isolation='false' />
            </column>
            <column caption='catcher(role)' datatype='integer' name='[Calculation_9080303174733079]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF CONTAINS([role_catcher],&quot;catcher&quot;) THEN 1 ELSE 0 END' scope-isolation='false' />
            </column>
            <column caption='highGoalScores' datatype='real' name='[Calculation_9170301120020898]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[highGoalScores_colored]+[highGoalScores_goalie]+[highGoalScores_white]' scope-isolation='false' />
            </column>
            <column caption='ShotsGoalieProportion' datatype='real' name='[Calculation_9570306003707531]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[highGoalShots_goalie]/[Calculation_7770306003540857]' scope-isolation='false' />
            </column>
            <column caption='soloCycler' datatype='integer' name='[Calculation_9890303174831752]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF CONTAINS([role_soloCycler],&quot;soloCycler&quot;) THEN 1 ELSE 0 END' scope-isolation='false' />
            </column>
            <column caption='trussThrowAccuracy' datatype='real' name='[Calculation_9950403190641483]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[trussThrowScores]/[trussThrowShots]' scope-isolation='false' />
            </column>
            <column caption='Match Number' datatype='string' name='[MATCH_NUM]' role='dimension' type='nominal'>
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Team' datatype='string' name='[TEAM_NUM]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[fumbles]' derivation='CountD' name='[ctd:fumbles:qk]' pivot='key' type='quantitative' />
            <column aggregation='CountD' datatype='real' datatype-customized='true' name='[fumbles]' role='measure' type='quantitative'>
            </column>
            <column caption='Scores-Colored' datatype='real' datatype-customized='true' name='[highGoalScores_colored]' role='measure' type='quantitative'>
            </column>
            <column caption='Scores-Goalie' datatype='real' datatype-customized='true' name='[highGoalScores_goalie]' role='measure' type='quantitative'>
            </column>
            <column caption='Scores-White' datatype='real' datatype-customized='true' name='[highGoalScores_white]' role='measure' type='quantitative'>
            </column>
            <column caption='Shots-Colored' datatype='real' datatype-customized='true' name='[highGoalShots_colored]' role='measure' type='quantitative'>
            </column>
            <column caption='Shots-Goalie' datatype='real' datatype-customized='true' name='[highGoalShots_goalie]' role='measure' type='quantitative'>
            </column>
            <column caption='Shots-White' datatype='real' datatype-customized='true' name='[highGoalShots_white]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' datatype-customized='true' name='[lowGoalScores]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' datatype-customized='true' name='[lowGoalShots]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[MATCH_NUM]' derivation='None' name='[none:MATCH_NUM:nk]' pivot='key' type='nominal' />
            <column-instance column='[TEAM_NUM]' derivation='None' name='[none:TEAM_NUM:nk]' pivot='key' type='nominal' />
            <column datatype='real' datatype-customized='true' name='[passRecvHuman]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' datatype-customized='true' name='[passRecvRobot]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' datatype-customized='true' name='[passStarts]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' datatype-customized='true' name='[robotSpeed]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' datatype-customized='true' name='[shotsBlocked]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[Calculation_0560306115107302]' derivation='Sum' name='[sum:Calculation_0560306115107302:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_0660306010312790]' derivation='Sum' name='[sum:Calculation_0660306010312790:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_0880301121037679]' derivation='Sum' name='[sum:Calculation_0880301121037679:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1010305223043753]' derivation='Sum' name='[sum:Calculation_1010305223043753:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1140301120102569]' derivation='Sum' name='[sum:Calculation_1140301120102569:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1840303165406454]' derivation='Sum' name='[sum:Calculation_1840303165406454:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2020306003635320]' derivation='Sum' name='[sum:Calculation_2020306003635320:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2210303163902149]' derivation='Sum' name='[sum:Calculation_2210303163902149:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2310305223237409]' derivation='Sum' name='[sum:Calculation_2310305223237409:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2400303174747658]' derivation='Sum' name='[sum:Calculation_2400303174747658:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2530303164410072]' derivation='Sum' name='[sum:Calculation_2530303164410072:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2650306010036590]' derivation='Sum' name='[sum:Calculation_2650306010036590:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_3110305223116631]' derivation='Sum' name='[sum:Calculation_3110305223116631:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_3120303174623405]' derivation='Sum' name='[sum:Calculation_3120303174623405:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_3320301120424237]' derivation='Sum' name='[sum:Calculation_3320301120424237:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_3480303174853084]' derivation='Sum' name='[sum:Calculation_3480303174853084:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_3890301121008021]' derivation='Sum' name='[sum:Calculation_3890301121008021:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_3980306003743834]' derivation='Sum' name='[sum:Calculation_3980306003743834:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4200301121859883]' derivation='Sum' name='[sum:Calculation_4200301121859883:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4630303164056150]' derivation='Sum' name='[sum:Calculation_4630303164056150:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4630303165425425]' derivation='Sum' name='[sum:Calculation_4630303165425425:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_5400306010106313]' derivation='Sum' name='[sum:Calculation_5400306010106313:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_5970404211653993]' derivation='Sum' name='[sum:Calculation_5970404211653993:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_6160305223212906]' derivation='Sum' name='[sum:Calculation_6160305223212906:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_6620303164959017]' derivation='Sum' name='[sum:Calculation_6620303164959017:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_6720301120947213]' derivation='Sum' name='[sum:Calculation_6720301120947213:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_6720306005744157]' derivation='Sum' name='[sum:Calculation_6720306005744157:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_6780303164535382]' derivation='Sum' name='[sum:Calculation_6780303164535382:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_7770306003540857]' derivation='Sum' name='[sum:Calculation_7770306003540857:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_8100305223149782]' derivation='Sum' name='[sum:Calculation_8100305223149782:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_8120303164436437]' derivation='Sum' name='[sum:Calculation_8120303164436437:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_8320305222936780]' derivation='Sum' name='[sum:Calculation_8320305222936780:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_8670303174818409]' derivation='Sum' name='[sum:Calculation_8670303174818409:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_9010306010337187]' derivation='Sum' name='[sum:Calculation_9010306010337187:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_9080303174733079]' derivation='Sum' name='[sum:Calculation_9080303174733079:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_9170301120020898]' derivation='Sum' name='[sum:Calculation_9170301120020898:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_9570306003707531]' derivation='Sum' name='[sum:Calculation_9570306003707531:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_9890303174831752]' derivation='Sum' name='[sum:Calculation_9890303174831752:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_9950403190641483]' derivation='Sum' name='[sum:Calculation_9950403190641483:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[highGoalScores_colored]' derivation='Sum' name='[sum:highGoalScores_colored:qk]' pivot='key' type='quantitative' />
            <column-instance column='[highGoalScores_goalie]' derivation='Sum' name='[sum:highGoalScores_goalie:qk]' pivot='key' type='quantitative' />
            <column-instance column='[highGoalScores_white]' derivation='Sum' name='[sum:highGoalScores_white:qk]' pivot='key' type='quantitative' />
            <column-instance column='[highGoalShots_colored]' derivation='Sum' name='[sum:highGoalShots_colored:qk]' pivot='key' type='quantitative' />
            <column-instance column='[highGoalShots_goalie]' derivation='Sum' name='[sum:highGoalShots_goalie:qk]' pivot='key' type='quantitative' />
            <column-instance column='[highGoalShots_white]' derivation='Sum' name='[sum:highGoalShots_white:qk]' pivot='key' type='quantitative' />
            <column-instance column='[lowGoalScores]' derivation='Sum' name='[sum:lowGoalScores:qk]' pivot='key' type='quantitative' />
            <column-instance column='[lowGoalShots]' derivation='Sum' name='[sum:lowGoalShots:qk]' pivot='key' type='quantitative' />
            <column-instance column='[passRecvHuman]' derivation='Sum' name='[sum:passRecvHuman:qk]' pivot='key' type='quantitative' />
            <column-instance column='[passRecvRobot]' derivation='Sum' name='[sum:passRecvRobot:qk]' pivot='key' type='quantitative' />
            <column-instance column='[passStarts]' derivation='Sum' name='[sum:passStarts:qk]' pivot='key' type='quantitative' />
            <column-instance column='[robotSpeed]' derivation='Sum' name='[sum:robotSpeed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[shotsBlocked]' derivation='Sum' name='[sum:shotsBlocked:qk]' pivot='key' type='quantitative' />
            <column-instance column='[trussCatchScores]' derivation='Sum' name='[sum:trussCatchScores:qk]' pivot='key' type='quantitative' />
            <column-instance column='[trussCatchShots]' derivation='Sum' name='[sum:trussCatchShots:qk]' pivot='key' type='quantitative' />
            <column-instance column='[trussThrowScores]' derivation='Sum' name='[sum:trussThrowScores:qk]' pivot='key' type='quantitative' />
            <column-instance column='[trussThrowShots]' derivation='Sum' name='[sum:trussThrowShots:qk]' pivot='key' type='quantitative' />
            <column datatype='real' datatype-customized='true' name='[trussCatchScores]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' datatype-customized='true' name='[trussCatchShots]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' datatype-customized='true' name='[trussThrowScores]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' datatype-customized='true' name='[trussThrowShots]' role='measure' type='quantitative'>
            </column>
          </datasource-dependencies>
          <slices>
            <column>[mysql.41699.488635277776].[none:TEAM_NUM:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[mysql.41699.488635277776].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([mysql.41699.488635277776].[none:TEAM_NUM:nk] / [mysql.41699.488635277776].[none:MATCH_NUM:nk])</rows>
        <cols>[mysql.41699.488635277776].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='Roles'>
      <table>
        <view>
          <datasources>
            <datasource caption='team_table (yes)' name='mysql.41699.488635277776' />
          </datasources>
          <datasource-dependencies datasource='mysql.41699.488635277776'>
            <column caption='defenseProportion' datatype='real' name='[Calculation_1010305223043753]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_2400303174747658]/[Number of Records]' scope-isolation='false' />
            </column>
            <column caption='soloTrussCatcherProportion' datatype='real' name='[Calculation_2310305223237409]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_3480303174853084]/[Number of Records]' scope-isolation='false' />
            </column>
            <column caption='ballTwoAutoUsed' datatype='integer' name='[Calculation_2530303164410072]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF CONTAINS([ballTwoAuto],&quot;highMake&quot;) OR &#13;&#10;CONTAINS([ballTwoAuto],&quot;highMiss&quot;) OR &#13;&#10;CONTAINS([ballTwoAuto],&quot;lowMake&quot;) OR&#13;&#10;CONTAINS([ballTwoAuto],&quot;lowMiss&quot;)&#13;&#10;THEN 1&#13;&#10;ELSE 0&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='assisterProportion' datatype='real' name='[Calculation_3110305223116631]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_3120303174623405]/[Number of Records]' scope-isolation='false' />
            </column>
            <column caption='soloCyclerProportion' datatype='real' name='[Calculation_6160305223212906]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_9890303174831752]/[Number of Records]' scope-isolation='false' />
            </column>
            <column caption='shooterProportion' datatype='real' name='[Calculation_8100305223149782]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_8670303174818409]/[Number of Records]' scope-isolation='false' />
            </column>
            <column caption='catcherProportion' datatype='real' name='[Calculation_8320305222936780]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_9080303174733079]/[Number of Records]' scope-isolation='false' />
            </column>
            <column caption='catcher(role)' datatype='integer' name='[Calculation_9080303174733079]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF CONTAINS([role_catcher],&quot;catcher&quot;) THEN 1 ELSE 0 END' scope-isolation='false' />
            </column>
            <column caption='Team' datatype='string' name='[TEAM_NUM]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[TEAM_NUM]' derivation='None' name='[none:TEAM_NUM:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1010305223043753]' derivation='Sum' name='[sum:Calculation_1010305223043753:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2310305223237409]' derivation='Sum' name='[sum:Calculation_2310305223237409:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2530303164410072]' derivation='Sum' name='[sum:Calculation_2530303164410072:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_3110305223116631]' derivation='Sum' name='[sum:Calculation_3110305223116631:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_6160305223212906]' derivation='Sum' name='[sum:Calculation_6160305223212906:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_8100305223149782]' derivation='Sum' name='[sum:Calculation_8100305223149782:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_8320305222936780]' derivation='Sum' name='[sum:Calculation_8320305222936780:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_9080303174733079]' derivation='Sum' name='[sum:Calculation_9080303174733079:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[mysql.41699.488635277776].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[mysql.41699.488635277776].[sum:Calculation_8320305222936780:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[mysql.41699.488635277776].[sum:Calculation_3110305223116631:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[mysql.41699.488635277776].[sum:Calculation_1010305223043753:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[mysql.41699.488635277776].[sum:Calculation_8100305223149782:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[mysql.41699.488635277776].[sum:Calculation_6160305223212906:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[mysql.41699.488635277776].[sum:Calculation_2310305223237409:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[mysql.41699.488635277776].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[mysql.41699.488635277776].[sum:Calculation_2530303164410072:qk]&quot;</bucket>
              <bucket>&quot;[mysql.41699.488635277776].[sum:Calculation_9080303174733079:qk]&quot;</bucket>
              <bucket>&quot;[mysql.41699.488635277776].[sum:Calculation_8320305222936780:qk]&quot;</bucket>
              <bucket>&quot;[mysql.41699.488635277776].[sum:Calculation_3110305223116631:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[mysql.41699.488635277776].[none:TEAM_NUM:nk]</column>
            <column>[mysql.41699.488635277776].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[mysql.41699.488635277776].[none:TEAM_NUM:nk]' value='98' />
            <format attr='width' value='117' />
            <format attr='height' field='[mysql.41699.488635277776].[none:TEAM_NUM:nk]' value='24' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[mysql.41699.488635277776].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[mysql.41699.488635277776].[:Measure Names]</rows>
        <cols>[mysql.41699.488635277776].[none:TEAM_NUM:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Teleop High Goal Accuracy Sort'>
      <table>
        <view>
          <datasources>
            <datasource caption='team_table (yes)' name='mysql.41699.488635277776' />
          </datasources>
          <datasource-dependencies datasource='mysql.41699.488635277776'>
            <column caption='highGoalColoredAccuracy1' datatype='real' name='[Calculation_5970404211653993]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([highGoalScores_colored]+[highGoalScores_goalie]+[highGoalScores_white])/([highGoalShots_colored]+[highGoalShots_goalie]+[highGoalShots_white])' scope-isolation='false' />
            </column>
            <column caption='Team' datatype='string' name='[TEAM_NUM]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_5970404211653993]' derivation='Avg' name='[avg:Calculation_5970404211653993:qk]' pivot='key' type='quantitative' />
            <column-instance column='[TEAM_NUM]' derivation='None' name='[none:TEAM_NUM:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <sort class='computed' column='[mysql.41699.488635277776].[none:TEAM_NUM:nk]' direction='DESC' using='[mysql.41699.488635277776].[avg:Calculation_5970404211653993:qk]'>
          </sort>
          <slices>
            <column>[mysql.41699.488635277776].[none:TEAM_NUM:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[mysql.41699.488635277776].[avg:Calculation_5970404211653993:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[mysql.41699.488635277776].[none:TEAM_NUM:nk]</rows>
        <cols></cols>
      </table>
    </worksheet>
    <worksheet name='Truss Throw Accuracy Sort'>
      <table>
        <view>
          <datasources>
            <datasource caption='team_table (yes)' name='mysql.41699.488635277776' />
          </datasources>
          <datasource-dependencies datasource='mysql.41699.488635277776'>
            <column caption='trussThrowAccuracy' datatype='real' name='[Calculation_9950403190641483]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[trussThrowScores]/[trussThrowShots]' scope-isolation='false' />
            </column>
            <column caption='Team' datatype='string' name='[TEAM_NUM]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_9950403190641483]' derivation='Avg' name='[avg:Calculation_9950403190641483:qk]' pivot='key' type='quantitative' />
            <column-instance column='[trussThrowScores]' derivation='Avg' name='[avg:trussThrowScores:qk]' pivot='key' type='quantitative' />
            <column-instance column='[TEAM_NUM]' derivation='None' name='[none:TEAM_NUM:nk]' pivot='key' type='nominal' />
            <column datatype='real' datatype-customized='true' name='[trussThrowScores]' role='measure' type='quantitative'>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[mysql.41699.488635277776].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[mysql.41699.488635277776].[avg:trussThrowScores:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[mysql.41699.488635277776].[avg:Calculation_9950403190641483:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[mysql.41699.488635277776].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[mysql.41699.488635277776].[avg:trussThrowScores:qk]&quot;</bucket>
              <bucket>&quot;[mysql.41699.488635277776].[avg:Calculation_9950403190641483:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <sort class='computed' column='[mysql.41699.488635277776].[none:TEAM_NUM:nk]' direction='DESC' using='[mysql.41699.488635277776].[avg:trussThrowScores:qk]'>
          </sort>
          <slices>
            <column>[mysql.41699.488635277776].[none:TEAM_NUM:nk]</column>
            <column>[mysql.41699.488635277776].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[mysql.41699.488635277776].[:Measure Names]' value='126' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[mysql.41699.488635277776].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[mysql.41699.488635277776].[none:TEAM_NUM:nk]</rows>
        <cols>[mysql.41699.488635277776].[:Measure Names]</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Alliance Selection Report'>
      <layout-options export-orientation='landscape'>
      </layout-options>
      <style>
      </style>
      <size maxheight='1600' maxwidth='2000' minheight='1600' minwidth='2000' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='8' param='vert' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='2500' id='7' type='title' w='100000' x='0' y='0'>
            </zone>
            <zone h='97250' id='6' type='layout-basic' w='100000' x='0' y='2500'>
              <zone h='97250' id='1' name='Auto Accuracy Sort' show-title='true' w='9500' x='0' y='2500'>
              </zone>
              <zone h='97250' id='3' name='Other Data' show-title='true' w='63400' x='36600' y='2500'>
              </zone>
              <zone h='97250' id='4' name='Truss Throw Accuracy Sort' show-title='true' w='18100' x='18500' y='2500'>
              </zone>
              <zone h='97250' id='5' name='Teleop High Goal Accuracy Sort' show-title='true' w='9000' x='9500' y='2500'>
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Team Report'>
      <layout-options export-orientation='landscape'>
      </layout-options>
      <style>
      </style>
      <size maxheight='1600' maxwidth='2000' minheight='1600' minwidth='2000' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='11' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone fixed-size='511' h='100000' id='8' is-fixed='true' param='horz' type='layout-flow' w='25550' x='0' y='0'>
              <zone fixed-size='234' h='100000' id='5' is-fixed='true' param='horz' type='layout-flow' w='25550' x='0' y='0'>
                <zone h='100000' id='3' type='layout-basic' w='25550' x='0' y='0'>
                  <zone h='50000' id='20' type='text' w='25550' x='0' y='50000'>
                    <formatted-text>
                      <run fontsize='14'>This team had 1 match out of 1 where they did not shoot any balls in autonomous.</run>
                    </formatted-text>
                  </zone>
                  <zone h='50000' id='21' name='Alliance' show-title='true' w='12775' x='12775' y='0'>
                  </zone>
                  <zone h='50000' id='28' name='Truss Throw Accuracy Sort' show-title='true' w='12775' x='0' y='0'>
                  </zone>
                </zone>
              </zone>
            </zone>
            <zone fixed-size='492' h='100000' id='23' is-fixed='true' type='layout-basic' w='24600' x='25550' y='0'>
              <zone h='32546' id='25' type='layout-basic' w='24600' x='25550' y='0'>
                <zone h='14775' id='10' param='vert' type='layout-flow' w='24600' x='25550' y='0'>
                  <zone h='4188' id='13' name='Accuracy' param='[mysql.41699.488635277776].[:Measure Names]' type='color' w='24600' x='25550' y='0'>
                  </zone>
                  <zone h='10587' id='14' name='Comments' show-title='true' w='24600' x='25550' y='4188'>
                    <layout-cache fixed-size-h='167' type-h='fixed' type-w='fixed' />
                  </zone>
                </zone>
                <zone h='17771' id='26' param='vert' type='layout-flow' w='24600' x='25550' y='14775'>
                  <zone fixed-size='543' h='17771' id='16' is-fixed='true' name='Preferred Shot Position' show-title='true' w='24600' x='25550' y='14775'>
                  </zone>
                </zone>
              </zone>
              <zone h='67454' id='24' param='vert' type='layout-flow' w='24600' x='25550' y='32546'>
                <zone fixed-size='284' h='18250' id='22' is-fixed='true' name='Alliance Foul Points' show-title='true' w='24600' x='25550' y='32546'>
                </zone>
                <zone fixed-size='350' h='22375' id='27' is-fixed='true' name='Alliance Foul Descriptions' show-title='true' w='24600' x='25550' y='50796'>
                </zone>
                <zone fixed-size='795' h='26829' id='9' is-fixed='true' name='Accuracy' show-title='true' w='24600' x='25550' y='73171'>
                </zone>
              </zone>
            </zone>
            <zone fixed-size='268' h='100000' id='1' is-fixed='true' name='Avgs' show-title='true' w='13800' x='50150' y='0'>
              <layout-cache type-h='fixed' type-w='cell' />
            </zone>
            <zone h='100000' id='6' name='Booleans' show-title='true' w='15100' x='63950' y='0'>
              <layout-cache type-h='fixed' type-w='fixed' />
            </zone>
            <zone h='100000' id='19' name='Auto Accuracy' show-title='true' w='20750' x='79050' y='0'>
              <layout-cache type-h='fixed' type-w='cell' />
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows>
    <window class='schema' source-height='64' />
    <window auto-hidden='0' class='worksheet' maximized='0' name='Alliance'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[mysql.41704.895000625002].[:Measure Names]</field>
          <field>[mysql.41704.895000625002].[none:MATCH_NUM:ok]</field>
          <field>[mysql.41704.895000625002].[none:TEAM_NUM:nk]</field>
          <field>[mysql.41704.895000625002].[none:TEAM_NUM:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Avgs'>
      <cards>
        <edge name='left'>
          <strip size='158'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='32'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[mysql.41699.488635277776].[none:TEAM_NUM:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[mysql.41699.488635277776].[:Measure Names]</field>
          <field>[mysql.41699.488635277776].[none:TEAM_NUM:nk]</field>
          <field>[mysql.41699.488635277776].[none:matchComments:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Booleans'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[mysql.41699.488635277776].[none:TEAM_NUM:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[mysql.41699.488635277776].[:Measure Names]</field>
          <field>[mysql.41699.488635277776].[none:Calculation_3320301120424237:nk]</field>
          <field>[mysql.41699.488635277776].[none:TEAM_NUM:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Accuracy'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card size='37' type='pages' />
            <card size='73' type='filters' />
            <card size='182' type='marks' />
            <card size='98' type='measures' />
            <card pane-specification-id='0' param='[mysql.41699.488635277776].[:Measure Names]' size='121' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[mysql.41699.488635277776].[none:TEAM_NUM:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[mysql.41699.488635277776].[none:MATCH_NUM:nk]</field>
          <field>[mysql.41699.488635277776].[none:TEAM_NUM:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Auto Accuracy'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[mysql.41699.488635277776].[none:TEAM_NUM:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[mysql.41699.488635277776].[:Measure Names]</field>
          <field>[mysql.41699.488635277776].[none:MATCH_NUM:nk]</field>
          <field>[mysql.41699.488635277776].[none:TEAM_NUM:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Comments'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[mysql.41699.488635277776].[none:TEAM_NUM:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[mysql.41699.488635277776].[:Measure Names]</field>
          <field>[mysql.41699.488635277776].[none:TEAM_NUM:nk]</field>
          <field>[mysql.41699.488635277776].[none:breakDescription:nk]</field>
          <field>[mysql.41699.488635277776].[none:matchComments:nk]</field>
          <field>[mysql.41699.488635277776].[none:robotBreakage:nk]</field>
          <field>[mysql.41699.488635277776].[usr:Calculation_7140303175912315:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Roles'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[mysql.41699.488635277776].[none:TEAM_NUM:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[mysql.41699.488635277776].[:Measure Names]</field>
          <field>[mysql.41699.488635277776].[none:TEAM_NUM:nk]</field>
          <field>[mysql.41699.488635277776].[usr:Calculation_7140303175912315:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Preferred Shot Position'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[mysql.41699.488635277776].[none:TEAM_NUM:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[mysql.41699.488635277776].[none:MATCH_NUM:nk]</field>
          <field>[mysql.41699.488635277776].[none:TEAM_NUM:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Alliance Foul Points'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[mysql.41704.895000625002].[none:TEAM_NUM:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[mysql.41704.895000625002].[:Measure Names]</field>
          <field>[mysql.41704.895000625002].[none:MATCH_NUM:ok]</field>
          <field>[mysql.41704.895000625002].[none:TEAM_NUM:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Alliance Foul Descriptions'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[mysql.41704.895000625002].[none:TEAM_NUM:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[mysql.41704.895000625002].[:Measure Names]</field>
          <field>[mysql.41704.895000625002].[none:MATCH_NUM:ok]</field>
          <field>[mysql.41704.895000625002].[none:TEAM_NUM:ok]</field>
          <field>[mysql.41704.895000625002].[none:foulDescription:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='1' name='Team Report'>
      <active id='16' />
      <zones>
        <zone forceUpdate='true' name='' type='text' />
        <zone name='Accuracy' pane-specification-id='0' param='[mysql.41699.488635277776].[:Measure Names]' type='color' />
        <zone name='Accuracy'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='Avgs'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='Auto Accuracy'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
      </zones>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Auto Accuracy Sort'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[mysql.41699.488635277776].[none:TEAM_NUM:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[mysql.41699.488635277776].[:Measure Names]</field>
          <field>[mysql.41699.488635277776].[none:TEAM_NUM:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Teleop High Goal Accuracy Sort'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[mysql.41699.488635277776].[:Measure Names]</field>
          <field>[mysql.41699.488635277776].[none:TEAM_NUM:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Truss Throw Accuracy Sort'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[mysql.41699.488635277776].[:Measure Names]</field>
          <field>[mysql.41699.488635277776].[none:TEAM_NUM:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Other Data'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[mysql.41699.488635277776].[:Measure Names]</field>
          <field>[mysql.41699.488635277776].[none:TEAM_NUM:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='0' name='Alliance Selection Report'>
      <zones>
      </zones>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Alliance' width='191'>
      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
      668i+brEAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Avgs' width='191'>
      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
    </thumbnail>
    <thumbnail height='192' name='Booleans' width='191'>
      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
    </thumbnail>
    <thumbnail height='192' name='Accuracy' width='192'>
      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
      SRaK/H92a24ZDGkRHgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Auto Accuracy' width='191'>
      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
      npGTnf4PaDB7yU0EXgoAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='104' name='Comments' width='192'>
      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
      hu0ciMj/AJ5dwWglXIIrAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='164' name='Roles' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='144' name='Preferred Shot Position' width='192'>
      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
      mhPjAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='141' name='Alliance Foul Points' width='192'>
      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
    </thumbnail>
    <thumbnail height='152' name='Alliance Foul Descriptions' width='192'>
      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
      RnM7AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Team Report' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Auto Accuracy Sort' width='144'>
      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
    </thumbnail>
    <thumbnail height='192' name='Teleop High Goal Accuracy Sort' width='144'>
      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
    </thumbnail>
    <thumbnail height='192' name='Truss Throw Accuracy Sort' width='191'>
      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
    </thumbnail>
    <thumbnail height='144' name='Other Data' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Alliance Selection Report' width='192'>
      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
      VgAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
