<?xml version='1.0' encoding='utf-8' ?>

<workbook version='8.2' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <!-- build 8100.14.0213.2024                -->
  <preferences>
  </preferences>
  <datasources>
    <datasource caption='alliance_table (yes)' inline='true' name='mysql.41703.893065949072' version='8.2'>
      <connection class='mysql' dbname='yes' odbc-native-protocol='yes' port='3306' server='172.20.10.11' username='root'>
        <relation name='alliance_table' table='[alliance_table]' type='table' />
      </connection>
      <column datatype='integer' name='[MATCH_NUM]' role='dimension' type='ordinal'>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='C:\Users\nnrobot\Documents\My Tableau Repository\Datasources\alliance_table (yes).tde' schema='Extract' tablename='Extract' update-time='3/6/2014 3:27:25 AM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='7' timestamp-start='2014-03-06 03:27:25.609000' />
          </refresh>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.497453' measure-ordering='alphabetic' measure-percentage='0.502547' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='team_alliance_cycle' inline='true' name='mysql.41704.895000625002' version='8.2'>
      <connection class='mysql' dbname='yes' odbc-native-protocol='yes' port='3306' server='172.20.10.11' username='root'>
        <relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[alliance_table].[HASH]'>
              </expression>
              <expression op='[cycle_table].[hash]'>
              </expression>
            </expression>
          </clause>
          <relation join='inner' type='join'>
            <clause type='join'>
              <expression op='='>
                <expression op='[alliance_table].[MATCH_NUM]'>
                </expression>
                <expression op='[team_table].[MATCH_NUM]'>
                </expression>
              </expression>
            </clause>
            <relation name='alliance_table' table='[alliance_table]' type='table' />
            <relation name='team_table' table='[team_table]' type='table' />
          </relation>
          <relation name='cycle_table' table='[cycle_table]' type='table' />
        </relation>
        <cols>
          <map key='[ALLIANCE_COLOR]' value='[alliance_table].[ALLIANCE_COLOR]' />
          <map key='[HASH]' value='[alliance_table].[HASH]' />
          <map key='[MATCH_NUM]' value='[alliance_table].[MATCH_NUM]' />
          <map key='[NAME_OF_SCOUT]' value='[alliance_table].[NAME_OF_SCOUT]' />
          <map key='[TEAM_NUM]' value='[team_table].[TEAM_NUM]' />
          <map key='[allianceAutoPoints]' value='[alliance_table].[allianceAutoPoints]' />
          <map key='[allianceBallEndTime]' value='[alliance_table].[allianceBallEndTime]' />
          <map key='[allianceBallEndTime_checkbox]' value='[team_table].[allianceBallEndTime_checkbox]' />
          <map key='[allianceFoulPoints]' value='[alliance_table].[allianceFoulPoints]' />
          <map key='[allianceTeleopPoints]' value='[alliance_table].[allianceTeleopPoints]' />
          <map key='[allianceTotalPoints]' value='[alliance_table].[allianceTotalPoints]' />
          <map key='[autoHotGoalOne]' value='[team_table].[autoHotGoalOne]' />
          <map key='[autoHotGoalThree]' value='[team_table].[autoHotGoalThree]' />
          <map key='[autoHotGoalTwo]' value='[team_table].[autoHotGoalTwo]' />
          <map key='[ballOneAuto]' value='[team_table].[ballOneAuto]' />
          <map key='[ballThreeAuto]' value='[team_table].[ballThreeAuto]' />
          <map key='[ballTwoAuto]' value='[team_table].[ballTwoAuto]' />
          <map key='[breakDescription]' value='[team_table].[breakDescription]' />
          <map key='[comments]' value='[alliance_table].[comments]' />
          <map key='[defense_inGoalie]' value='[team_table].[defense_inGoalie]' />
          <map key='[defense_stopGettingBall]' value='[team_table].[defense_stopGettingBall]' />
          <map key='[defense_stopRobot]' value='[team_table].[defense_stopRobot]' />
          <map key='[endTime]' value='[cycle_table].[endTime]' />
          <map key='[foulDescription]' value='[alliance_table].[foulDescription]' />
          <map key='[fumbleDescription]' value='[team_table].[fumbleDescription]' />
          <map key='[fumbles]' value='[team_table].[fumbles]' />
          <map key='[hash]' value='[cycle_table].[hash]' />
          <map key='[highGoalScores_colored]' value='[team_table].[highGoalScores_colored]' />
          <map key='[highGoalScores_goalie]' value='[team_table].[highGoalScores_goalie]' />
          <map key='[highGoalScores_white]' value='[team_table].[highGoalScores_white]' />
          <map key='[highGoalShots_colored]' value='[team_table].[highGoalShots_colored]' />
          <map key='[highGoalShots_goalie]' value='[team_table].[highGoalShots_goalie]' />
          <map key='[highGoalShots_white]' value='[team_table].[highGoalShots_white]' />
          <map key='[lateAutoReason]' value='[alliance_table].[lateAutoReason]' />
          <map key='[lowGoalScores]' value='[team_table].[lowGoalScores]' />
          <map key='[lowGoalShots]' value='[team_table].[lowGoalShots]' />
          <map key='[maneuvered]' value='[team_table].[maneuvered]' />
          <map key='[matchComments]' value='[team_table].[matchComments]' />
          <map key='[numAssists]' value='[cycle_table].[numAssists]' />
          <map key='[passRecvHuman]' value='[team_table].[passRecvHuman]' />
          <map key='[passRecvRobot]' value='[team_table].[passRecvRobot]' />
          <map key='[passStarts]' value='[team_table].[passStarts]' />
          <map key='[preBallsOnField]' value='[alliance_table].[preBallsOnField]' />
          <map key='[preGameBallOnePosition]' value='[team_table].[preGameBallOnePosition]' />
          <map key='[preGameBallThreePosition]' value='[team_table].[preGameBallThreePosition]' />
          <map key='[preGameBallTwoPosition]' value='[team_table].[preGameBallTwoPosition]' />
          <map key='[preGamePosition]' value='[team_table].[preGamePosition]' />
          <map key='[pushed]' value='[team_table].[pushed]' />
          <map key='[robotBreakage]' value='[team_table].[robotBreakage]' />
          <map key='[robotSpeed]' value='[team_table].[robotSpeed]' />
          <map key='[role_assister]' value='[team_table].[role_assister]' />
          <map key='[role_catcher]' value='[team_table].[role_catcher]' />
          <map key='[role_defense]' value='[team_table].[role_defense]' />
          <map key='[role_shooter]' value='[team_table].[role_shooter]' />
          <map key='[role_soloCycler]' value='[team_table].[role_soloCycler]' />
          <map key='[role_soloTrussCatcher]' value='[team_table].[role_soloTrussCatcher]' />
          <map key='[seedNum]' value='[alliance_table].[seedNum]' />
          <map key='[shotsBlocked]' value='[team_table].[shotsBlocked]' />
          <map key='[startTime]' value='[cycle_table].[startTime]' />
          <map key='[team_table_ALLIANCE_COLOR]' value='[team_table].[ALLIANCE_COLOR]' />
          <map key='[team_table_MATCH_NUM]' value='[team_table].[MATCH_NUM]' />
          <map key='[team_table_NAME_OF_SCOUT]' value='[team_table].[NAME_OF_SCOUT]' />
          <map key='[team_table_allianceBallEndTime]' value='[team_table].[allianceBallEndTime]' />
          <map key='[throwsToHumanOverTruss]' value='[team_table].[throwsToHumanOverTruss]' />
          <map key='[trussCatchScores]' value='[team_table].[trussCatchScores]' />
          <map key='[trussCatchShots]' value='[team_table].[trussCatchShots]' />
          <map key='[trussThrowScores]' value='[team_table].[trussThrowScores]' />
          <map key='[trussThrowShots]' value='[team_table].[trussThrowShots]' />
        </cols>
      </connection>
      <aliases enabled='yes' />
      <column caption='highGoalAccuracy' datatype='real' name='[Calculation_2210303163902149]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='AVG([Calculation_9170301120020898])/AVG([Calculation_1140301120102569])' scope-isolation='false' />
      </column>
      <column caption='autoPoints' datatype='integer' name='[Calculation_2270303165543352]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_2350303165504912]+[Calculation_6620303164959017]+[Calculation_1840303165406454]+[Calculation_4630303165425425]' scope-isolation='false' />
      </column>
      <column caption='autoColorZonePoints' datatype='integer' name='[Calculation_2350303165504912]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF CONTAINS([autoColorZone],&quot;autoColorZone&quot;) THEN 5&#13;&#10;ELSE 0&#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='linesUpToLow' datatype='integer' name='[Calculation_3520306115231628]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF CONTAINS([lineUpToLow],&quot;lineUpToLow&quot;) THEN 1 ELSE 0 END' scope-isolation='false' />
      </column>
      <column caption='robotCatches' datatype='integer' name='[Calculation_9010303172052832]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF CONTAINS([caughtBallHuman],&quot;caughtBallHuman&quot;) OR &#13;&#10;CONTAINS([caughtBallRobots],&quot;caughtBallRobots&quot;) THEN 1 &#13;&#10;ELSE 0&#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='collector' datatype='integer' name='[Calculation_9410303172220189]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF CONTAINS([collectedBall],&quot;collectedBall&quot;) THEN 1&#13;&#10;ELSE 0&#13;&#10;END' scope-isolation='false' />
      </column>
      <column datatype='integer' name='[MATCH_NUM]' role='dimension' type='ordinal'>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='real' datatype-customized='true' name='[TEAM_NUM]' role='dimension' type='ordinal'>
      </column>
      <column datatype='real' datatype-customized='true' name='[endTime]' role='measure' type='quantitative'>
      </column>
      <column datatype='real' datatype-customized='true' name='[fumbles]' role='measure' type='quantitative'>
      </column>
      <column caption='Scores-Colored' datatype='real' datatype-customized='true' name='[highGoalScores_colored]' role='measure' type='quantitative'>
      </column>
      <column caption='Scores-Goalie' datatype='real' datatype-customized='true' name='[highGoalScores_goalie]' role='measure' type='quantitative'>
      </column>
      <column caption='Scores-White' datatype='real' datatype-customized='true' name='[highGoalScores_white]' role='measure' type='quantitative'>
      </column>
      <column caption='Shots-Colored' datatype='real' datatype-customized='true' name='[highGoalShots_colored]' role='measure' type='quantitative'>
      </column>
      <column caption='Shots-Goalie' datatype='real' datatype-customized='true' name='[highGoalShots_goalie]' role='measure' type='quantitative'>
      </column>
      <column caption='Shots-White' datatype='real' datatype-customized='true' name='[highGoalShots_white]' role='measure' type='quantitative'>
      </column>
      <column datatype='real' datatype-customized='true' name='[lowGoalScores]' role='measure' type='quantitative'>
      </column>
      <column datatype='real' datatype-customized='true' name='[lowGoalShots]' role='measure' type='quantitative'>
      </column>
      <column aggregation='CountD' datatype='real' datatype-customized='true' name='[numAssists]' role='measure' type='quantitative'>
      </column>
      <column datatype='real' datatype-customized='true' name='[passRecvHuman]' role='measure' type='quantitative'>
      </column>
      <column datatype='real' datatype-customized='true' name='[passRecvRobot]' role='measure' type='quantitative'>
      </column>
      <column datatype='real' datatype-customized='true' name='[passStarts]' role='measure' type='quantitative'>
      </column>
      <column datatype='real' datatype-customized='true' name='[robotSpeed]' role='measure' type='quantitative'>
      </column>
      <column datatype='real' datatype-customized='true' name='[shotsBlocked]' role='measure' type='quantitative'>
      </column>
      <column aggregation='CountD' datatype='real' datatype-customized='true' name='[startTime]' role='measure' type='quantitative'>
      </column>
      <column datatype='real' datatype-customized='true' name='[trussCatchScores]' role='measure' type='quantitative'>
      </column>
      <column datatype='real' datatype-customized='true' name='[trussCatchShots]' role='measure' type='quantitative'>
      </column>
      <column datatype='real' datatype-customized='true' name='[trussThrowScores]' role='measure' type='quantitative'>
      </column>
      <column datatype='real' datatype-customized='true' name='[trussThrowShots]' role='measure' type='quantitative'>
      </column>
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='C:\Users\nnrobot\Documents\My Tableau Repository\Datasources\team_alliance_cycle.tde' schema='Extract' tablename='Extract' update-time='3/7/2014 4:05:32 AM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <cols>
            <map key='[ALLIANCE_COLOR]' value='[Extract].[ALLIANCE_COLOR]' />
            <map key='[Calculation_0560306115107302]' value='[Extract].[Calculation_0560306115107302]' />
            <map key='[Calculation_0660306010312790]' value='[Extract].[Calculation_0660306010312790]' />
            <map key='[Calculation_0880301121037679]' value='[Extract].[Calculation_0880301121037679]' />
            <map key='[Calculation_1010305223043753]' value='[Extract].[Calculation_1010305223043753]' />
            <map key='[Calculation_1140301120102569]' value='[Extract].[Calculation_1140301120102569]' />
            <map key='[Calculation_1840303165406454]' value='[Extract].[Calculation_1840303165406454]' />
            <map key='[Calculation_2020306003635320]' value='[Extract].[Calculation_2020306003635320]' />
            <map key='[Calculation_2310305223237409]' value='[Extract].[Calculation_2310305223237409]' />
            <map key='[Calculation_2400303174747658]' value='[Extract].[Calculation_2400303174747658]' />
            <map key='[Calculation_2530303164410072]' value='[Extract].[Calculation_2530303164410072]' />
            <map key='[Calculation_2650306010036590]' value='[Extract].[Calculation_2650306010036590]' />
            <map key='[Calculation_3110305223116631]' value='[Extract].[Calculation_3110305223116631]' />
            <map key='[Calculation_3120303174623405]' value='[Extract].[Calculation_3120303174623405]' />
            <map key='[Calculation_3320301120424237]' value='[Extract].[Calculation_3320301120424237]' />
            <map key='[Calculation_3480303174853084]' value='[Extract].[Calculation_3480303174853084]' />
            <map key='[Calculation_3890301121008021]' value='[Extract].[Calculation_3890301121008021]' />
            <map key='[Calculation_3980306003743834]' value='[Extract].[Calculation_3980306003743834]' />
            <map key='[Calculation_4200301121859883]' value='[Extract].[Calculation_4200301121859883]' />
            <map key='[Calculation_4630303164056150]' value='[Extract].[Calculation_4630303164056150]' />
            <map key='[Calculation_4630303165425425]' value='[Extract].[Calculation_4630303165425425]' />
            <map key='[Calculation_5400306010106313]' value='[Extract].[Calculation_5400306010106313]' />
            <map key='[Calculation_6160305223212906]' value='[Extract].[Calculation_6160305223212906]' />
            <map key='[Calculation_6620303164959017]' value='[Extract].[Calculation_6620303164959017]' />
            <map key='[Calculation_6690306221032891]' value='[Extract].[Calculation_6690306221032891]' />
            <map key='[Calculation_6720301120947213]' value='[Extract].[Calculation_6720301120947213]' />
            <map key='[Calculation_6720306005744157]' value='[Extract].[Calculation_6720306005744157]' />
            <map key='[Calculation_6780303164535382]' value='[Extract].[Calculation_6780303164535382]' />
            <map key='[Calculation_7770306003540857]' value='[Extract].[Calculation_7770306003540857]' />
            <map key='[Calculation_8100305223149782]' value='[Extract].[Calculation_8100305223149782]' />
            <map key='[Calculation_8120303164436437]' value='[Extract].[Calculation_8120303164436437]' />
            <map key='[Calculation_8320305222936780]' value='[Extract].[Calculation_8320305222936780]' />
            <map key='[Calculation_8670303174818409]' value='[Extract].[Calculation_8670303174818409]' />
            <map key='[Calculation_9010306010337187]' value='[Extract].[Calculation_9010306010337187]' />
            <map key='[Calculation_9080303174733079]' value='[Extract].[Calculation_9080303174733079]' />
            <map key='[Calculation_9170301120020898]' value='[Extract].[Calculation_9170301120020898]' />
            <map key='[Calculation_9570306003707531]' value='[Extract].[Calculation_9570306003707531]' />
            <map key='[Calculation_9890303174831752]' value='[Extract].[Calculation_9890303174831752]' />
            <map key='[HASH]' value='[Extract].[HASH]' />
            <map key='[MATCH_NUM]' value='[Extract].[MATCH_NUM]' />
            <map key='[NAME_OF_SCOUT]' value='[Extract].[NAME_OF_SCOUT]' />
            <map key='[Number of Records]' value='[Extract].[Number of Records]' />
            <map key='[TEAM_NUM]' value='[Extract].[TEAM_NUM]' />
            <map key='[allianceAutoPoints]' value='[Extract].[allianceAutoPoints]' />
            <map key='[allianceBallEndTime]' value='[Extract].[allianceBallEndTime]' />
            <map key='[allianceBallEndTime_checkbox]' value='[Extract].[allianceBallEndTime_checkbox]' />
            <map key='[allianceFoulPoints]' value='[Extract].[allianceFoulPoints]' />
            <map key='[allianceTeleopPoints]' value='[Extract].[allianceTeleopPoints]' />
            <map key='[allianceTotalPoints]' value='[Extract].[allianceTotalPoints]' />
            <map key='[autoHotGoalOne]' value='[Extract].[autoHotGoalOne]' />
            <map key='[autoHotGoalThree]' value='[Extract].[autoHotGoalThree]' />
            <map key='[autoHotGoalTwo]' value='[Extract].[autoHotGoalTwo]' />
            <map key='[ballOneAuto]' value='[Extract].[ballOneAuto]' />
            <map key='[ballThreeAuto]' value='[Extract].[ballThreeAuto]' />
            <map key='[ballTwoAuto]' value='[Extract].[ballTwoAuto]' />
            <map key='[breakDescription]' value='[Extract].[breakDescription]' />
            <map key='[comments]' value='[Extract].[comments]' />
            <map key='[defense_inGoalie]' value='[Extract].[defense_inGoalie]' />
            <map key='[defense_stopGettingBall]' value='[Extract].[defense_stopGettingBall]' />
            <map key='[defense_stopRobot]' value='[Extract].[defense_stopRobot]' />
            <map key='[endTime]' value='[Extract].[endTime]' />
            <map key='[foulDescription]' value='[Extract].[foulDescription]' />
            <map key='[fumbleDescription]' value='[Extract].[fumbleDescription]' />
            <map key='[fumbles]' value='[Extract].[fumbles]' />
            <map key='[hash]' value='[Extract].[hash1]' />
            <map key='[highGoalScores_colored]' value='[Extract].[highGoalScores_colored]' />
            <map key='[highGoalScores_goalie]' value='[Extract].[highGoalScores_goalie]' />
            <map key='[highGoalScores_white]' value='[Extract].[highGoalScores_white]' />
            <map key='[highGoalShots_colored]' value='[Extract].[highGoalShots_colored]' />
            <map key='[highGoalShots_goalie]' value='[Extract].[highGoalShots_goalie]' />
            <map key='[highGoalShots_white]' value='[Extract].[highGoalShots_white]' />
            <map key='[lateAutoReason]' value='[Extract].[lateAutoReason]' />
            <map key='[lowGoalScores]' value='[Extract].[lowGoalScores]' />
            <map key='[lowGoalShots]' value='[Extract].[lowGoalShots]' />
            <map key='[maneuvered]' value='[Extract].[maneuvered]' />
            <map key='[matchComments]' value='[Extract].[matchComments]' />
            <map key='[numAssists]' value='[Extract].[numAssists]' />
            <map key='[passRecvHuman]' value='[Extract].[passRecvHuman]' />
            <map key='[passRecvRobot]' value='[Extract].[passRecvRobot]' />
            <map key='[passStarts]' value='[Extract].[passStarts]' />
            <map key='[preBallsOnField]' value='[Extract].[preBallsOnField]' />
            <map key='[preGameBallOnePosition]' value='[Extract].[preGameBallOnePosition]' />
            <map key='[preGameBallThreePosition]' value='[Extract].[preGameBallThreePosition]' />
            <map key='[preGameBallTwoPosition]' value='[Extract].[preGameBallTwoPosition]' />
            <map key='[preGamePosition]' value='[Extract].[preGamePosition]' />
            <map key='[pushed]' value='[Extract].[pushed]' />
            <map key='[robotBreakage]' value='[Extract].[robotBreakage]' />
            <map key='[robotSpeed]' value='[Extract].[robotSpeed]' />
            <map key='[role_assister]' value='[Extract].[role_assister]' />
            <map key='[role_catcher]' value='[Extract].[role_catcher]' />
            <map key='[role_defense]' value='[Extract].[role_defense]' />
            <map key='[role_shooter]' value='[Extract].[role_shooter]' />
            <map key='[role_soloCycler]' value='[Extract].[role_soloCycler]' />
            <map key='[role_soloTrussCatcher]' value='[Extract].[role_soloTrussCatcher]' />
            <map key='[seedNum]' value='[Extract].[seedNum]' />
            <map key='[shotsBlocked]' value='[Extract].[shotsBlocked]' />
            <map key='[startTime]' value='[Extract].[startTime]' />
            <map key='[team_table_ALLIANCE_COLOR]' value='[Extract].[ALLIANCE_COLOR1]' />
            <map key='[team_table_MATCH_NUM]' value='[Extract].[MATCH_NUM1]' />
            <map key='[team_table_NAME_OF_SCOUT]' value='[Extract].[NAME_OF_SCOUT1]' />
            <map key='[team_table_allianceBallEndTime]' value='[Extract].[allianceBallEndTime1]' />
            <map key='[throwsToHumanOverTruss]' value='[Extract].[throwsToHumanOverTruss]' />
            <map key='[trussCatchScores]' value='[Extract].[trussCatchScores]' />
            <map key='[trussCatchShots]' value='[Extract].[trussCatchShots]' />
            <map key='[trussThrowScores]' value='[Extract].[trussThrowScores]' />
            <map key='[trussThrowShots]' value='[Extract].[trussThrowShots]' />
          </cols>
          <calculations>
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='4' timestamp-start='2014-03-07 04:05:31.912000' />
          </refresh>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='team_table (yes)' inline='true' name='mysql.41699.488635277776' version='8.2'>
      <connection class='mysql' dbname='yes' odbc-native-protocol='yes' port='3306' server='172.20.10.11' username='root'>
        <relation name='team_table' table='[team_table]' type='table' />
        <refresh increment-key='' incremental-updates='false'>
        </refresh>
      </connection>
      <aliases enabled='yes' />
      <column caption='humanTrussThrow' datatype='integer' name='[Calculation_0560306115107302]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF CONTAINS([throwsToHumanOverTruss],&quot;throwsToHumanOverTruss&quot;) THEN 1 ELSE 0 END' scope-isolation='false' />
      </column>
      <column caption='numBallsAutoScored' datatype='integer' name='[Calculation_0660306010312790]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_6720306005744157]+[Calculation_2650306010036590]+[Calculation_5400306010106313]' scope-isolation='false' />
      </column>
      <column caption='defenseStopRobot' datatype='integer' name='[Calculation_0880301121037679]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF CONTAINS([defense_stopRobot],&quot;defense_stopRobot&quot;) THEN 1 ELSE 0 END' scope-isolation='false' />
      </column>
      <column caption='defenseProportion' datatype='real' name='[Calculation_1010305223043753]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_2400303174747658]/[Number of Records]' scope-isolation='false' />
      </column>
      <column caption='highGoalShots' datatype='real' name='[Calculation_1140301120102569]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[highGoalShots_colored]+[highGoalShots_goalie]+[highGoalShots_white]' scope-isolation='false' />
      </column>
      <column caption='ballTwoAutoPoints' datatype='integer' name='[Calculation_1840303165406454]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF CONTAINS([ballTwoAuto],&quot;highMake&quot;) AND CONTAINS([autoHotGoalTwo],&quot;autoHotGoalTwo&quot;) THEN 20&#13;&#10;ELSEIF CONTAINS([ballTwoAuto],&quot;highMake&quot;) THEN 15&#13;&#10;ELSEIF CONTAINS([ballTwoAuto],&quot;lowMake&quot;) AND CONTAINS([autoHotGoalTwo],&quot;autoHotGoalTwo&quot;) THEN 11&#13;&#10;ELSEIF CONTAINS([ballTwoAuto],&quot;lowMake&quot;) THEN 6&#13;&#10;ELSE 0 &#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='ShotsColoredProportion' datatype='real' name='[Calculation_2020306003635320]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[highGoalShots_colored]/[Calculation_7770306003540857]' scope-isolation='false' />
      </column>
      <column caption='highGoalAccuracy' datatype='real' name='[Calculation_2210303163902149]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='AVG([Calculation_9170301120020898])/AVG([Calculation_1140301120102569])' scope-isolation='false' />
      </column>
      <column caption='autoPoints' datatype='integer' name='[Calculation_2270303165543352]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_2350303165504912]+[Calculation_6620303164959017]+[Calculation_1840303165406454]+[Calculation_4630303165425425]' scope-isolation='false' />
      </column>
      <column caption='soloTrussCatcherProportion' datatype='real' name='[Calculation_2310305223237409]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_3480303174853084]/[Number of Records]' scope-isolation='false' />
      </column>
      <column caption='autoColorZonePoints' datatype='integer' name='[Calculation_2350303165504912]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF CONTAINS([autoColorZone],&quot;autoColorZone&quot;) THEN 5&#13;&#10;ELSE 0&#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='defense' datatype='integer' name='[Calculation_2400303174747658]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF CONTAINS([role_defense],&quot;defense&quot;) THEN 1 ELSE 0 END' scope-isolation='false' />
      </column>
      <column caption='ballTwoAutoUsed' datatype='integer' name='[Calculation_2530303164410072]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF CONTAINS([ballTwoAuto],&quot;highMake&quot;) OR &#13;&#10;CONTAINS([ballTwoAuto],&quot;highMiss&quot;) OR &#13;&#10;CONTAINS([ballTwoAuto],&quot;lowMake&quot;) OR&#13;&#10;CONTAINS([ballTwoAuto],&quot;lowMiss&quot;)&#13;&#10;THEN 1&#13;&#10;ELSE 0&#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='ballTwoAutoScored' datatype='integer' name='[Calculation_2650306010036590]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF CONTAINS([ballTwoAuto],&quot;highMake&quot;) OR CONTAINS([ballTwoAuto],&quot;lowMake&quot;) THEN 1 ELSE 0 END' scope-isolation='false' />
      </column>
      <column caption='assisterProportion' datatype='real' name='[Calculation_3110305223116631]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_3120303174623405]/[Number of Records]' scope-isolation='false' />
      </column>
      <column caption='assister' datatype='integer' name='[Calculation_3120303174623405]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF CONTAINS([role_assister],&quot;assister&quot;) THEN 1 ELSE 0 END' scope-isolation='false' />
      </column>
      <column caption='ManeuveredTF' datatype='integer' name='[Calculation_3320301120424237]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF CONTAINS([maneuvered],&quot;maneuvered&quot;) THEN 1 ELSE 0 END' scope-isolation='false' />
      </column>
      <column caption='soloTrussCatcher' datatype='integer' name='[Calculation_3480303174853084]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF CONTAINS([role_soloTrussCatcher],&quot;soloTrussCatcher&quot;) THEN 1 ELSE 0 END' scope-isolation='false' />
      </column>
      <column caption='linesUpToLow' datatype='integer' name='[Calculation_3520306115231628]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF CONTAINS([lineUpToLow],&quot;lineUpToLow&quot;) THEN 1 ELSE 0 END' scope-isolation='false' />
      </column>
      <column caption='defenseStopGettingBall' datatype='integer' name='[Calculation_3890301121008021]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF CONTAINS([defense_stopGettingBall],&quot;defense_stopGettingBall&quot;) THEN 1 ELSE 0 END' scope-isolation='false' />
      </column>
      <column caption='ShotsWhiteProportion' datatype='real' name='[Calculation_3980306003743834]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[highGoalShots_white]/[Calculation_7770306003540857]' scope-isolation='false' />
      </column>
      <column caption='pushedTF' datatype='integer' name='[Calculation_4200301121859883]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF CONTAINS(pushed,&quot;pushed&quot;)THEN 1 ELSE 0 END' scope-isolation='false' />
      </column>
      <column caption='ballOneAutoUsed' datatype='integer' name='[Calculation_4630303164056150]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF CONTAINS([ballOneAuto],&quot;highMake&quot;) OR &#13;&#10;CONTAINS([ballOneAuto],&quot;highMiss&quot;) OR &#13;&#10;CONTAINS([ballOneAuto],&quot;lowMake&quot;) OR&#13;&#10;CONTAINS([ballOneAuto],&quot;lowMiss&quot;)&#13;&#10;THEN 1&#13;&#10;ELSE 0&#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='ballThreeAutoPoints' datatype='integer' name='[Calculation_4630303165425425]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF CONTAINS([ballThreeAuto],&quot;highMake&quot;) AND CONTAINS([autoHotGoalThree],&quot;autoHotGoalThree&quot;) THEN 20&#13;&#10;ELSEIF CONTAINS([ballThreeAuto],&quot;highMake&quot;) THEN 15&#13;&#10;ELSEIF CONTAINS([ballThreeAuto],&quot;lowMake&quot;) AND CONTAINS([autoHotGoalThree],&quot;autoHotGoalThree&quot;) THEN 11&#13;&#10;ELSEIF CONTAINS([ballThreeAuto],&quot;lowMake&quot;) THEN 6&#13;&#10;ELSE 0 &#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='ballThreeAutoScored' datatype='integer' name='[Calculation_5400306010106313]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF CONTAINS([ballThreeAuto],&quot;highMake&quot;) OR CONTAINS([ballThreeAuto],&quot;lowMake&quot;) THEN 1 ELSE 0 END' scope-isolation='false' />
      </column>
      <column caption='soloCyclerProportion' datatype='real' name='[Calculation_6160305223212906]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_9890303174831752]/[Number of Records]' scope-isolation='false' />
      </column>
      <column caption='ballOneAutoPoints' datatype='integer' name='[Calculation_6620303164959017]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF CONTAINS([ballOneAuto],&quot;highMake&quot;) AND CONTAINS([autoHotGoalOne],&quot;autoHotGoalOne&quot;) THEN 20&#13;&#10;ELSEIF CONTAINS([ballOneAuto],&quot;highMake&quot;) THEN 15&#13;&#10;ELSEIF CONTAINS([ballOneAuto],&quot;lowMake&quot;) AND CONTAINS([autoHotGoalOne],&quot;autoHotGoalOne&quot;) THEN 11&#13;&#10;ELSEIF CONTAINS([ballOneAuto],&quot;lowMake&quot;) THEN 6&#13;&#10;ELSE 0 &#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='defenseInGoalie' datatype='integer' name='[Calculation_6720301120947213]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF CONTAINS([defense_inGoalie],&quot;defense_inGoalie&quot;) THEN 1 ELSE 0 END' scope-isolation='false' />
      </column>
      <column caption='ballOneAutoScored' datatype='integer' name='[Calculation_6720306005744157]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF CONTAINS([ballOneAuto],&quot;highMake&quot;) OR CONTAINS([ballOneAuto],&quot;lowMake&quot;) THEN 1 ELSE 0 END' scope-isolation='false' />
      </column>
      <column caption='numBallsAutoUsed' datatype='integer' name='[Calculation_6780303164535382]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_4630303164056150]+[Calculation_2530303164410072]+[Calculation_8120303164436437]' scope-isolation='false' />
      </column>
      <column caption='ShotsTotal' datatype='real' name='[Calculation_7770306003540857]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[highGoalShots_colored]+[highGoalShots_goalie]+[highGoalShots_white]' scope-isolation='false' />
      </column>
      <column caption='shooterProportion' datatype='real' name='[Calculation_8100305223149782]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_8670303174818409]/[Number of Records]' scope-isolation='false' />
      </column>
      <column caption='ballThreeAutoUsed' datatype='integer' name='[Calculation_8120303164436437]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF CONTAINS([ballThreeAuto],&quot;highMake&quot;) OR &#13;&#10;CONTAINS([ballThreeAuto],&quot;highMiss&quot;) OR &#13;&#10;CONTAINS([ballThreeAuto],&quot;lowMake&quot;) OR&#13;&#10;CONTAINS([ballThreeAuto],&quot;lowMiss&quot;)&#13;&#10;THEN 1&#13;&#10;ELSE 0&#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='catcherProportion' datatype='real' name='[Calculation_8320305222936780]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_9080303174733079]/[Number of Records]' scope-isolation='false' />
      </column>
      <column caption='shooter' datatype='integer' name='[Calculation_8670303174818409]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF CONTAINS([role_shooter],&quot;shooter&quot;) THEN 1 ELSE 0 END' scope-isolation='false' />
      </column>
      <column caption='robotCatches' datatype='integer' name='[Calculation_9010303172052832]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF CONTAINS([caughtBallHuman],&quot;caughtBallHuman&quot;) OR &#13;&#10;CONTAINS([caughtBallRobots],&quot;caughtBallRobots&quot;) THEN 1 &#13;&#10;ELSE 0&#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='autoAccuracy' datatype='real' name='[Calculation_9010306010337187]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_0660306010312790]/[Calculation_6780303164535382]' scope-isolation='false' />
      </column>
      <column caption='catcher(role)' datatype='integer' name='[Calculation_9080303174733079]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF CONTAINS([role_catcher],&quot;catcher&quot;) THEN 1 ELSE 0 END' scope-isolation='false' />
      </column>
      <column caption='highGoalScores' datatype='real' name='[Calculation_9170301120020898]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[highGoalScores_colored]+[highGoalScores_goalie]+[highGoalScores_white]' scope-isolation='false' />
      </column>
      <column caption='collector' datatype='integer' name='[Calculation_9410303172220189]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF CONTAINS([collectedBall],&quot;collectedBall&quot;) THEN 1&#13;&#10;ELSE 0&#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='ShotsGoalieProportion' datatype='real' name='[Calculation_9570306003707531]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[highGoalShots_goalie]/[Calculation_7770306003540857]' scope-isolation='false' />
      </column>
      <column caption='soloCycler' datatype='integer' name='[Calculation_9890303174831752]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF CONTAINS([role_soloCycler],&quot;soloCycler&quot;) THEN 1 ELSE 0 END' scope-isolation='false' />
      </column>
      <column caption='Match Number' datatype='string' name='[MATCH_NUM]' role='dimension' type='nominal'>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Team' datatype='string' name='[TEAM_NUM]' role='dimension' type='nominal'>
      </column>
      <column aggregation='CountD' datatype='real' datatype-customized='true' name='[fumbles]' role='measure' type='quantitative'>
      </column>
      <column caption='Scores-Colored' datatype='real' datatype-customized='true' name='[highGoalScores_colored]' role='measure' type='quantitative'>
      </column>
      <column caption='Scores-Goalie' datatype='real' datatype-customized='true' name='[highGoalScores_goalie]' role='measure' type='quantitative'>
      </column>
      <column caption='Scores-White' datatype='real' datatype-customized='true' name='[highGoalScores_white]' role='measure' type='quantitative'>
      </column>
      <column caption='Shots-Colored' datatype='real' datatype-customized='true' name='[highGoalShots_colored]' role='measure' type='quantitative'>
      </column>
      <column caption='Shots-Goalie' datatype='real' datatype-customized='true' name='[highGoalShots_goalie]' role='measure' type='quantitative'>
      </column>
      <column caption='Shots-White' datatype='real' datatype-customized='true' name='[highGoalShots_white]' role='measure' type='quantitative'>
      </column>
      <column datatype='real' datatype-customized='true' name='[lowGoalScores]' role='measure' type='quantitative'>
      </column>
      <column datatype='real' datatype-customized='true' name='[lowGoalShots]' role='measure' type='quantitative'>
      </column>
      <column datatype='real' datatype-customized='true' name='[passRecvHuman]' role='measure' type='quantitative'>
      </column>
      <column datatype='real' datatype-customized='true' name='[passRecvRobot]' role='measure' type='quantitative'>
      </column>
      <column datatype='real' datatype-customized='true' name='[passStarts]' role='measure' type='quantitative'>
      </column>
      <column aggregation='CountD' datatype='real' datatype-customized='true' name='[passesBlocked]' role='measure' type='quantitative'>
      </column>
      <column datatype='real' datatype-customized='true' name='[robotSpeed]' role='measure' type='quantitative'>
      </column>
      <column datatype='real' datatype-customized='true' name='[shotsBlocked]' role='measure' type='quantitative'>
      </column>
      <column datatype='real' datatype-customized='true' name='[trussCatchScores]' role='measure' type='quantitative'>
      </column>
      <column datatype='real' datatype-customized='true' name='[trussCatchShots]' role='measure' type='quantitative'>
      </column>
      <column datatype='real' datatype-customized='true' name='[trussThrowScores]' role='measure' type='quantitative'>
      </column>
      <column datatype='real' datatype-customized='true' name='[trussThrowShots]' role='measure' type='quantitative'>
      </column>
      <column-instance column='[TEAM_NUM]' derivation='None' name='[none:TEAM_NUM:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_1140301120102569]' derivation='Sum' name='[sum:Calculation_1140301120102569:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_9170301120020898]' derivation='Sum' name='[sum:Calculation_9170301120020898:qk]' pivot='key' type='quantitative' />
      <column-instance column='[highGoalScores_colored]' derivation='Sum' name='[sum:highGoalScores_colored:qk]' pivot='key' type='quantitative' />
      <column-instance column='[highGoalScores_goalie]' derivation='Sum' name='[sum:highGoalScores_goalie:qk]' pivot='key' type='quantitative' />
      <column-instance column='[highGoalScores_white]' derivation='Sum' name='[sum:highGoalScores_white:qk]' pivot='key' type='quantitative' />
      <column-instance column='[highGoalShots_colored]' derivation='Sum' name='[sum:highGoalShots_colored:qk]' pivot='key' type='quantitative' />
      <column-instance column='[highGoalShots_goalie]' derivation='Sum' name='[sum:highGoalShots_goalie:qk]' pivot='key' type='quantitative' />
      <column-instance column='[highGoalShots_white]' derivation='Sum' name='[sum:highGoalShots_white:qk]' pivot='key' type='quantitative' />
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='C:\Users\nnrobot\Documents\My Tableau Repository\Datasources\team_table (yes).tde' schema='Extract' tablename='Extract' update-time='3/6/2014 9:08:59 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Calculation_0560306115107302]' formula='IF CONTAINS([throwsToHumanOverTruss],&quot;throwsToHumanOverTruss&quot;) THEN 1 ELSE 0 END' />
            <calculation column='[Calculation_0660306010312790]' formula='[Calculation_6720306005744157]+[Calculation_2650306010036590]+[Calculation_5400306010106313]' />
            <calculation column='[Calculation_0880301121037679]' formula='IF CONTAINS([defense_stopRobot],&quot;defense_stopRobot&quot;) THEN 1 ELSE 0 END' />
            <calculation column='[Calculation_1010305223043753]' formula='[Calculation_2400303174747658]/[Number of Records]' />
            <calculation column='[Calculation_1140301120102569]' formula='[highGoalShots_colored]+[highGoalShots_goalie]+[highGoalShots_white]' />
            <calculation column='[Calculation_1840303165406454]' formula='IF CONTAINS([ballTwoAuto],&quot;highMake&quot;) AND CONTAINS([autoHotGoalTwo],&quot;autoHotGoalTwo&quot;) THEN 20&#13;&#10;ELSEIF CONTAINS([ballTwoAuto],&quot;highMake&quot;) THEN 15&#13;&#10;ELSEIF CONTAINS([ballTwoAuto],&quot;lowMake&quot;) AND CONTAINS([autoHotGoalTwo],&quot;autoHotGoalTwo&quot;) THEN 11&#13;&#10;ELSEIF CONTAINS([ballTwoAuto],&quot;lowMake&quot;) THEN 6&#13;&#10;ELSE 0 &#13;&#10;END' />
            <calculation column='[Calculation_2020306003635320]' formula='[highGoalShots_colored]/[Calculation_7770306003540857]' />
            <calculation column='[Calculation_2310305223237409]' formula='[Calculation_3480303174853084]/[Number of Records]' />
            <calculation column='[Calculation_2400303174747658]' formula='IF CONTAINS([role_defense],&quot;defense&quot;) THEN 1 ELSE 0 END' />
            <calculation column='[Calculation_2530303164410072]' formula='IF CONTAINS([ballTwoAuto],&quot;highMake&quot;) OR &#13;&#10;CONTAINS([ballTwoAuto],&quot;highMiss&quot;) OR &#13;&#10;CONTAINS([ballTwoAuto],&quot;lowMake&quot;) OR&#13;&#10;CONTAINS([ballTwoAuto],&quot;lowMiss&quot;)&#13;&#10;THEN 1&#13;&#10;ELSE 0&#13;&#10;END' />
            <calculation column='[Calculation_2650306010036590]' formula='IF CONTAINS([ballTwoAuto],&quot;highMake&quot;) OR CONTAINS([ballTwoAuto],&quot;lowMake&quot;) THEN 1 ELSE 0 END' />
            <calculation column='[Calculation_3110305223116631]' formula='[Calculation_3120303174623405]/[Number of Records]' />
            <calculation column='[Calculation_3120303174623405]' formula='IF CONTAINS([role_assister],&quot;assister&quot;) THEN 1 ELSE 0 END' />
            <calculation column='[Calculation_3320301120424237]' formula='IF CONTAINS([maneuvered],&quot;maneuvered&quot;) THEN 1 ELSE 0 END' />
            <calculation column='[Calculation_3480303174853084]' formula='IF CONTAINS([role_soloTrussCatcher],&quot;soloTrussCatcher&quot;) THEN 1 ELSE 0 END' />
            <calculation column='[Calculation_3890301121008021]' formula='IF CONTAINS([defense_stopGettingBall],&quot;defense_stopGettingBall&quot;) THEN 1 ELSE 0 END' />
            <calculation column='[Calculation_3980306003743834]' formula='[highGoalShots_white]/[Calculation_7770306003540857]' />
            <calculation column='[Calculation_4200301121859883]' formula='IF CONTAINS(pushed,&quot;pushed&quot;)THEN 1 ELSE 0 END' />
            <calculation column='[Calculation_4630303164056150]' formula='IF CONTAINS([ballOneAuto],&quot;highMake&quot;) OR &#13;&#10;CONTAINS([ballOneAuto],&quot;highMiss&quot;) OR &#13;&#10;CONTAINS([ballOneAuto],&quot;lowMake&quot;) OR&#13;&#10;CONTAINS([ballOneAuto],&quot;lowMiss&quot;)&#13;&#10;THEN 1&#13;&#10;ELSE 0&#13;&#10;END' />
            <calculation column='[Calculation_4630303165425425]' formula='IF CONTAINS([ballThreeAuto],&quot;highMake&quot;) AND CONTAINS([autoHotGoalThree],&quot;autoHotGoalThree&quot;) THEN 20&#13;&#10;ELSEIF CONTAINS([ballThreeAuto],&quot;highMake&quot;) THEN 15&#13;&#10;ELSEIF CONTAINS([ballThreeAuto],&quot;lowMake&quot;) AND CONTAINS([autoHotGoalThree],&quot;autoHotGoalThree&quot;) THEN 11&#13;&#10;ELSEIF CONTAINS([ballThreeAuto],&quot;lowMake&quot;) THEN 6&#13;&#10;ELSE 0 &#13;&#10;END' />
            <calculation column='[Calculation_5400306010106313]' formula='IF CONTAINS([ballThreeAuto],&quot;highMake&quot;) OR CONTAINS([ballThreeAuto],&quot;lowMake&quot;) THEN 1 ELSE 0 END' />
            <calculation column='[Calculation_6160305223212906]' formula='[Calculation_9890303174831752]/[Number of Records]' />
            <calculation column='[Calculation_6620303164959017]' formula='IF CONTAINS([ballOneAuto],&quot;highMake&quot;) AND CONTAINS([autoHotGoalOne],&quot;autoHotGoalOne&quot;) THEN 20&#13;&#10;ELSEIF CONTAINS([ballOneAuto],&quot;highMake&quot;) THEN 15&#13;&#10;ELSEIF CONTAINS([ballOneAuto],&quot;lowMake&quot;) AND CONTAINS([autoHotGoalOne],&quot;autoHotGoalOne&quot;) THEN 11&#13;&#10;ELSEIF CONTAINS([ballOneAuto],&quot;lowMake&quot;) THEN 6&#13;&#10;ELSE 0 &#13;&#10;END' />
            <calculation column='[Calculation_6720301120947213]' formula='IF CONTAINS([defense_inGoalie],&quot;defense_inGoalie&quot;) THEN 1 ELSE 0 END' />
            <calculation column='[Calculation_6720306005744157]' formula='IF CONTAINS([ballOneAuto],&quot;highMake&quot;) OR CONTAINS([ballOneAuto],&quot;lowMake&quot;) THEN 1 ELSE 0 END' />
            <calculation column='[Calculation_6780303164535382]' formula='[Calculation_4630303164056150]+[Calculation_2530303164410072]+[Calculation_8120303164436437]' />
            <calculation column='[Calculation_7770306003540857]' formula='[highGoalShots_colored]+[highGoalShots_goalie]+[highGoalShots_white]' />
            <calculation column='[Calculation_8100305223149782]' formula='[Calculation_8670303174818409]/[Number of Records]' />
            <calculation column='[Calculation_8120303164436437]' formula='IF CONTAINS([ballThreeAuto],&quot;highMake&quot;) OR &#13;&#10;CONTAINS([ballThreeAuto],&quot;highMiss&quot;) OR &#13;&#10;CONTAINS([ballThreeAuto],&quot;lowMake&quot;) OR&#13;&#10;CONTAINS([ballThreeAuto],&quot;lowMiss&quot;)&#13;&#10;THEN 1&#13;&#10;ELSE 0&#13;&#10;END' />
            <calculation column='[Calculation_8320305222936780]' formula='[Calculation_9080303174733079]/[Number of Records]' />
            <calculation column='[Calculation_8670303174818409]' formula='IF CONTAINS([role_shooter],&quot;shooter&quot;) THEN 1 ELSE 0 END' />
            <calculation column='[Calculation_9010306010337187]' formula='[Calculation_0660306010312790]/[Calculation_6780303164535382]' />
            <calculation column='[Calculation_9080303174733079]' formula='IF CONTAINS([role_catcher],&quot;catcher&quot;) THEN 1 ELSE 0 END' />
            <calculation column='[Calculation_9170301120020898]' formula='[highGoalScores_colored]+[highGoalScores_goalie]+[highGoalScores_white]' />
            <calculation column='[Calculation_9570306003707531]' formula='[highGoalShots_goalie]/[Calculation_7770306003540857]' />
            <calculation column='[Calculation_9890303174831752]' formula='IF CONTAINS([role_soloCycler],&quot;soloCycler&quot;) THEN 1 ELSE 0 END' />
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh increment-key='' incremental-updates='false'>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='13' timestamp-start='2014-03-06 21:08:59.453000' />
          </refresh>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.477848' measure-ordering='alphabetic' measure-percentage='0.522152' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:TEAM_NUM:nk]' type='palette'>
            <map to='#1e1e1e'>
              <bucket>&quot;5041&quot;</bucket>
            </map>
            <map to='#222222'>
              <bucket>&quot;4330&quot;</bucket>
            </map>
            <map to='#272727'>
              <bucket>&quot;4329&quot;</bucket>
            </map>
            <map to='#2c2c2c'>
              <bucket>&quot;4296&quot;</bucket>
            </map>
            <map to='#313131'>
              <bucket>&quot;4212&quot;</bucket>
            </map>
            <map to='#363636'>
              <bucket>&quot;4196&quot;</bucket>
            </map>
            <map to='#3c3c3c'>
              <bucket>&quot;4143&quot;</bucket>
            </map>
            <map to='#414141'>
              <bucket>&quot;3138&quot;</bucket>
            </map>
            <map to='#474747'>
              <bucket>&quot;2481&quot;</bucket>
            </map>
            <map to='#4d4d4d'>
              <bucket>&quot;2451&quot;</bucket>
            </map>
            <map to='#535353'>
              <bucket>&quot;2194&quot;</bucket>
            </map>
            <map to='#595959'>
              <bucket>&quot;2164&quot;</bucket>
            </map>
            <map to='#5f5f5f'>
              <bucket>&quot;2081&quot;</bucket>
            </map>
            <map to='#666666'>
              <bucket>&quot;2040&quot;</bucket>
            </map>
            <map to='#6c6c6c'>
              <bucket>&quot;2022&quot;</bucket>
            </map>
            <map to='#727272'>
              <bucket>&quot;1986&quot;</bucket>
            </map>
            <map to='#797979'>
              <bucket>&quot;1764&quot;</bucket>
            </map>
            <map to='#808080'>
              <bucket>&quot;1756&quot;</bucket>
            </map>
            <map to='#878787'>
              <bucket>&quot;1747&quot;</bucket>
            </map>
            <map to='#8e8e8e'>
              <bucket>&quot;1736&quot;</bucket>
            </map>
            <map to='#959595'>
              <bucket>&quot;1288&quot;</bucket>
            </map>
            <map to='#9d9d9d'>
              <bucket>&quot;1094&quot;</bucket>
            </map>
            <map to='#a4a4a4'>
              <bucket>&quot;967&quot;</bucket>
            </map>
            <map to='#ababab'>
              <bucket>&quot;648&quot;</bucket>
            </map>
            <map to='#b3b3b3'>
              <bucket>&quot;292&quot;</bucket>
            </map>
            <map to='#bbbbbb'>
              <bucket>&quot;171&quot;</bucket>
            </map>
            <map to='#c3c3c3'>
              <bucket>&quot;167&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#1e1e1e'>
              <bucket>&quot;[mysql.41699.488635277776].[sum:Calculation_1140301120102569:qk]&quot;</bucket>
            </map>
            <map to='#414451'>
              <bucket>&quot;[mysql.41699.488635277776].[sum:highGoalScores_goalie:qk]&quot;</bucket>
            </map>
            <map to='#60636a'>
              <bucket>&quot;[mysql.41699.488635277776].[sum:highGoalScores_colored:qk]&quot;</bucket>
            </map>
            <map to='#60636a'>
              <bucket>&quot;[mysql.41699.488635277776].[sum:highGoalShots_white:qk]&quot;</bucket>
            </map>
            <map to='#8f8782'>
              <bucket>&quot;[mysql.41699.488635277776].[sum:highGoalShots_goalie:qk]&quot;</bucket>
            </map>
            <map to='#a5acaf'>
              <bucket>&quot;[mysql.41699.488635277776].[sum:highGoalShots_colored:qk]&quot;</bucket>
            </map>
            <map to='#c3c3c3'>
              <bucket>&quot;[mysql.41699.488635277776].[sum:Calculation_9170301120020898:qk]&quot;</bucket>
            </map>
            <map to='#cfcfcf'>
              <bucket>&quot;[mysql.41699.488635277776].[sum:highGoalScores_white:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Accuracy'>
      <table>
        <view>
          <datasources>
            <datasource caption='team_table (yes)' name='mysql.41699.488635277776' />
          </datasources>
          <datasource-dependencies datasource='mysql.41699.488635277776'>
            <column caption='highGoalShots' datatype='real' name='[Calculation_1140301120102569]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[highGoalShots_colored]+[highGoalShots_goalie]+[highGoalShots_white]' scope-isolation='false' />
            </column>
            <column caption='highGoalScores' datatype='real' name='[Calculation_9170301120020898]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[highGoalScores_colored]+[highGoalScores_goalie]+[highGoalScores_white]' scope-isolation='false' />
            </column>
            <column caption='Match Number' datatype='string' name='[MATCH_NUM]' role='dimension' type='nominal'>
            </column>
            <column caption='Team' datatype='string' name='[TEAM_NUM]' role='dimension' type='nominal'>
            </column>
            <column caption='Scores-Colored' datatype='real' datatype-customized='true' name='[highGoalScores_colored]' role='measure' type='quantitative'>
            </column>
            <column caption='Scores-Goalie' datatype='real' datatype-customized='true' name='[highGoalScores_goalie]' role='measure' type='quantitative'>
            </column>
            <column caption='Scores-White' datatype='real' datatype-customized='true' name='[highGoalScores_white]' role='measure' type='quantitative'>
            </column>
            <column caption='Shots-Colored' datatype='real' datatype-customized='true' name='[highGoalShots_colored]' role='measure' type='quantitative'>
            </column>
            <column caption='Shots-Goalie' datatype='real' datatype-customized='true' name='[highGoalShots_goalie]' role='measure' type='quantitative'>
            </column>
            <column caption='Shots-White' datatype='real' datatype-customized='true' name='[highGoalShots_white]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[MATCH_NUM]' derivation='None' name='[none:MATCH_NUM:nk]' pivot='key' type='nominal' />
            <column-instance column='[TEAM_NUM]' derivation='None' name='[none:TEAM_NUM:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1140301120102569]' derivation='Sum' name='[sum:Calculation_1140301120102569:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_9170301120020898]' derivation='Sum' name='[sum:Calculation_9170301120020898:qk]' pivot='key' type='quantitative' />
            <column-instance column='[highGoalScores_colored]' derivation='Sum' name='[sum:highGoalScores_colored:qk]' pivot='key' type='quantitative' />
            <column-instance column='[highGoalScores_goalie]' derivation='Sum' name='[sum:highGoalScores_goalie:qk]' pivot='key' type='quantitative' />
            <column-instance column='[highGoalScores_white]' derivation='Sum' name='[sum:highGoalScores_white:qk]' pivot='key' type='quantitative' />
            <column-instance column='[highGoalShots_colored]' derivation='Sum' name='[sum:highGoalShots_colored:qk]' pivot='key' type='quantitative' />
            <column-instance column='[highGoalShots_goalie]' derivation='Sum' name='[sum:highGoalShots_goalie:qk]' pivot='key' type='quantitative' />
            <column-instance column='[highGoalShots_white]' derivation='Sum' name='[sum:highGoalShots_white:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[mysql.41699.488635277776].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[mysql.41699.488635277776].[sum:Calculation_9170301120020898:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[mysql.41699.488635277776].[sum:Calculation_1140301120102569:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[mysql.41699.488635277776].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[mysql.41699.488635277776].[sum:highGoalScores_colored:qk]&quot;</bucket>
              <bucket>&quot;[mysql.41699.488635277776].[sum:highGoalShots_colored:qk]&quot;</bucket>
              <bucket>&quot;[mysql.41699.488635277776].[sum:highGoalScores_goalie:qk]&quot;</bucket>
              <bucket>&quot;[mysql.41699.488635277776].[sum:highGoalShots_goalie:qk]&quot;</bucket>
              <bucket>&quot;[mysql.41699.488635277776].[sum:highGoalScores_white:qk]&quot;</bucket>
              <bucket>&quot;[mysql.41699.488635277776].[sum:highGoalShots_white:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[mysql.41699.488635277776].[none:TEAM_NUM:nk]' filter-group='3'>
            <groupfilter from='&quot;1&quot;' function='range' level='[none:TEAM_NUM:nk]' to='&quot;6&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[mysql.41699.488635277776].[:Measure Names]</column>
            <column>[mysql.41699.488635277776].[none:TEAM_NUM:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[mysql.41699.488635277776].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[mysql.41699.488635277776].[Multiple Values]</rows>
        <cols>([mysql.41699.488635277776].[none:MATCH_NUM:nk] / ([mysql.41699.488635277776].[none:TEAM_NUM:nk] / [mysql.41699.488635277776].[:Measure Names]))</cols>
      </table>
    </worksheet>
    <worksheet name='Alliance'>
      <table>
        <view>
          <datasources>
            <datasource caption='team_alliance_cycle' name='mysql.41704.895000625002' />
          </datasources>
          <datasource-dependencies datasource='mysql.41704.895000625002'>
            <column datatype='real' name='[Calculation_6690306221032891]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' datatype-customized='true' name='[TEAM_NUM]' role='dimension' type='ordinal'>
            </column>
            <column datatype='integer' name='[allianceAutoPoints]' role='measure' type='quantitative'>
            </column>
            <column datatype='integer' name='[allianceFoulPoints]' role='measure' type='quantitative'>
            </column>
            <column datatype='integer' name='[allianceTeleopPoints]' role='measure' type='quantitative'>
            </column>
            <column datatype='integer' name='[allianceTotalPoints]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[Calculation_6690306221032891]' derivation='Avg' name='[avg:Calculation_6690306221032891:qk]' pivot='key' type='quantitative' />
            <column-instance column='[allianceAutoPoints]' derivation='Avg' name='[avg:allianceAutoPoints:qk]' pivot='key' type='quantitative' />
            <column-instance column='[allianceFoulPoints]' derivation='Avg' name='[avg:allianceFoulPoints:qk]' pivot='key' type='quantitative' />
            <column-instance column='[allianceTeleopPoints]' derivation='Avg' name='[avg:allianceTeleopPoints:qk]' pivot='key' type='quantitative' />
            <column-instance column='[allianceTotalPoints]' derivation='Avg' name='[avg:allianceTotalPoints:qk]' pivot='key' type='quantitative' />
            <column-instance column='[numAssists]' derivation='Avg' name='[avg:numAssists:qk]' pivot='key' type='quantitative' />
            <column-instance column='[TEAM_NUM]' derivation='None' name='[none:TEAM_NUM:ok]' pivot='key' type='ordinal' />
            <column aggregation='CountD' datatype='real' datatype-customized='true' name='[numAssists]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[allianceAutoPoints]' derivation='Sum' name='[sum:allianceAutoPoints:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[mysql.41704.895000625002].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[mysql.41704.895000625002].[avg:numAssists:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[mysql.41704.895000625002].[avg:Calculation_6690306221032891:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[mysql.41704.895000625002].[avg:allianceAutoPoints:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[mysql.41704.895000625002].[avg:allianceFoulPoints:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[mysql.41704.895000625002].[avg:allianceTeleopPoints:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[mysql.41704.895000625002].[avg:allianceTotalPoints:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[mysql.41704.895000625002].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[mysql.41704.895000625002].[avg:numAssists:qk]&quot;</bucket>
              <bucket>&quot;[mysql.41704.895000625002].[avg:Calculation_6690306221032891:qk]&quot;</bucket>
              <bucket>&quot;[mysql.41704.895000625002].[sum:allianceAutoPoints:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[mysql.41704.895000625002].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[mysql.41704.895000625002].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([mysql.41704.895000625002].[none:TEAM_NUM:ok] / [mysql.41704.895000625002].[:Measure Names])</rows>
        <cols></cols>
      </table>
    </worksheet>
    <worksheet name='Auto Accuracy'>
      <table>
        <view>
          <datasources>
            <datasource caption='team_table (yes)' name='mysql.41699.488635277776' />
          </datasources>
          <datasource-dependencies datasource='mysql.41699.488635277776'>
            <column caption='autoAccuracy' datatype='real' name='[Calculation_9010306010337187]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_0660306010312790]/[Calculation_6780303164535382]' scope-isolation='false' />
            </column>
            <column caption='Match Number' datatype='string' name='[MATCH_NUM]' role='dimension' type='nominal'>
            </column>
            <column caption='Team' datatype='string' name='[TEAM_NUM]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[MATCH_NUM]' derivation='None' name='[none:MATCH_NUM:nk]' pivot='key' type='nominal' />
            <column-instance column='[TEAM_NUM]' derivation='None' name='[none:TEAM_NUM:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_9010306010337187]' derivation='Sum' name='[sum:Calculation_9010306010337187:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[mysql.41699.488635277776].[none:TEAM_NUM:nk]'>
            <groupfilter from='&quot;1&quot;' function='range' level='[none:TEAM_NUM:nk]' to='&quot;6&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[mysql.41699.488635277776].[none:TEAM_NUM:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='subtitle' class='0' field='[mysql.41699.488635277776].[sum:Calculation_9010306010337187:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[mysql.41699.488635277776].[sum:Calculation_9010306010337187:qk]' scope='rows' value='true' />
            <encoding attr='space' class='0' field='[mysql.41699.488635277776].[sum:Calculation_9010306010337187:qk]' field-type='quantitative' max='1.0' min='0.0' range-type='fixed' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[mysql.41699.488635277776].[sum:Calculation_9010306010337187:qk]</rows>
        <cols>([mysql.41699.488635277776].[none:TEAM_NUM:nk] / [mysql.41699.488635277776].[none:MATCH_NUM:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='Avgs'>
      <table>
        <view>
          <datasources>
            <datasource caption='team_table (yes)' name='mysql.41699.488635277776' />
          </datasources>
          <datasource-dependencies datasource='mysql.41699.488635277776'>
            <column caption='humanTrussThrow' datatype='integer' name='[Calculation_0560306115107302]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF CONTAINS([throwsToHumanOverTruss],&quot;throwsToHumanOverTruss&quot;) THEN 1 ELSE 0 END' scope-isolation='false' />
            </column>
            <column caption='numBallsAutoScored' datatype='integer' name='[Calculation_0660306010312790]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_6720306005744157]+[Calculation_2650306010036590]+[Calculation_5400306010106313]' scope-isolation='false' />
            </column>
            <column caption='defenseStopRobot' datatype='integer' name='[Calculation_0880301121037679]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF CONTAINS([defense_stopRobot],&quot;defense_stopRobot&quot;) THEN 1 ELSE 0 END' scope-isolation='false' />
            </column>
            <column caption='defenseProportion' datatype='real' name='[Calculation_1010305223043753]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_2400303174747658]/[Number of Records]' scope-isolation='false' />
            </column>
            <column caption='highGoalShots' datatype='real' name='[Calculation_1140301120102569]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[highGoalShots_colored]+[highGoalShots_goalie]+[highGoalShots_white]' scope-isolation='false' />
            </column>
            <column caption='ballTwoAutoPoints' datatype='integer' name='[Calculation_1840303165406454]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF CONTAINS([ballTwoAuto],&quot;highMake&quot;) AND CONTAINS([autoHotGoalTwo],&quot;autoHotGoalTwo&quot;) THEN 20&#13;&#10;ELSEIF CONTAINS([ballTwoAuto],&quot;highMake&quot;) THEN 15&#13;&#10;ELSEIF CONTAINS([ballTwoAuto],&quot;lowMake&quot;) AND CONTAINS([autoHotGoalTwo],&quot;autoHotGoalTwo&quot;) THEN 11&#13;&#10;ELSEIF CONTAINS([ballTwoAuto],&quot;lowMake&quot;) THEN 6&#13;&#10;ELSE 0 &#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='ShotsColoredProportion' datatype='real' name='[Calculation_2020306003635320]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[highGoalShots_colored]/[Calculation_7770306003540857]' scope-isolation='false' />
            </column>
            <column caption='highGoalAccuracy' datatype='real' name='[Calculation_2210303163902149]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([Calculation_9170301120020898])/AVG([Calculation_1140301120102569])' scope-isolation='false' />
            </column>
            <column caption='autoPoints' datatype='integer' name='[Calculation_2270303165543352]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_2350303165504912]+[Calculation_6620303164959017]+[Calculation_1840303165406454]+[Calculation_4630303165425425]' scope-isolation='false' />
            </column>
            <column caption='soloTrussCatcherProportion' datatype='real' name='[Calculation_2310305223237409]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_3480303174853084]/[Number of Records]' scope-isolation='false' />
            </column>
            <column caption='defense' datatype='integer' name='[Calculation_2400303174747658]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF CONTAINS([role_defense],&quot;defense&quot;) THEN 1 ELSE 0 END' scope-isolation='false' />
            </column>
            <column caption='ballTwoAutoUsed' datatype='integer' name='[Calculation_2530303164410072]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF CONTAINS([ballTwoAuto],&quot;highMake&quot;) OR &#13;&#10;CONTAINS([ballTwoAuto],&quot;highMiss&quot;) OR &#13;&#10;CONTAINS([ballTwoAuto],&quot;lowMake&quot;) OR&#13;&#10;CONTAINS([ballTwoAuto],&quot;lowMiss&quot;)&#13;&#10;THEN 1&#13;&#10;ELSE 0&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='ballTwoAutoScored' datatype='integer' name='[Calculation_2650306010036590]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF CONTAINS([ballTwoAuto],&quot;highMake&quot;) OR CONTAINS([ballTwoAuto],&quot;lowMake&quot;) THEN 1 ELSE 0 END' scope-isolation='false' />
            </column>
            <column caption='assisterProportion' datatype='real' name='[Calculation_3110305223116631]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_3120303174623405]/[Number of Records]' scope-isolation='false' />
            </column>
            <column caption='assister' datatype='integer' name='[Calculation_3120303174623405]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF CONTAINS([role_assister],&quot;assister&quot;) THEN 1 ELSE 0 END' scope-isolation='false' />
            </column>
            <column caption='ManeuveredTF' datatype='integer' name='[Calculation_3320301120424237]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF CONTAINS([maneuvered],&quot;maneuvered&quot;) THEN 1 ELSE 0 END' scope-isolation='false' />
            </column>
            <column caption='soloTrussCatcher' datatype='integer' name='[Calculation_3480303174853084]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF CONTAINS([role_soloTrussCatcher],&quot;soloTrussCatcher&quot;) THEN 1 ELSE 0 END' scope-isolation='false' />
            </column>
            <column caption='defenseStopGettingBall' datatype='integer' name='[Calculation_3890301121008021]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF CONTAINS([defense_stopGettingBall],&quot;defense_stopGettingBall&quot;) THEN 1 ELSE 0 END' scope-isolation='false' />
            </column>
            <column caption='ShotsWhiteProportion' datatype='real' name='[Calculation_3980306003743834]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[highGoalShots_white]/[Calculation_7770306003540857]' scope-isolation='false' />
            </column>
            <column caption='pushedTF' datatype='integer' name='[Calculation_4200301121859883]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF CONTAINS(pushed,&quot;pushed&quot;)THEN 1 ELSE 0 END' scope-isolation='false' />
            </column>
            <column caption='ballOneAutoUsed' datatype='integer' name='[Calculation_4630303164056150]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF CONTAINS([ballOneAuto],&quot;highMake&quot;) OR &#13;&#10;CONTAINS([ballOneAuto],&quot;highMiss&quot;) OR &#13;&#10;CONTAINS([ballOneAuto],&quot;lowMake&quot;) OR&#13;&#10;CONTAINS([ballOneAuto],&quot;lowMiss&quot;)&#13;&#10;THEN 1&#13;&#10;ELSE 0&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='ballThreeAutoPoints' datatype='integer' name='[Calculation_4630303165425425]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF CONTAINS([ballThreeAuto],&quot;highMake&quot;) AND CONTAINS([autoHotGoalThree],&quot;autoHotGoalThree&quot;) THEN 20&#13;&#10;ELSEIF CONTAINS([ballThreeAuto],&quot;highMake&quot;) THEN 15&#13;&#10;ELSEIF CONTAINS([ballThreeAuto],&quot;lowMake&quot;) AND CONTAINS([autoHotGoalThree],&quot;autoHotGoalThree&quot;) THEN 11&#13;&#10;ELSEIF CONTAINS([ballThreeAuto],&quot;lowMake&quot;) THEN 6&#13;&#10;ELSE 0 &#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='ballThreeAutoScored' datatype='integer' name='[Calculation_5400306010106313]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF CONTAINS([ballThreeAuto],&quot;highMake&quot;) OR CONTAINS([ballThreeAuto],&quot;lowMake&quot;) THEN 1 ELSE 0 END' scope-isolation='false' />
            </column>
            <column caption='soloCyclerProportion' datatype='real' name='[Calculation_6160305223212906]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_9890303174831752]/[Number of Records]' scope-isolation='false' />
            </column>
            <column caption='ballOneAutoPoints' datatype='integer' name='[Calculation_6620303164959017]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF CONTAINS([ballOneAuto],&quot;highMake&quot;) AND CONTAINS([autoHotGoalOne],&quot;autoHotGoalOne&quot;) THEN 20&#13;&#10;ELSEIF CONTAINS([ballOneAuto],&quot;highMake&quot;) THEN 15&#13;&#10;ELSEIF CONTAINS([ballOneAuto],&quot;lowMake&quot;) AND CONTAINS([autoHotGoalOne],&quot;autoHotGoalOne&quot;) THEN 11&#13;&#10;ELSEIF CONTAINS([ballOneAuto],&quot;lowMake&quot;) THEN 6&#13;&#10;ELSE 0 &#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='defenseInGoalie' datatype='integer' name='[Calculation_6720301120947213]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF CONTAINS([defense_inGoalie],&quot;defense_inGoalie&quot;) THEN 1 ELSE 0 END' scope-isolation='false' />
            </column>
            <column caption='ballOneAutoScored' datatype='integer' name='[Calculation_6720306005744157]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF CONTAINS([ballOneAuto],&quot;highMake&quot;) OR CONTAINS([ballOneAuto],&quot;lowMake&quot;) THEN 1 ELSE 0 END' scope-isolation='false' />
            </column>
            <column caption='numBallsAutoUsed' datatype='integer' name='[Calculation_6780303164535382]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_4630303164056150]+[Calculation_2530303164410072]+[Calculation_8120303164436437]' scope-isolation='false' />
            </column>
            <column caption='ShotsTotal' datatype='real' name='[Calculation_7770306003540857]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[highGoalShots_colored]+[highGoalShots_goalie]+[highGoalShots_white]' scope-isolation='false' />
            </column>
            <column caption='shooterProportion' datatype='real' name='[Calculation_8100305223149782]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_8670303174818409]/[Number of Records]' scope-isolation='false' />
            </column>
            <column caption='ballThreeAutoUsed' datatype='integer' name='[Calculation_8120303164436437]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF CONTAINS([ballThreeAuto],&quot;highMake&quot;) OR &#13;&#10;CONTAINS([ballThreeAuto],&quot;highMiss&quot;) OR &#13;&#10;CONTAINS([ballThreeAuto],&quot;lowMake&quot;) OR&#13;&#10;CONTAINS([ballThreeAuto],&quot;lowMiss&quot;)&#13;&#10;THEN 1&#13;&#10;ELSE 0&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='catcherProportion' datatype='real' name='[Calculation_8320305222936780]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_9080303174733079]/[Number of Records]' scope-isolation='false' />
            </column>
            <column caption='shooter' datatype='integer' name='[Calculation_8670303174818409]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF CONTAINS([role_shooter],&quot;shooter&quot;) THEN 1 ELSE 0 END' scope-isolation='false' />
            </column>
            <column caption='autoAccuracy' datatype='real' name='[Calculation_9010306010337187]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_0660306010312790]/[Calculation_6780303164535382]' scope-isolation='false' />
            </column>
            <column caption='catcher(role)' datatype='integer' name='[Calculation_9080303174733079]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF CONTAINS([role_catcher],&quot;catcher&quot;) THEN 1 ELSE 0 END' scope-isolation='false' />
            </column>
            <column caption='highGoalScores' datatype='real' name='[Calculation_9170301120020898]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[highGoalScores_colored]+[highGoalScores_goalie]+[highGoalScores_white]' scope-isolation='false' />
            </column>
            <column caption='ShotsGoalieProportion' datatype='real' name='[Calculation_9570306003707531]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[highGoalShots_goalie]/[Calculation_7770306003540857]' scope-isolation='false' />
            </column>
            <column caption='soloCycler' datatype='integer' name='[Calculation_9890303174831752]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF CONTAINS([role_soloCycler],&quot;soloCycler&quot;) THEN 1 ELSE 0 END' scope-isolation='false' />
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Team' datatype='string' name='[TEAM_NUM]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_1140301120102569]' derivation='Avg' name='[avg:Calculation_1140301120102569:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2270303165543352]' derivation='Avg' name='[avg:Calculation_2270303165543352:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_6780303164535382]' derivation='Avg' name='[avg:Calculation_6780303164535382:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_9170301120020898]' derivation='Avg' name='[avg:Calculation_9170301120020898:qk]' pivot='key' type='quantitative' />
            <column-instance column='[fumbles]' derivation='Avg' name='[avg:fumbles:qk]' pivot='key' type='quantitative' />
            <column-instance column='[passRecvHuman]' derivation='Avg' name='[avg:passRecvHuman:qk]' pivot='key' type='quantitative' />
            <column-instance column='[passRecvRobot]' derivation='Avg' name='[avg:passRecvRobot:qk]' pivot='key' type='quantitative' />
            <column-instance column='[passStarts]' derivation='Avg' name='[avg:passStarts:qk]' pivot='key' type='quantitative' />
            <column-instance column='[passesBlocked]' derivation='Avg' name='[avg:passesBlocked:qk]' pivot='key' type='quantitative' />
            <column-instance column='[shotsBlocked]' derivation='Avg' name='[avg:shotsBlocked:qk]' pivot='key' type='quantitative' />
            <column-instance column='[trussThrowScores]' derivation='Avg' name='[avg:trussThrowScores:qk]' pivot='key' type='quantitative' />
            <column-instance column='[fumbles]' derivation='CountD' name='[ctd:fumbles:qk]' pivot='key' type='quantitative' />
            <column aggregation='CountD' datatype='real' datatype-customized='true' name='[fumbles]' role='measure' type='quantitative'>
            </column>
            <column caption='Scores-Colored' datatype='real' datatype-customized='true' name='[highGoalScores_colored]' role='measure' type='quantitative'>
            </column>
            <column caption='Scores-Goalie' datatype='real' datatype-customized='true' name='[highGoalScores_goalie]' role='measure' type='quantitative'>
            </column>
            <column caption='Scores-White' datatype='real' datatype-customized='true' name='[highGoalScores_white]' role='measure' type='quantitative'>
            </column>
            <column caption='Shots-Colored' datatype='real' datatype-customized='true' name='[highGoalShots_colored]' role='measure' type='quantitative'>
            </column>
            <column caption='Shots-Goalie' datatype='real' datatype-customized='true' name='[highGoalShots_goalie]' role='measure' type='quantitative'>
            </column>
            <column caption='Shots-White' datatype='real' datatype-customized='true' name='[highGoalShots_white]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' datatype-customized='true' name='[lowGoalScores]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' datatype-customized='true' name='[lowGoalShots]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[TEAM_NUM]' derivation='None' name='[none:TEAM_NUM:nk]' pivot='key' type='nominal' />
            <column datatype='real' datatype-customized='true' name='[passRecvHuman]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' datatype-customized='true' name='[passRecvRobot]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' datatype-customized='true' name='[passStarts]' role='measure' type='quantitative'>
            </column>
            <column aggregation='CountD' datatype='real' datatype-customized='true' name='[passesBlocked]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' datatype-customized='true' name='[robotSpeed]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' datatype-customized='true' name='[shotsBlocked]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[Calculation_0560306115107302]' derivation='Sum' name='[sum:Calculation_0560306115107302:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_0660306010312790]' derivation='Sum' name='[sum:Calculation_0660306010312790:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_0880301121037679]' derivation='Sum' name='[sum:Calculation_0880301121037679:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1010305223043753]' derivation='Sum' name='[sum:Calculation_1010305223043753:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1140301120102569]' derivation='Sum' name='[sum:Calculation_1140301120102569:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1840303165406454]' derivation='Sum' name='[sum:Calculation_1840303165406454:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2020306003635320]' derivation='Sum' name='[sum:Calculation_2020306003635320:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2310305223237409]' derivation='Sum' name='[sum:Calculation_2310305223237409:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2400303174747658]' derivation='Sum' name='[sum:Calculation_2400303174747658:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2530303164410072]' derivation='Sum' name='[sum:Calculation_2530303164410072:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2650306010036590]' derivation='Sum' name='[sum:Calculation_2650306010036590:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_3110305223116631]' derivation='Sum' name='[sum:Calculation_3110305223116631:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_3120303174623405]' derivation='Sum' name='[sum:Calculation_3120303174623405:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_3320301120424237]' derivation='Sum' name='[sum:Calculation_3320301120424237:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_3480303174853084]' derivation='Sum' name='[sum:Calculation_3480303174853084:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_3890301121008021]' derivation='Sum' name='[sum:Calculation_3890301121008021:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_3980306003743834]' derivation='Sum' name='[sum:Calculation_3980306003743834:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4200301121859883]' derivation='Sum' name='[sum:Calculation_4200301121859883:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4630303164056150]' derivation='Sum' name='[sum:Calculation_4630303164056150:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4630303165425425]' derivation='Sum' name='[sum:Calculation_4630303165425425:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_5400306010106313]' derivation='Sum' name='[sum:Calculation_5400306010106313:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_6160305223212906]' derivation='Sum' name='[sum:Calculation_6160305223212906:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_6620303164959017]' derivation='Sum' name='[sum:Calculation_6620303164959017:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_6720301120947213]' derivation='Sum' name='[sum:Calculation_6720301120947213:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_6720306005744157]' derivation='Sum' name='[sum:Calculation_6720306005744157:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_6780303164535382]' derivation='Sum' name='[sum:Calculation_6780303164535382:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_7770306003540857]' derivation='Sum' name='[sum:Calculation_7770306003540857:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_8100305223149782]' derivation='Sum' name='[sum:Calculation_8100305223149782:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_8120303164436437]' derivation='Sum' name='[sum:Calculation_8120303164436437:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_8320305222936780]' derivation='Sum' name='[sum:Calculation_8320305222936780:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_8670303174818409]' derivation='Sum' name='[sum:Calculation_8670303174818409:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_9010306010337187]' derivation='Sum' name='[sum:Calculation_9010306010337187:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_9080303174733079]' derivation='Sum' name='[sum:Calculation_9080303174733079:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_9170301120020898]' derivation='Sum' name='[sum:Calculation_9170301120020898:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_9570306003707531]' derivation='Sum' name='[sum:Calculation_9570306003707531:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_9890303174831752]' derivation='Sum' name='[sum:Calculation_9890303174831752:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[highGoalScores_colored]' derivation='Sum' name='[sum:highGoalScores_colored:qk]' pivot='key' type='quantitative' />
            <column-instance column='[highGoalScores_goalie]' derivation='Sum' name='[sum:highGoalScores_goalie:qk]' pivot='key' type='quantitative' />
            <column-instance column='[highGoalScores_white]' derivation='Sum' name='[sum:highGoalScores_white:qk]' pivot='key' type='quantitative' />
            <column-instance column='[highGoalShots_colored]' derivation='Sum' name='[sum:highGoalShots_colored:qk]' pivot='key' type='quantitative' />
            <column-instance column='[highGoalShots_goalie]' derivation='Sum' name='[sum:highGoalShots_goalie:qk]' pivot='key' type='quantitative' />
            <column-instance column='[highGoalShots_white]' derivation='Sum' name='[sum:highGoalShots_white:qk]' pivot='key' type='quantitative' />
            <column-instance column='[lowGoalScores]' derivation='Sum' name='[sum:lowGoalScores:qk]' pivot='key' type='quantitative' />
            <column-instance column='[lowGoalShots]' derivation='Sum' name='[sum:lowGoalShots:qk]' pivot='key' type='quantitative' />
            <column-instance column='[passRecvHuman]' derivation='Sum' name='[sum:passRecvHuman:qk]' pivot='key' type='quantitative' />
            <column-instance column='[passRecvRobot]' derivation='Sum' name='[sum:passRecvRobot:qk]' pivot='key' type='quantitative' />
            <column-instance column='[passStarts]' derivation='Sum' name='[sum:passStarts:qk]' pivot='key' type='quantitative' />
            <column-instance column='[robotSpeed]' derivation='Sum' name='[sum:robotSpeed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[shotsBlocked]' derivation='Sum' name='[sum:shotsBlocked:qk]' pivot='key' type='quantitative' />
            <column-instance column='[trussCatchScores]' derivation='Sum' name='[sum:trussCatchScores:qk]' pivot='key' type='quantitative' />
            <column-instance column='[trussCatchShots]' derivation='Sum' name='[sum:trussCatchShots:qk]' pivot='key' type='quantitative' />
            <column-instance column='[trussThrowScores]' derivation='Sum' name='[sum:trussThrowScores:qk]' pivot='key' type='quantitative' />
            <column-instance column='[trussThrowShots]' derivation='Sum' name='[sum:trussThrowShots:qk]' pivot='key' type='quantitative' />
            <column datatype='real' datatype-customized='true' name='[trussCatchScores]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' datatype-customized='true' name='[trussCatchShots]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' datatype-customized='true' name='[trussThrowScores]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' datatype-customized='true' name='[trussThrowShots]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[Calculation_2210303163902149]' derivation='User' name='[usr:Calculation_2210303163902149:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <sort class='manual' column='[mysql.41699.488635277776].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[mysql.41699.488635277776].[usr:Calculation_2210303163902149:qk]&quot;</bucket>
              <bucket>&quot;[mysql.41699.488635277776].[avg:Calculation_9170301120020898:qk]&quot;</bucket>
              <bucket>&quot;[mysql.41699.488635277776].[avg:Calculation_1140301120102569:qk]&quot;</bucket>
              <bucket>&quot;[mysql.41699.488635277776].[avg:trussThrowScores:qk]&quot;</bucket>
              <bucket>&quot;[mysql.41699.488635277776].[avg:passStarts:qk]&quot;</bucket>
              <bucket>&quot;[mysql.41699.488635277776].[avg:shotsBlocked:qk]&quot;</bucket>
              <bucket>&quot;[mysql.41699.488635277776].[avg:fumbles:qk]&quot;</bucket>
              <bucket>&quot;[mysql.41699.488635277776].[avg:passRecvHuman:qk]&quot;</bucket>
              <bucket>&quot;[mysql.41699.488635277776].[avg:passRecvRobot:qk]&quot;</bucket>
              <bucket>&quot;[mysql.41699.488635277776].[sum:Calculation_9010306010337187:qk]&quot;</bucket>
              <bucket>&quot;[mysql.41699.488635277776].[avg:passesBlocked:qk]&quot;</bucket>
              <bucket>&quot;[mysql.41699.488635277776].[avg:Calculation_6780303164535382:qk]&quot;</bucket>
              <bucket>&quot;[mysql.41699.488635277776].[avg:Calculation_2270303165543352:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[mysql.41699.488635277776].[none:TEAM_NUM:nk]' filter-group='3'>
            <groupfilter from='&quot;1&quot;' function='range' level='[none:TEAM_NUM:nk]' to='&quot;6&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[mysql.41699.488635277776].[none:TEAM_NUM:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='width' field='[mysql.41699.488635277776].[:Measure Names]' value='184' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' field='[mysql.41699.488635277776].[:Measure Names]' value='12' />
            <format attr='font-weight' field='[mysql.41699.488635277776].[:Measure Names]' value='normal' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([mysql.41699.488635277776].[:Measure Names] * [mysql.41699.488635277776].[Multiple Values])</rows>
        <cols>[mysql.41699.488635277776].[none:TEAM_NUM:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Booleans'>
      <table>
        <view>
          <datasources>
            <datasource caption='team_table (yes)' name='mysql.41699.488635277776' />
          </datasources>
          <datasource-dependencies datasource='mysql.41699.488635277776'>
            <column caption='humanTrussThrow' datatype='integer' name='[Calculation_0560306115107302]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF CONTAINS([throwsToHumanOverTruss],&quot;throwsToHumanOverTruss&quot;) THEN 1 ELSE 0 END' scope-isolation='false' />
            </column>
            <column caption='numBallsAutoScored' datatype='integer' name='[Calculation_0660306010312790]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_6720306005744157]+[Calculation_2650306010036590]+[Calculation_5400306010106313]' scope-isolation='false' />
            </column>
            <column caption='defenseStopRobot' datatype='integer' name='[Calculation_0880301121037679]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF CONTAINS([defense_stopRobot],&quot;defense_stopRobot&quot;) THEN 1 ELSE 0 END' scope-isolation='false' />
            </column>
            <column caption='defenseProportion' datatype='real' name='[Calculation_1010305223043753]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_2400303174747658]/[Number of Records]' scope-isolation='false' />
            </column>
            <column caption='highGoalShots' datatype='real' name='[Calculation_1140301120102569]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[highGoalShots_colored]+[highGoalShots_goalie]+[highGoalShots_white]' scope-isolation='false' />
            </column>
            <column caption='ballTwoAutoPoints' datatype='integer' name='[Calculation_1840303165406454]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF CONTAINS([ballTwoAuto],&quot;highMake&quot;) AND CONTAINS([autoHotGoalTwo],&quot;autoHotGoalTwo&quot;) THEN 20&#13;&#10;ELSEIF CONTAINS([ballTwoAuto],&quot;highMake&quot;) THEN 15&#13;&#10;ELSEIF CONTAINS([ballTwoAuto],&quot;lowMake&quot;) AND CONTAINS([autoHotGoalTwo],&quot;autoHotGoalTwo&quot;) THEN 11&#13;&#10;ELSEIF CONTAINS([ballTwoAuto],&quot;lowMake&quot;) THEN 6&#13;&#10;ELSE 0 &#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='ShotsColoredProportion' datatype='real' name='[Calculation_2020306003635320]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[highGoalShots_colored]/[Calculation_7770306003540857]' scope-isolation='false' />
            </column>
            <column caption='highGoalAccuracy' datatype='real' name='[Calculation_2210303163902149]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([Calculation_9170301120020898])/AVG([Calculation_1140301120102569])' scope-isolation='false' />
            </column>
            <column caption='soloTrussCatcherProportion' datatype='real' name='[Calculation_2310305223237409]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_3480303174853084]/[Number of Records]' scope-isolation='false' />
            </column>
            <column caption='defense' datatype='integer' name='[Calculation_2400303174747658]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF CONTAINS([role_defense],&quot;defense&quot;) THEN 1 ELSE 0 END' scope-isolation='false' />
            </column>
            <column caption='ballTwoAutoUsed' datatype='integer' name='[Calculation_2530303164410072]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF CONTAINS([ballTwoAuto],&quot;highMake&quot;) OR &#13;&#10;CONTAINS([ballTwoAuto],&quot;highMiss&quot;) OR &#13;&#10;CONTAINS([ballTwoAuto],&quot;lowMake&quot;) OR&#13;&#10;CONTAINS([ballTwoAuto],&quot;lowMiss&quot;)&#13;&#10;THEN 1&#13;&#10;ELSE 0&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='ballTwoAutoScored' datatype='integer' name='[Calculation_2650306010036590]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF CONTAINS([ballTwoAuto],&quot;highMake&quot;) OR CONTAINS([ballTwoAuto],&quot;lowMake&quot;) THEN 1 ELSE 0 END' scope-isolation='false' />
            </column>
            <column caption='assisterProportion' datatype='real' name='[Calculation_3110305223116631]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_3120303174623405]/[Number of Records]' scope-isolation='false' />
            </column>
            <column caption='assister' datatype='integer' name='[Calculation_3120303174623405]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF CONTAINS([role_assister],&quot;assister&quot;) THEN 1 ELSE 0 END' scope-isolation='false' />
            </column>
            <column caption='ManeuveredTF' datatype='integer' name='[Calculation_3320301120424237]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF CONTAINS([maneuvered],&quot;maneuvered&quot;) THEN 1 ELSE 0 END' scope-isolation='false' />
            </column>
            <column caption='soloTrussCatcher' datatype='integer' name='[Calculation_3480303174853084]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF CONTAINS([role_soloTrussCatcher],&quot;soloTrussCatcher&quot;) THEN 1 ELSE 0 END' scope-isolation='false' />
            </column>
            <column caption='defenseStopGettingBall' datatype='integer' name='[Calculation_3890301121008021]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF CONTAINS([defense_stopGettingBall],&quot;defense_stopGettingBall&quot;) THEN 1 ELSE 0 END' scope-isolation='false' />
            </column>
            <column caption='ShotsWhiteProportion' datatype='real' name='[Calculation_3980306003743834]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[highGoalShots_white]/[Calculation_7770306003540857]' scope-isolation='false' />
            </column>
            <column caption='pushedTF' datatype='integer' name='[Calculation_4200301121859883]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF CONTAINS(pushed,&quot;pushed&quot;)THEN 1 ELSE 0 END' scope-isolation='false' />
            </column>
            <column caption='ballOneAutoUsed' datatype='integer' name='[Calculation_4630303164056150]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF CONTAINS([ballOneAuto],&quot;highMake&quot;) OR &#13;&#10;CONTAINS([ballOneAuto],&quot;highMiss&quot;) OR &#13;&#10;CONTAINS([ballOneAuto],&quot;lowMake&quot;) OR&#13;&#10;CONTAINS([ballOneAuto],&quot;lowMiss&quot;)&#13;&#10;THEN 1&#13;&#10;ELSE 0&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='ballThreeAutoPoints' datatype='integer' name='[Calculation_4630303165425425]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF CONTAINS([ballThreeAuto],&quot;highMake&quot;) AND CONTAINS([autoHotGoalThree],&quot;autoHotGoalThree&quot;) THEN 20&#13;&#10;ELSEIF CONTAINS([ballThreeAuto],&quot;highMake&quot;) THEN 15&#13;&#10;ELSEIF CONTAINS([ballThreeAuto],&quot;lowMake&quot;) AND CONTAINS([autoHotGoalThree],&quot;autoHotGoalThree&quot;) THEN 11&#13;&#10;ELSEIF CONTAINS([ballThreeAuto],&quot;lowMake&quot;) THEN 6&#13;&#10;ELSE 0 &#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='ballThreeAutoScored' datatype='integer' name='[Calculation_5400306010106313]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF CONTAINS([ballThreeAuto],&quot;highMake&quot;) OR CONTAINS([ballThreeAuto],&quot;lowMake&quot;) THEN 1 ELSE 0 END' scope-isolation='false' />
            </column>
            <column caption='soloCyclerProportion' datatype='real' name='[Calculation_6160305223212906]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_9890303174831752]/[Number of Records]' scope-isolation='false' />
            </column>
            <column caption='ballOneAutoPoints' datatype='integer' name='[Calculation_6620303164959017]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF CONTAINS([ballOneAuto],&quot;highMake&quot;) AND CONTAINS([autoHotGoalOne],&quot;autoHotGoalOne&quot;) THEN 20&#13;&#10;ELSEIF CONTAINS([ballOneAuto],&quot;highMake&quot;) THEN 15&#13;&#10;ELSEIF CONTAINS([ballOneAuto],&quot;lowMake&quot;) AND CONTAINS([autoHotGoalOne],&quot;autoHotGoalOne&quot;) THEN 11&#13;&#10;ELSEIF CONTAINS([ballOneAuto],&quot;lowMake&quot;) THEN 6&#13;&#10;ELSE 0 &#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='defenseInGoalie' datatype='integer' name='[Calculation_6720301120947213]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF CONTAINS([defense_inGoalie],&quot;defense_inGoalie&quot;) THEN 1 ELSE 0 END' scope-isolation='false' />
            </column>
            <column caption='ballOneAutoScored' datatype='integer' name='[Calculation_6720306005744157]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF CONTAINS([ballOneAuto],&quot;highMake&quot;) OR CONTAINS([ballOneAuto],&quot;lowMake&quot;) THEN 1 ELSE 0 END' scope-isolation='false' />
            </column>
            <column caption='numBallsAutoUsed' datatype='integer' name='[Calculation_6780303164535382]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_4630303164056150]+[Calculation_2530303164410072]+[Calculation_8120303164436437]' scope-isolation='false' />
            </column>
            <column caption='ShotsTotal' datatype='real' name='[Calculation_7770306003540857]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[highGoalShots_colored]+[highGoalShots_goalie]+[highGoalShots_white]' scope-isolation='false' />
            </column>
            <column caption='shooterProportion' datatype='real' name='[Calculation_8100305223149782]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_8670303174818409]/[Number of Records]' scope-isolation='false' />
            </column>
            <column caption='ballThreeAutoUsed' datatype='integer' name='[Calculation_8120303164436437]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF CONTAINS([ballThreeAuto],&quot;highMake&quot;) OR &#13;&#10;CONTAINS([ballThreeAuto],&quot;highMiss&quot;) OR &#13;&#10;CONTAINS([ballThreeAuto],&quot;lowMake&quot;) OR&#13;&#10;CONTAINS([ballThreeAuto],&quot;lowMiss&quot;)&#13;&#10;THEN 1&#13;&#10;ELSE 0&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='catcherProportion' datatype='real' name='[Calculation_8320305222936780]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_9080303174733079]/[Number of Records]' scope-isolation='false' />
            </column>
            <column caption='shooter' datatype='integer' name='[Calculation_8670303174818409]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF CONTAINS([role_shooter],&quot;shooter&quot;) THEN 1 ELSE 0 END' scope-isolation='false' />
            </column>
            <column caption='robotCatches' datatype='integer' name='[Calculation_9010303172052832]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF CONTAINS([caughtBallHuman],&quot;caughtBallHuman&quot;) OR &#13;&#10;CONTAINS([caughtBallRobots],&quot;caughtBallRobots&quot;) THEN 1 &#13;&#10;ELSE 0&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='autoAccuracy' datatype='real' name='[Calculation_9010306010337187]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_0660306010312790]/[Calculation_6780303164535382]' scope-isolation='false' />
            </column>
            <column caption='catcher(role)' datatype='integer' name='[Calculation_9080303174733079]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF CONTAINS([role_catcher],&quot;catcher&quot;) THEN 1 ELSE 0 END' scope-isolation='false' />
            </column>
            <column caption='highGoalScores' datatype='real' name='[Calculation_9170301120020898]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[highGoalScores_colored]+[highGoalScores_goalie]+[highGoalScores_white]' scope-isolation='false' />
            </column>
            <column caption='collector' datatype='integer' name='[Calculation_9410303172220189]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF CONTAINS([collectedBall],&quot;collectedBall&quot;) THEN 1&#13;&#10;ELSE 0&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='ShotsGoalieProportion' datatype='real' name='[Calculation_9570306003707531]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[highGoalShots_goalie]/[Calculation_7770306003540857]' scope-isolation='false' />
            </column>
            <column caption='soloCycler' datatype='integer' name='[Calculation_9890303174831752]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF CONTAINS([role_soloCycler],&quot;soloCycler&quot;) THEN 1 ELSE 0 END' scope-isolation='false' />
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Team' datatype='string' name='[TEAM_NUM]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_0880301121037679]' derivation='Avg' name='[avg:Calculation_0880301121037679:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_3320301120424237]' derivation='Avg' name='[avg:Calculation_3320301120424237:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_3890301121008021]' derivation='Avg' name='[avg:Calculation_3890301121008021:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_6720301120947213]' derivation='Avg' name='[avg:Calculation_6720301120947213:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_9010303172052832]' derivation='Avg' name='[avg:Calculation_9010303172052832:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_9410303172220189]' derivation='Avg' name='[avg:Calculation_9410303172220189:qk]' pivot='key' type='quantitative' />
            <column-instance column='[fumbles]' derivation='CountD' name='[ctd:fumbles:qk]' pivot='key' type='quantitative' />
            <column aggregation='CountD' datatype='real' datatype-customized='true' name='[fumbles]' role='measure' type='quantitative'>
            </column>
            <column caption='Scores-Colored' datatype='real' datatype-customized='true' name='[highGoalScores_colored]' role='measure' type='quantitative'>
            </column>
            <column caption='Scores-Goalie' datatype='real' datatype-customized='true' name='[highGoalScores_goalie]' role='measure' type='quantitative'>
            </column>
            <column caption='Scores-White' datatype='real' datatype-customized='true' name='[highGoalScores_white]' role='measure' type='quantitative'>
            </column>
            <column caption='Shots-Colored' datatype='real' datatype-customized='true' name='[highGoalShots_colored]' role='measure' type='quantitative'>
            </column>
            <column caption='Shots-Goalie' datatype='real' datatype-customized='true' name='[highGoalShots_goalie]' role='measure' type='quantitative'>
            </column>
            <column caption='Shots-White' datatype='real' datatype-customized='true' name='[highGoalShots_white]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' datatype-customized='true' name='[lowGoalScores]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' datatype-customized='true' name='[lowGoalShots]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[TEAM_NUM]' derivation='None' name='[none:TEAM_NUM:nk]' pivot='key' type='nominal' />
            <column datatype='real' datatype-customized='true' name='[passRecvHuman]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' datatype-customized='true' name='[passRecvRobot]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' datatype-customized='true' name='[passStarts]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' datatype-customized='true' name='[robotSpeed]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' datatype-customized='true' name='[shotsBlocked]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[Calculation_0560306115107302]' derivation='Sum' name='[sum:Calculation_0560306115107302:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_0660306010312790]' derivation='Sum' name='[sum:Calculation_0660306010312790:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_0880301121037679]' derivation='Sum' name='[sum:Calculation_0880301121037679:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1010305223043753]' derivation='Sum' name='[sum:Calculation_1010305223043753:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1140301120102569]' derivation='Sum' name='[sum:Calculation_1140301120102569:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1840303165406454]' derivation='Sum' name='[sum:Calculation_1840303165406454:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2020306003635320]' derivation='Sum' name='[sum:Calculation_2020306003635320:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2310305223237409]' derivation='Sum' name='[sum:Calculation_2310305223237409:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2400303174747658]' derivation='Sum' name='[sum:Calculation_2400303174747658:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2530303164410072]' derivation='Sum' name='[sum:Calculation_2530303164410072:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2650306010036590]' derivation='Sum' name='[sum:Calculation_2650306010036590:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_3110305223116631]' derivation='Sum' name='[sum:Calculation_3110305223116631:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_3120303174623405]' derivation='Sum' name='[sum:Calculation_3120303174623405:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_3320301120424237]' derivation='Sum' name='[sum:Calculation_3320301120424237:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_3480303174853084]' derivation='Sum' name='[sum:Calculation_3480303174853084:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_3890301121008021]' derivation='Sum' name='[sum:Calculation_3890301121008021:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_3980306003743834]' derivation='Sum' name='[sum:Calculation_3980306003743834:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4200301121859883]' derivation='Sum' name='[sum:Calculation_4200301121859883:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4630303164056150]' derivation='Sum' name='[sum:Calculation_4630303164056150:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4630303165425425]' derivation='Sum' name='[sum:Calculation_4630303165425425:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_5400306010106313]' derivation='Sum' name='[sum:Calculation_5400306010106313:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_6160305223212906]' derivation='Sum' name='[sum:Calculation_6160305223212906:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_6620303164959017]' derivation='Sum' name='[sum:Calculation_6620303164959017:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_6720301120947213]' derivation='Sum' name='[sum:Calculation_6720301120947213:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_6720306005744157]' derivation='Sum' name='[sum:Calculation_6720306005744157:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_6780303164535382]' derivation='Sum' name='[sum:Calculation_6780303164535382:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_7770306003540857]' derivation='Sum' name='[sum:Calculation_7770306003540857:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_8100305223149782]' derivation='Sum' name='[sum:Calculation_8100305223149782:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_8120303164436437]' derivation='Sum' name='[sum:Calculation_8120303164436437:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_8320305222936780]' derivation='Sum' name='[sum:Calculation_8320305222936780:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_8670303174818409]' derivation='Sum' name='[sum:Calculation_8670303174818409:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_9010306010337187]' derivation='Sum' name='[sum:Calculation_9010306010337187:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_9080303174733079]' derivation='Sum' name='[sum:Calculation_9080303174733079:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_9170301120020898]' derivation='Sum' name='[sum:Calculation_9170301120020898:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_9570306003707531]' derivation='Sum' name='[sum:Calculation_9570306003707531:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_9890303174831752]' derivation='Sum' name='[sum:Calculation_9890303174831752:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[highGoalScores_colored]' derivation='Sum' name='[sum:highGoalScores_colored:qk]' pivot='key' type='quantitative' />
            <column-instance column='[highGoalScores_goalie]' derivation='Sum' name='[sum:highGoalScores_goalie:qk]' pivot='key' type='quantitative' />
            <column-instance column='[highGoalScores_white]' derivation='Sum' name='[sum:highGoalScores_white:qk]' pivot='key' type='quantitative' />
            <column-instance column='[highGoalShots_colored]' derivation='Sum' name='[sum:highGoalShots_colored:qk]' pivot='key' type='quantitative' />
            <column-instance column='[highGoalShots_goalie]' derivation='Sum' name='[sum:highGoalShots_goalie:qk]' pivot='key' type='quantitative' />
            <column-instance column='[highGoalShots_white]' derivation='Sum' name='[sum:highGoalShots_white:qk]' pivot='key' type='quantitative' />
            <column-instance column='[lowGoalScores]' derivation='Sum' name='[sum:lowGoalScores:qk]' pivot='key' type='quantitative' />
            <column-instance column='[lowGoalShots]' derivation='Sum' name='[sum:lowGoalShots:qk]' pivot='key' type='quantitative' />
            <column-instance column='[passRecvHuman]' derivation='Sum' name='[sum:passRecvHuman:qk]' pivot='key' type='quantitative' />
            <column-instance column='[passRecvRobot]' derivation='Sum' name='[sum:passRecvRobot:qk]' pivot='key' type='quantitative' />
            <column-instance column='[passStarts]' derivation='Sum' name='[sum:passStarts:qk]' pivot='key' type='quantitative' />
            <column-instance column='[robotSpeed]' derivation='Sum' name='[sum:robotSpeed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[shotsBlocked]' derivation='Sum' name='[sum:shotsBlocked:qk]' pivot='key' type='quantitative' />
            <column-instance column='[trussCatchScores]' derivation='Sum' name='[sum:trussCatchScores:qk]' pivot='key' type='quantitative' />
            <column-instance column='[trussCatchShots]' derivation='Sum' name='[sum:trussCatchShots:qk]' pivot='key' type='quantitative' />
            <column-instance column='[trussThrowScores]' derivation='Sum' name='[sum:trussThrowScores:qk]' pivot='key' type='quantitative' />
            <column-instance column='[trussThrowShots]' derivation='Sum' name='[sum:trussThrowShots:qk]' pivot='key' type='quantitative' />
            <column datatype='real' datatype-customized='true' name='[trussCatchScores]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' datatype-customized='true' name='[trussCatchShots]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' datatype-customized='true' name='[trussThrowScores]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' datatype-customized='true' name='[trussThrowShots]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[Calculation_2210303163902149]' derivation='User' name='[usr:Calculation_2210303163902149:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <sort class='manual' column='[mysql.41699.488635277776].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[mysql.41699.488635277776].[avg:Calculation_3320301120424237:qk]&quot;</bucket>
              <bucket>&quot;[mysql.41699.488635277776].[avg:Calculation_9410303172220189:qk]&quot;</bucket>
              <bucket>&quot;[mysql.41699.488635277776].[avg:Calculation_6720301120947213:qk]&quot;</bucket>
              <bucket>&quot;[mysql.41699.488635277776].[avg:Calculation_3890301121008021:qk]&quot;</bucket>
              <bucket>&quot;[mysql.41699.488635277776].[avg:Calculation_0880301121037679:qk]&quot;</bucket>
              <bucket>&quot;[mysql.41699.488635277776].[avg:Calculation_9010303172052832:qk]&quot;</bucket>
              <bucket>&quot;[mysql.41699.488635277776].[sum:Calculation_0560306115107302:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[mysql.41699.488635277776].[none:TEAM_NUM:nk]' filter-group='3'>
            <groupfilter from='&quot;1&quot;' function='range' level='[none:TEAM_NUM:nk]' to='&quot;6&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[mysql.41699.488635277776].[none:TEAM_NUM:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[mysql.41699.488635277776].[:Measure Names]' value='19' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[mysql.41699.488635277776].[:Measure Names]' value='232' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' field='[mysql.41699.488635277776].[:Measure Names]' value='normal' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[mysql.41699.488635277776].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[mysql.41699.488635277776].[:Measure Names]</rows>
        <cols>[mysql.41699.488635277776].[none:TEAM_NUM:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Comments'>
      <table>
        <view>
          <datasources>
            <datasource caption='team_table (yes)' name='mysql.41699.488635277776' />
          </datasources>
          <datasource-dependencies datasource='mysql.41699.488635277776'>
            <column caption='Team' datatype='string' name='[TEAM_NUM]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[breakDescription]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[matchComments]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[TEAM_NUM]' derivation='None' name='[none:TEAM_NUM:nk]' pivot='key' type='nominal' />
            <column-instance column='[breakDescription]' derivation='None' name='[none:breakDescription:nk]' pivot='key' type='nominal' />
            <column-instance column='[matchComments]' derivation='None' name='[none:matchComments:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[mysql.41699.488635277776].[none:TEAM_NUM:nk]'>
            <groupfilter from='&quot;1&quot;' function='range' level='[none:TEAM_NUM:nk]' to='&quot;6&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[mysql.41699.488635277776].[none:matchComments:nk]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:matchComments:nk]' />
              <groupfilter function='member' level='[none:matchComments:nk]' member='&quot;&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[mysql.41699.488635277776].[none:TEAM_NUM:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[mysql.41699.488635277776].[none:breakDescription:nk]' value='135' />
            <format attr='width' field='[mysql.41699.488635277776].[none:matchComments:nk]' value='478' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[mysql.41699.488635277776].[none:matchComments:nk]' value='62' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows></rows>
        <cols>([mysql.41699.488635277776].[none:TEAM_NUM:nk] / ([mysql.41699.488635277776].[none:breakDescription:nk] / [mysql.41699.488635277776].[none:matchComments:nk]))</cols>
      </table>
    </worksheet>
    <worksheet name='Preferred Shot Position'>
      <table>
        <view>
          <datasources>
            <datasource caption='team_table (yes)' name='mysql.41699.488635277776' />
          </datasources>
          <datasource-dependencies datasource='mysql.41699.488635277776'>
            <column caption='ShotsColoredProportion' datatype='real' name='[Calculation_2020306003635320]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[highGoalShots_colored]/[Calculation_7770306003540857]' scope-isolation='false' />
            </column>
            <column caption='ShotsWhiteProportion' datatype='real' name='[Calculation_3980306003743834]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[highGoalShots_white]/[Calculation_7770306003540857]' scope-isolation='false' />
            </column>
            <column caption='ShotsGoalieProportion' datatype='real' name='[Calculation_9570306003707531]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[highGoalShots_goalie]/[Calculation_7770306003540857]' scope-isolation='false' />
            </column>
            <column caption='Match Number' datatype='string' name='[MATCH_NUM]' role='dimension' type='nominal'>
            </column>
            <column caption='Team' datatype='string' name='[TEAM_NUM]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[MATCH_NUM]' derivation='None' name='[none:MATCH_NUM:nk]' pivot='key' type='nominal' />
            <column-instance column='[TEAM_NUM]' derivation='None' name='[none:TEAM_NUM:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2020306003635320]' derivation='Sum' name='[sum:Calculation_2020306003635320:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_3980306003743834]' derivation='Sum' name='[sum:Calculation_3980306003743834:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_9570306003707531]' derivation='Sum' name='[sum:Calculation_9570306003707531:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[mysql.41699.488635277776].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[mysql.41699.488635277776].[sum:Calculation_2020306003635320:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[mysql.41699.488635277776].[sum:Calculation_9570306003707531:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[mysql.41699.488635277776].[sum:Calculation_3980306003743834:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[mysql.41699.488635277776].[none:TEAM_NUM:nk]' filter-group='3'>
            <groupfilter from='&quot;1&quot;' function='range' level='[none:TEAM_NUM:nk]' to='&quot;6&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[mysql.41699.488635277776].[none:TEAM_NUM:nk]</column>
            <column>[mysql.41699.488635277776].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[mysql.41699.488635277776].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([mysql.41699.488635277776].[none:TEAM_NUM:nk] / [mysql.41699.488635277776].[none:MATCH_NUM:nk])</rows>
        <cols>[mysql.41699.488635277776].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='Roles'>
      <table>
        <view>
          <datasources>
            <datasource caption='team_table (yes)' name='mysql.41699.488635277776' />
          </datasources>
          <datasource-dependencies datasource='mysql.41699.488635277776'>
            <column caption='defenseProportion' datatype='real' name='[Calculation_1010305223043753]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_2400303174747658]/[Number of Records]' scope-isolation='false' />
            </column>
            <column caption='soloTrussCatcherProportion' datatype='real' name='[Calculation_2310305223237409]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_3480303174853084]/[Number of Records]' scope-isolation='false' />
            </column>
            <column caption='ballTwoAutoUsed' datatype='integer' name='[Calculation_2530303164410072]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF CONTAINS([ballTwoAuto],&quot;highMake&quot;) OR &#13;&#10;CONTAINS([ballTwoAuto],&quot;highMiss&quot;) OR &#13;&#10;CONTAINS([ballTwoAuto],&quot;lowMake&quot;) OR&#13;&#10;CONTAINS([ballTwoAuto],&quot;lowMiss&quot;)&#13;&#10;THEN 1&#13;&#10;ELSE 0&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='assisterProportion' datatype='real' name='[Calculation_3110305223116631]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_3120303174623405]/[Number of Records]' scope-isolation='false' />
            </column>
            <column caption='soloCyclerProportion' datatype='real' name='[Calculation_6160305223212906]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_9890303174831752]/[Number of Records]' scope-isolation='false' />
            </column>
            <column caption='shooterProportion' datatype='real' name='[Calculation_8100305223149782]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_8670303174818409]/[Number of Records]' scope-isolation='false' />
            </column>
            <column caption='catcherProportion' datatype='real' name='[Calculation_8320305222936780]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_9080303174733079]/[Number of Records]' scope-isolation='false' />
            </column>
            <column caption='catcher(role)' datatype='integer' name='[Calculation_9080303174733079]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF CONTAINS([role_catcher],&quot;catcher&quot;) THEN 1 ELSE 0 END' scope-isolation='false' />
            </column>
            <column caption='Team' datatype='string' name='[TEAM_NUM]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[TEAM_NUM]' derivation='None' name='[none:TEAM_NUM:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1010305223043753]' derivation='Sum' name='[sum:Calculation_1010305223043753:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2310305223237409]' derivation='Sum' name='[sum:Calculation_2310305223237409:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2530303164410072]' derivation='Sum' name='[sum:Calculation_2530303164410072:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_3110305223116631]' derivation='Sum' name='[sum:Calculation_3110305223116631:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_6160305223212906]' derivation='Sum' name='[sum:Calculation_6160305223212906:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_8100305223149782]' derivation='Sum' name='[sum:Calculation_8100305223149782:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_8320305222936780]' derivation='Sum' name='[sum:Calculation_8320305222936780:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_9080303174733079]' derivation='Sum' name='[sum:Calculation_9080303174733079:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[mysql.41699.488635277776].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[mysql.41699.488635277776].[sum:Calculation_8320305222936780:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[mysql.41699.488635277776].[sum:Calculation_3110305223116631:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[mysql.41699.488635277776].[sum:Calculation_1010305223043753:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[mysql.41699.488635277776].[sum:Calculation_8100305223149782:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[mysql.41699.488635277776].[sum:Calculation_6160305223212906:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[mysql.41699.488635277776].[sum:Calculation_2310305223237409:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[mysql.41699.488635277776].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[mysql.41699.488635277776].[sum:Calculation_2530303164410072:qk]&quot;</bucket>
              <bucket>&quot;[mysql.41699.488635277776].[sum:Calculation_9080303174733079:qk]&quot;</bucket>
              <bucket>&quot;[mysql.41699.488635277776].[sum:Calculation_8320305222936780:qk]&quot;</bucket>
              <bucket>&quot;[mysql.41699.488635277776].[sum:Calculation_3110305223116631:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[mysql.41699.488635277776].[none:TEAM_NUM:nk]' filter-group='3'>
            <groupfilter from='&quot;1&quot;' function='range' level='[none:TEAM_NUM:nk]' to='&quot;6&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[mysql.41699.488635277776].[none:TEAM_NUM:nk]</column>
            <column>[mysql.41699.488635277776].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[mysql.41699.488635277776].[none:TEAM_NUM:nk]' value='98' />
            <format attr='width' value='117' />
            <format attr='height' field='[mysql.41699.488635277776].[none:TEAM_NUM:nk]' value='24' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[mysql.41699.488635277776].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[mysql.41699.488635277776].[:Measure Names]</rows>
        <cols>[mysql.41699.488635277776].[none:TEAM_NUM:nk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <style>
      </style>
      <size maxheight='1600' maxwidth='1000' minheight='1600' minwidth='1000' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='95250' id='11' param='horz' type='layout-flow' w='100000' x='0' y='4750'>
            <zone fixed-size='384' h='95250' id='8' is-fixed='true' param='horz' type='layout-flow' w='38400' x='0' y='4750'>
              <zone fixed-size='234' h='95250' id='5' is-fixed='true' param='horz' type='layout-flow' w='38400' x='0' y='4750'>
                <zone h='95250' id='3' type='layout-basic' w='38400' x='0' y='4750'>
                  <zone h='57431' id='1' name='Avgs' show-title='true' w='38400' x='0' y='19625'>
                  </zone>
                  <zone h='14875' id='6' name='Booleans' show-title='true' w='38400' x='0' y='4750'>
                  </zone>
                  <zone h='22944' id='20' type='text' w='38400' x='0' y='77056'>
                    <formatted-text>
                      <run fontsize='14'>This team had 1 match out of 1 where they did not shoot any balls in autonomous.</run>
                    </formatted-text>
                  </zone>
                </zone>
              </zone>
            </zone>
            <zone fixed-size='492' h='95250' id='10' is-fixed='true' param='vert' type='layout-flow' w='49200' x='38400' y='4750'>
              <zone h='3938' id='13' name='Accuracy' param='[mysql.41699.488635277776].[:Measure Names]' type='color' w='49200' x='38400' y='4750'>
              </zone>
              <zone h='9249' id='21' name='Alliance' show-title='true' w='49200' x='38400' y='8688'>
                <layout-cache fixed-size-h='767' fixed-size-w='320' type-h='fixed' type-w='fixed' />
              </zone>
              <zone h='9249' id='14' name='Comments' show-title='true' w='49200' x='38400' y='17937'>
                <layout-cache fixed-size-h='187' fixed-size-w='3844' type-h='fixed' type-w='fixed' />
              </zone>
              <zone fixed-size='202' h='13125' id='15' is-fixed='true' name='Roles' show-title='true' w='49200' x='38400' y='27186'>
                <layout-cache fixed-size-w='670' type-h='fixed' type-w='fixed' />
              </zone>
              <zone h='9249' id='16' name='Preferred Shot Position' show-title='true' w='49200' x='38400' y='40311'>
                <layout-cache fixed-size-h='287' fixed-size-w='360' type-h='fixed' type-w='fixed' />
              </zone>
              <zone fixed-size='795' h='50440' id='9' is-fixed='true' name='Accuracy' show-title='true' w='49200' x='38400' y='49560'>
                <layout-cache cell-count-w='24' minheight='267' non-cell-size-w='48' type-h='scalable' type-w='cell' />
              </zone>
            </zone>
            <zone h='95250' id='19' name='Auto Accuracy' show-title='true' w='12400' x='87600' y='4750'>
              <layout-cache type-h='fixed' type-w='cell' />
            </zone>
          </zone>
          <zone h='4750' id='18' type='text' w='100000' x='0' y='0'>
            <formatted-text>
              <run bold='true' fontsize='16'>2499</run>
            </formatted-text>
          </zone>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows>
    <window class='schema' source-height='64' />
    <window auto-hidden='0' class='worksheet' maximized='0' name='Alliance'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[mysql.41704.895000625002].[:Measure Names]</field>
          <field>[mysql.41704.895000625002].[none:MATCH_NUM:ok]</field>
          <field>[mysql.41704.895000625002].[none:TEAM_NUM:nk]</field>
          <field>[mysql.41704.895000625002].[none:TEAM_NUM:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Avgs'>
      <cards>
        <edge name='left'>
          <strip size='158'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[mysql.41699.488635277776].[none:TEAM_NUM:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[mysql.41699.488635277776].[:Measure Names]</field>
          <field>[mysql.41699.488635277776].[none:TEAM_NUM:nk]</field>
          <field>[mysql.41699.488635277776].[none:matchComments:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Booleans'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[mysql.41699.488635277776].[none:TEAM_NUM:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[mysql.41699.488635277776].[:Measure Names]</field>
          <field>[mysql.41699.488635277776].[none:Calculation_3320301120424237:nk]</field>
          <field>[mysql.41699.488635277776].[none:TEAM_NUM:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Accuracy'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card size='37' type='pages' />
            <card size='73' type='filters' />
            <card size='182' type='marks' />
            <card size='98' type='measures' />
            <card pane-specification-id='0' param='[mysql.41699.488635277776].[:Measure Names]' size='121' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[mysql.41699.488635277776].[none:TEAM_NUM:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[mysql.41699.488635277776].[none:MATCH_NUM:nk]</field>
          <field>[mysql.41699.488635277776].[none:TEAM_NUM:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Auto Accuracy'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[mysql.41699.488635277776].[none:TEAM_NUM:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[mysql.41699.488635277776].[:Measure Names]</field>
          <field>[mysql.41699.488635277776].[none:MATCH_NUM:nk]</field>
          <field>[mysql.41699.488635277776].[none:TEAM_NUM:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Comments'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[mysql.41699.488635277776].[none:TEAM_NUM:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[mysql.41699.488635277776].[:Measure Names]</field>
          <field>[mysql.41699.488635277776].[none:TEAM_NUM:nk]</field>
          <field>[mysql.41699.488635277776].[none:breakDescription:nk]</field>
          <field>[mysql.41699.488635277776].[none:matchComments:nk]</field>
          <field>[mysql.41699.488635277776].[none:robotBreakage:nk]</field>
          <field>[mysql.41699.488635277776].[usr:Calculation_7140303175912315:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Roles'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[mysql.41699.488635277776].[none:TEAM_NUM:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[mysql.41699.488635277776].[:Measure Names]</field>
          <field>[mysql.41699.488635277776].[none:TEAM_NUM:nk]</field>
          <field>[mysql.41699.488635277776].[usr:Calculation_7140303175912315:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Preferred Shot Position'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[mysql.41699.488635277776].[none:TEAM_NUM:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[mysql.41699.488635277776].[none:MATCH_NUM:nk]</field>
          <field>[mysql.41699.488635277776].[none:TEAM_NUM:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='1' name='Dashboard 1'>
      <active id='1' />
      <zones>
        <zone forceUpdate='true' name='' type='text' />
        <zone name='Accuracy' pane-specification-id='0' param='[mysql.41699.488635277776].[:Measure Names]' type='color' />
        <zone name='Accuracy'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='Auto Accuracy'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
      </zones>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Alliance' width='191'>
      iVBORw0KGgoAAAANSUhEUgAAAL8AAADACAIAAADa/CVFAAAAA3NCSVQICAjb4U/gAAAACXBI
      WXMAAA7EAAAOxAGVKw4bAAAgAElEQVR4nOy9Z3BcSXbvmdeX9wZl4S1h6EDQm6btae9nunuk
      6dHOSPGkp7cuFPtRERsbLzZiVy+edld2JM2oZ6a9Idn0DgRAwntTcFWF8t676+9+AMkmKXU3
      B9MNslr1+4S6yHszK++/bp57Tp5MSBAEUKHChoAfdwMqlDEV9VTYOBX1VNg4FfVU2DgV9VTY
      OBX1VNg4FfVU2DgV9VTYOBX1VNg4FfVU2DgV9VTYOBX1VNg4FfVU2DgV9VTYOBX1VNg4FfVU
      2DgV9VTYOBX1VNg4FfVU2DgV9VTYOBX1VNg4FfVU2DgV9VTYOBX1VNg4FfVU2DgV9VTYOBX1
      VNg4FfVU2DgV9VTYOOhDn0OhUGVVjbJGEARBEGB4M54LUEUr3zNIkiwWixqNZhPqqoxcFTZO
      RT0VNs7XqEfgyPSFX/7X//7p+OY159HIuq7+H3/1m0Ca/havyaSW/umv/9utldy/O5DnQ0s3
      xhfvfUy6h989c/tbrP3JRODZub5P//b//ev/67/97UwgDwAAdPz0L/76r/7qv/71r2/kuH9j
      NX8JWxi+8MHVCa9xH79pzX0khNLyRKimRuWJJvDg0izXcqgFXLuwYLfCN0fWFAZ5R/fxdpti
      vWxkcXBg2h1Nkl1HTshDU1TtPntuzEGZM0EPTIcSvNUiiUdY2zM/2J9Z8Srr6uKrDrp6y+LA
      pVuL8frdx7bLY2d7J4Cq9Qc9eopinGOXro+6lc17TLHesSm8q140NTjMKBpfeeGIikAeb698
      N8C6+p1vdz8T6H93wpPstMiomHeNaP7TP21896+vxYtHvubZgxhan3rtZDu2eW19JKiYZw62
      vrK/enV6VVKlXZtyRJ2Tfpq5eX1h/+sv44m1RP7LZ1Ix5V3J6Z/ZY5qYmIv71iJZqpTw+qNJ
      59S0+eDTmH8cajiKR0Y84dxSMLa1axfIeUOR4OCMp7GpphAOzk7N8BqrHqT8kcSaLzA9s6A0
      V8PZhKZxS21rK+ucKcmqqtB8LM89xg757oBguMpiFwmFYFHd3WQAALA0zWEYQeAIVyCprxm5
      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
      klRqz1/UuO8m65FvKgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Avgs' width='192'>
      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
      M5Se/iPNAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Booleans' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Accuracy' width='191'>
      iVBORw0KGgoAAAANSUhEUgAAAL8AAADACAIAAADa/CVFAAAAA3NCSVQICAjb4U/gAAAACXBI
      WXMAAA7EAAAOxAGVKw4bAAAgAElEQVR4nO2dV3Mc17muV4fp7ok9OWAADAaBJBgAZgVKluW0
      fcpnH+9ynSrXrvKF73zjH6EqX/kfuHxxqnadfaq8kyTKlhUokhIzGJCJjEGanGPnsC8gobuH
      tNlsEgeCuJ4LFrnq4zfv6nl79Vpfr+lGVFUFEIgl0IMWADnEQPdArAPdA7EOdA/EOth77713
      0BoOCuXqf/4L7x9ZvP5+gwjjCsfWM9OrZdqOtUvb9xazkaDPhmP//n//T6S3d25xxe8LSBIn
      cBzHCyzHT9676wtHVZHr8JIscpIMbDYcqPKjqZmeWEzs1L+6+vG9mY1wNCbyHIFj9VpdRRCG
      YURREGVgs+HIQff/xcEPWsBBgrpduaXpVoPFGqVrX91Q6KiiIOVMKuAAmVL7SrP985+8qQBp
      eXGFY7JXbgJKXC5WAaIKDrdLrJeyjY5YWsuw9qAT/+H/+t8OOym2SyLmAgDYnN4z48dXS46V
      u3+ZWMi8+z9/npm83lAcpJPmRcHl8v/Tz9496N6/BF5p9wDMzRZTdDxe2XzcwTxuGwUkASiq
      LCvR/qTSEQAAhCsYpvjZjlsornOE5KJ7XHbB4yDXSwUMAE+oNxFN5La3w0EPAKBUKIYjA4ZP
      oDwXX0/YWuk64lA4tvf4eKPdxnjhQLr70kFe4XqPKvACACqCoqqq8rxgIwhFUYEsojYCQVCg
      qiRJcBxHELggKrLIIxiOohgCVBRBRFEEmA0HkqCgOApIikIAkCQRQXEMRQAAiizJCoIicocV
      nHaS4XgcRTEboaoKUAFBEt+BK9er7B7Ii/Lca65Op7MfOg4d8DgAC+6RJGk/dBw64HEAh7He
      oyry4uzD1ndk3mmdjcWpm/emBPkgJx6Hzz2Fjfk///WL9ivvHncgWlh5UGrLB6jh8LknOjR+
      7lj8oFUcPDvzd1nvsajnIGsuh889AICRk+c9xEGLOGhUku7zE5xwkGPPc6/YG40GTdP7pOYQ
      AY8D2O+xRxDMTk9kWZZls6eR+bT7p8E8kiQdeNckSVIU5aWn3V/3sCxrMlKSJFEUX3ra5woW
      RdG8BvOIomjePfvUNUEQzJcYzKd9Oe6RJZ7lTR13WeSLxZIgmToPOKZVqTdNXllVReownJlI
      RRIK+TxjTrDIM+VKXTEngmM6srkznGnVy7WGuVmDWquUTKoFAAgcI0imzMq2G4VSxeSSv1Wv
      tBi+q/GluEd+eO3y3bkdM6HVUnZrfWFidtVMcHpz/caVq+bWpGp6YeKjr6bNhJZSsw8eb/Ci
      qbxTE3fXVlc64rOPMdso/cef/l/VlIHB1mbq0e1rxfazxwNVaK0szV+/PWsmraqKn/3Xv6VK
      bTPBEze+yJVNOVjlyzfvzKxvbHe1vxT3YMOjI7g5C4di/W6HYyhhasmdHBpxO0DLRG1HZso3
      Hy0zzZoZRzgCcR/efrzafSyeSjabLmQ3G8yzT307HRqIBc3kBAAMDQ56w/0+57PX2wjhGRlM
      SGLLTNr1qdtFVq7UTAUPDB3ZWZmudp7dNblRyjbb6xtbXe0v58qF2xwuB2kmcnvhwexGgTO3
      RWFpYRaQHgf57EOMUv6f/+NPhwbiZvrDMW2GVwI+UyumY0dHMNLjJDEzwS7ai5s7ol9d+WuT
      E0QT45/C1WcWNwIBU74cOPnGO6+NR/xuM8GNRo1w0A4TXcMDiSSN+/yBrvb9XbGbD+Z5XlVV
      iqIOUAPHcQCAl66BZVkMwwjCVIVqn7rGMAyO4y9dw6GsFkK+JTx3nVtRlEajYTL4uVbLAACe
      757Vv2Dab4MGQRBQFMVxU4d6/1bs+6Hhud2Douhz1Vj348plPu1zBT/Xlct82ue6cplP+1zB
      z3XlMp8WXrkg1oHugVgHugdiHTPuUdfmH92bWjR7kw3yymDGPezCeoXZWqyJ6m5xSP0bKEbg
      rzW+85hZc1EDPc6VtRaQpSbD8Dyfz+fX19f1ERcvXmQYZnx8XN/43nvv/eIXv3ipaiHfLsyM
      PYjL5Th6/oKfstE0TZKm7khAXgXMjD3I4OiZfRcCOYTANRfEOtA9EOtA90CsA90DsQ50D8Q6
      0D0Q60D3QKwD3QOxDnQPxDrQPRDrmHJPNrU4s7wJ75hDujDlntn5ucWFx3B/D6QLM3dJWRmh
      Qzaxzok4z5j8yQHkVcDU/p7hhL8mOryUDaPoRqPBMMy+64IcBkzt0Dg6dmHfhUAOIXDNBbEO
      dA/EOtA9EOtA90CsA90DsQ50D8Q60D0Q60D3QKwD3QOxDnQPxDpm3CM+nnz44OE0d5Dv04B8
      GzHjHnxoJNlsswQcpyBGTN0lrRUzfcPHZElsMXCHBkTD1HiiokQs7LXZ4DM0IAZMPTO1J3ls
      v3VADiNwLgOxDnQPxDrQPRDrQPdArAPdA7EOdA/EOtA9EOtA90CsA90DsQ50D8Q6ptzTqhY2
      08X9lgI5dJhxj3R/4kEuk3n2q8Mhrxhm7pIKlWqn096oj5+0Hc5naKyvr7fb2gvunU7n8PDw
      J5988sc//lEf9oc//OG53uoIMeMex4ljvdkm6qVs+OF8hgbDMK2W9oJ7BEEAAOVyeXJyUh8m
      SXB4fT5M7dA4ce7Sif0WAjmEwDUXxDrQPRDrQPdArAPdA7EOdA/EOtA9EOtA90CsA90DsQ50
      D8Q60D0Q65hyT7NWyuTL+y0Fcujodk9mZermrTuza1ldm3rzy2uNDvv/UxbkUNB9l3RrI5Wq
      q2EJHRvu+aZNHR09Pjv5MBqPYodzhwYEACCK4tramr6lp6fH6/X+7ne/29jY2GscHx//9a9/
      bTJnt3viieRmeTEW79W1KdVy2e4Pu0mb7XDu0IAAAGRZrlar+pZAIAAAuH///uzs7F6jqj7H
      e9i63WP3+MfGTqYz22Bkz0D4+bfetSQY8h3H4J5GYevaF1/kq+3jr//4oARBDhEG9zjo0NiZ
      s70N1uWBj3iCPBuDe1DcJkuIxNXLdftBCYIcIgzuaVeyhUqtN3kq2R8/KEGQQ4Sh3kNHEt9/
      ++L23J2J+dRBCYIcIgxjTy2bmlrNnfvBz/1u6qAEQQ4RBvd4Y8l3ewaRg9ICOWwY3LP7QycI
      xCTwHjvEOtA9EOuYe1a8LCwtrz07DvKKYco9O6tzdyYf77cUyKHDzO/Y+cXlTa5eqXVEVII7
      NCAaZtxD/sPP/ymV2vY5bQDAHRoQDZOzZmxwMLm/QiCHELjmglgHugdiHegeiHWgeyDWge6B
      WAe6B2Id6B6IdaB7INaB7oFYB7oHYh1T7lEURVGU/ZYCOXSYcY8ydffLP13+bN+1QA4bZu6x
      oyfGTm19erfJiyoHd2hoZLNZ/dGw2+3RaPTevXtXr17Vh/32t7+127+bv6404x5pYXbBZrfb
      bDY7CXdoaBSLRf2rd3w+XzQanZ2d7Xr1zm9+85tX2T342UvvnN13JZDDB1xzQawD3QOxDnQP
      xDrQPRDrQPdArAPdA7EOdA/EOtA9EOtA90CsA90DsQ50D8Q6pnZoPLx17b/+/YOWtO9qIIcL
      Uzs0zrz2hjQxjchiowN3aHy7KBQKgiDs/dNutweDwampqbt37+rDfvWrX+3Hp5txj/jJf/xJ
      DQ5juM1Fwx0a3y5yuVzXLpFgMDgxMfH73/9eH/bLX/7SZrO99E83tUPjZ//865f+wZDvAGbc
      Ax+lCnk6cM0FsQ50D8Q60D0Q60D3QKwD3QOxDnQPxDrQPRDrQPdArAPdA7EOdA/EOuaewCJx
      Vz/8153mfouBHDLM3OcCioo4CJzlxUYD7tCAaJgae3AbaacIm81G0zRJkvutCXJYMDX2AABO
      vvUzxGws5FXBrCNwAg45kG7gmgtiHegeiHWgeyDWge6BWAe6B2Id6B6IdaB7INaB7oFYx9Tv
      2D/98N/+5V//U3h2JOTVwox7RMwR7nMT3L6LgRwyzLiHIJF2UbE5910M5JBh6pfI3/vxPwIA
      RFFkOI7jOFEUCYLQR3Q6HZ7n33jjDX2j3+/nOA5FTU2tRFHc+/OZmE+7G4wgiF4wiqKtVsvr
      9XYJliSJYRjzGjAM06dFEKTVagUCga60giDsHh+TaZ+rayiKPqkhGAw+qUGW5a5vTRTFVqt1
      4sQJp1MbGUZGRsxrQFRVNalVVVVFUZrNpsfj2fv43SczCIKgquru5o29RgDAXrCiKKqqYhim
      b3zeDACA3V7tU4bdL/h5M8iyjCDI30m767Pdvz817eHN8By7LhAEwTAMRdFdE+R2NorFkjc+
      koj6UBTdM8fun7t8HaxK66urtVrz5PmLThuKYdhezN5f9jJwzXJqO9tW7BfHRnYD/mZaALI7
      G6Vi0dt7NBHx7vb872lYWa3VWyfPX/g7Gnb/yTVLqe1cR3VcODX8DA2quL68Um2wYxfOOfC/
      mXY3mKkXUukCj7jOnRh8Ztd2tlLVUjEwcLw36NEf9r+jYfzCOfvf0LDrDAzDmFo+lSkKqPvs
      8aQpDcViMHkiHnTvNnYFW1+xz0/eXkplVtc3AAAkSVIUBQCoZdevX/v8gyuGRw8Btnz9+s1i
      bnujyAIA9nz9ePrB53/9aHJpSx+b3li+fW96Y3tj959fB8vMzS+vffT+B4WW4bLyePL20np2
      T8PusFHLrF2/9vmH3RpK167fLOS2N0tct4aPL08tb+tjd1LLtydmUlupbg3Xr330/geFtk4D
      U/jsi1vFwk6myuvTzk7e//zPH8yuZ/VpN1cX7z+aT22uG9JK7a+uXvnwg4/KHcOz2eYffrW8
      nl5NpQEAFEXtXnRKW0vXrl35y/UHhq4x+U+v3CoWuzXMTE58/uf354waNlYXH0w+Tm2sdWv4
      4soHH/y5wjyhIZVe2UgDAOx2++54U9pcvHrtysdfPgAv4p4g7SZJ0u72GjrCdooVzmU3PrKF
      cHqcFE66/G7DdbdVzam4S//oKwAA7fNjJOV3OgwZRDabLdFeNycYXnAZ9LhJinQYNXTYTqnC
      O7s02FweJ2UjnX6X4SFIrWpWtbm7NHh9gadqyORKtM9j0EC43S47Rdpph2EUb1V2AEnzvCGt
      3x/AbYTX5TKmZXayFZ/PxYvGrrldNrvT6XHrG9tMp9YQ7IRxskF43C47RTi6NZTTgPTyguF8
      8wcCmM1GP6FhO1vx+7s1BFxOm93pekJDoylQNhW8iHtESS7VaqqiE6dw05NzsswVy8YN9Ios
      S3yt0RJlTVyztLO0WWw3yrxkUCyKEsc0WqzuuKvq+sJcnRcLpbKqGoNl6Wka5iWZLVVaRg3S
      UzQUd5Y2S+1G6Wka6m1Ol1ZV1xdmG7xYKJZU/StaFUkSuWqzI8raN1rPby5vV1uNkmBMy4sS
      06kznL5rysrcTFuS88UyMHZNkuVytarKsvZRMjM99VgSmXK9Y+iaLEkSW212REWnIbe5slNt
      1bs1CILEdOosr++asjI305GVfKGsGt8+KylyuVpVZG1AUqTO1PSCKDCVegc817ynC0cw8dPR
      WDAY0ppQ8tjRwcfptggwQ6iqHjn9Zn9vLOjRxh53MB4P+zDKjRrHCAQjf/DDH4XDYV0TSB49
      6lqpeRwAGNcCjuDAT0djwVCXhuRitiOqT2g4cynRGw3SOg2heDzkxexPaMDJH/zgx5GwLi0C
      kkePuVbqHgdA9BpU9eT5t5P90aBbG9LocH9PkCYcbtSYF8WpH/7oxyH9EUOQ4dHRifWO2450
      dc0ZHf4fY3F91xDUfnQksVmTBNV4zqvKqfPfS/ZHg7phlY70xwI06ezWgNjsP/rhj4PdGo7d
      W+u47Qhi1OCKjnRrwBxHh/u367IAMPAiYw+FCje/upHKVvTa/MEIBgSXyzDWAZTsFNdv3L7X
      ZDXLIwjaG4uwgkS7DYUkl9M+/+jexMyyPi1K0lEvIaOUizR4gkSeoiEQiqCq4HJ7DBowqlNY
      e1JDPBZheblLg9NBzT+6MzH7hAaakFG7k9JpQO3N3PKNu/fbnKQLRePRCCsotMvwQkm3yz51
      7/aD+TVDWsob8WAqZncQhu+CUNgbN25sFWo6tUg4ElUl3t3dNXszt3Tj7oMuDb2x8JMaPC5q
      8t7th4+7NPgiNKbidrtRg01mbty4sVWoGzXEFIl3u93gRdyTzpaPjiRy+YK+UZIFkRflrtdv
      y50qR8UcYrEj65s5npckSVEMV/FyIRvoHWpXDWmBInG8qAAgS4ZpXSZXOjrSn8sX9Y2iJIi8
      KMtGDVK7xlMxh1hqGzTwAi/LkmIMLhdygb6RVtWQFigiy4sKUBVRl0FqNiRnkOArTFdaTpbl
      Lg2FbDo2eLRRzj+RVlKAqkiGDOlC5Wgyli3qTwwgSIIoPHF4pWZDcgUJrsp2H94nNeQzmdjQ
      UzRwvKSooOs4ZArVo8lYzqhB3NUgv9i8pyca2N7JRaJRrYlv3J2YUm2U02F8iStB+0iuxOBR
      r7a1vpxem1/dcbjcpM1w9QxFYs1i2uPXXblUdWH2YakpuFxO3Di09kSD2zv5aCRi1DCtEnan
      gzJoIL0+oltDKb02v5q2u9wEYZhKh6LRRmHH4zNqmHlYbgkulwvDdNcCyu/FOnWeCOkuyoWt
      5YX13JNdi/b0lLNb3oBOrSLPTT+sdSSXy4kZuxYL+7ez5Z6IdtVQ2NrdiRmUcjjtXV0L0Fin
      LhBB3aIkv7W8mMo5XG7CqCHWEytntrwB3bdm0GC4zMXCvu1sORYJarFM9c79GZRyOOwkeBH3
      5Kqdd966UMjntCYbFR882U8DSTHOI7g67+g7PeDOVtm9NsKGnX/zHa5ZwXHDN1cqFI6cfVNi
      avpGhAq8+9qxaq1tIw3BuWrnnUvnCwXdmWQje4dO9bkVSe3SUONd/eMD7lxNu19H2LALf0PD
      sbOXJKZqyGAPvnvxaLXeMliNrUjeoWM9VLGhlZJJG/ba299v1yu48SG3+Vx+7LW3+XZZ1zEE
      UKF3LwzXm4zN+DUX6tw7r49n9cMqQSZHz4ZJXu6a97Bl2Tt0LEaVmjoNOLqroetBu7lcYfz1
      t/lWSa9BpULvXhh6UkO+wb/z+liuoAsmqKHRsyGCVwAKLLtHVeRET+iDy58mBga01lamJsh1
      JYgJhuMu4O6AnLs+X0qGtTXw+mZW6pQGT5zLZnf0wYFoz/Ldz1BnSN9YKNfTmeLFk9GNvPZs
      YlWR+2PBDz76LJHQa8jWBLkBwihv1IC5/VL2y8flREgbF9c3MlKnOPQUDfHFO5+iLt3YA9Ri
      uZ7Oli4cj24UNA087qXZjYm1ZtyvjQdL61mpmT9++lw6k9H+v6pG4r1T1/9C0jEtqyKVG53t
      bOX0sH+noj0FW1Wk/qj//Y+vJxO9Wmw93RRFBu9VGN3XCQBv89FsamK91ePr1nDizLmdjFbv
      UVU12tv76OpfSG+PToNYaTDb2er4kC9t1JCI+N7/+Mtkv6ZBru80RZG19cmdErDsntW5+w1e
      jfT2F7K6YpSn3yPUjp8YCoR0B0hVb928jRNEIurcqWgnx9GRwRqDxL22nt5+LZjN3VnIUw5a
      ZrWZGgAgGaVdPUckiRiMaoWKldmJlgAivf2FnF5Dn0eonjg+GAjpDpCq3rp1x2azJSLO3ZLa
      LseODFYZrIe2xeM6DUz27kKectIKqx//kIGox9VzRJaJwcg3GhTpxq17BEXFg1S+oa3DT44O
      Vjgi6MD6enXffTt9f7Vqd/oE/diD2hIBytc/qgCqL6idWvMP7/AKEuvrz+W0+R/mHSA7lVMn
      EoFwXMugiDdu3iNIKh4gCzoNp44PVjgiYEf7e7VgubXzYK3qcPmEll4D0R8gfYlRFVB9AU3D
      3IPbvIrG+vqzuqkt7hsgOpVTJ/sD4V5g2T0Ehi+tbZ0aHZL1U16ukS5Vvvris8WUob5pk5kM
      Q/X57foZQ71aKqQ3Pr16q1Jt6HvS3F70J0/hiHG+mc8uTd+ZmF1qtrXrDonji2vbp44NSXoN
      bDNdqnz5xWdLGwYNuMxkWHuvj9KvYGvVUiGd+vTarXJNZ1aMaGwvBgZPYYhhOl/I577W0NnT
      gOBiuyi6YzSB6Z5pXS0XCztrn395p1Jr6tPWUnPRI6dRoEurKvlC/vGjm/fnVtqMZmsKx+bX
      c2NH+hWgpVXZeqZUufr5Z2vb+jkvgovtouSJegj9rKVSLhV21j7/8m5ZpwHBiOr6XPToaUTf
      NVXO5/OPH968P7/aZjT/UTg2v54fO9KnX9UoTD1Tqlz97LO1nRyw7B5PIBSPBHd2spFQQGu1
      B14fH+k024JkqLFGYjGfE80zuI/UutczPNYXJDstRjDc0yZ6kwNiM+fyGgoSF994TeY4tt2W
      EW217AmE45HATjobCeo0OAKvjQ0/qSEai/mcaIHFfZSmIT483hsgOq2OKOqXckRvckBs5Fy0
      NlsECPLa669JLMt2OvJeNQtBorGohwIVgfToutZ/7GzMi7abHVG3jEJQKp5M8jXjggDF3nzj
      AtdiOJZRdF3zhqPxkHcrU4j4aS3WFT5/Ism0OoKo7xoS7Yl6KFAVDRoSx85GabTdaEtPaqim
      aZ++QoZfevMC2+xwLKMgmh98kVg8RG9lipGAVsrH3JFzxweYdkcUBWDZPQ6P34GKuXyh2Ta8
      swK1uU6PHUEQQ1UmFI11qqVisdhVCKfDyaH+gOFB9DgZDXgKuVypYpg1AwQ7MnrS5yb160+H
      22dHhVw+33oODaUuDd7I4GBfwDDBxqlYwF3I5UpVw9UToNiR0VNel14DEonFWuV8sdhd0vX3
      jCTjNNANMwhORf3OXC5X7kqL4aMnTrodhq456QChcrl8odUx7MnDbO7xsWFDTQ9BI7Fos5Qv
      FktC132G+Egy7lX1Gmz2qG9XQ0MfCVBs9MRJt4Po1qCwT9FAeMZPDSPIC8yaKaenzbGIJLbb
      hhsCDjuezVeDPu2MAQjic6BNTpWZVkMwXAtQsV1nVJ9XF4wRssgDWW1xxhepYGSzkkdID+3U
      VhCUi25zLCJKT9UQeEJDg1NlptU0brBFxFaDBV6jBkngEUVts90aWpU8Sro1DQjit6u1jipy
      nbZxU5DKNVoC7qO1sh6CkxzL4QjSZtuGUIxqVPI2yu22a11zuL2MwKos1+wYbko4nXgmVwt4
      dff1EMRvV+vM0zSwjZaI+2itcovgJMuyT9GA2xuVPEG5XU/T0DJqcDmwdK7m93nBi9ypODl6
      alZdTAz06xub1Qrq9DRqhvoScITPnRxezZT7fYZHKZTKFZp2lcsVkNTKD/3JI22WZ2xBQwaR
      qbGKExfrHcFv1xZNJ0fH5tTFgSc0YE5Po9qt4fyJobVstddruFNbLlVp2lmuVEBSK8MkBo92
      OJ6xhQ0ZRKbKKS5cqjGiz/7NwObquTg2lCq2oh7jmr9cpT32UrV2rF/ryPDIMV4URWePPhII
      7RoPXDjbZEWa0o7PiWNjqro02G8IrpVLhMdbr5YNGVzxi2PVVLEdeVKD216u1kGfpmHkyCgv
      SbIzbsjAt+s84rSxLc6oYXRcBUuDfTF9bK1cor7RYL3eMz09FQgFVtc2dG1yUyRcassfjBpC
      ucrUasGLtDYr2hjItUrB+GChUOqJGoLTqYU24s5up3RtaiZdPD4cLbFExGsolM1MTwVC/hWj
      hpZEOtVmINSloTy1VvQgza2qTkOzGOodLBTK8WhEH7uz/riDeLLb63oN6XTh+HC0zNkitO4c
      YApTqapDrmXq2pjGNvKx/uFMvhqPGOoOG8tzIunLbOrvEqhb28XjQ+GGTAWMGxCmpqaCAXol
      pZUSVFXkEDfBl4Nhw9cJmMJUqm6Xa1ndmout52OJ4XShGo8YzsPU0qxM+dObq90ahsMt2R5w
      PaHB79ndofF1qCJyGG3jysFQD7DuHlVJ9kUfPJxNJHTnfXMny9l7Bk8AY61FwtxRqrOQl/W1
      luWFlUAkfPrc2WzGsL8nFOsrrE27A7qTQwWrO/lgOHp+xLee0w25qjLQG33wcM4w9jS3s5yj
      Z/CkyhnGHgn1RKjOYl5JBDUNSwsrgWj49NmzmYxhf08o1pdfnfYE9RrUtZ1iMBQ9N+xL6WpO
      Eu4N2eqpKhr3a5aam12OxaPnzo7vpNP6DLG+xPbCIzrcpzXKYipXC4ZipxLunbLuQqkqyd7w
      xORyMqFbb9c2S5K7b2RcbBvvDuF0CK9u1tAe3dA+O7vc0xs9f3Z8O53RpVVj/YnN+YfesO6I
      yeJ6vh4IxU4mXF0aBuKhiamVpG78k2qbZcnVd2RcaueBZfdsL041FYr2efM53erRGRaz87nM
      tojobjqq6sTNm55Q2ImL+oJEb8w/8WAms7nuDerOJL5ye3rbGwgyDcM9Ji+pzi1trKVrfSEt
      89bCZBtQHp83Z9AQEbNzucy2iBo13LrpCYVdNkGvoa8ncO/+TGZzzaev3POVOzM73mCgU9dr
      QGhCnl/eWEvXe4PfZFblOzdu0eGoA+PKum1rybj/xr2Z9FYqGNKGNJkr3Xuc9wX9hlt4KO5C
      uaW1rY1sM+rTbL02MyESLhftzuW1wiDqjna2pnLpbcWmm6Up0u0bt+lIzIHyFb2GXt9Xd2fT
      m6lQSLv+ymxxYqHoD/pbVd0RQ3EXyi6vbW3kjBqmJ2TK7fK4sgXtQom5I+3N6Vx6W7F5gWX3
      dDje35P8ydvnDTtCMMdbl84U82VgfKGXhODDx8+dG4nq99YE+kePRKhqi0dU3b09mccd9Nvf
      +76L1E3IEOT0628qrYqC4qJuY0qH4/09gz956zzo0vDm6WK+3PVSMRGxjRw/d2Y40qVhJEJV
      24JRA4c7vG9/790uDWfeuCQ3KwqGS3v7rVRVwsjjp86fTIQkXeErNHhq0I81GAkoukKAxBFO
      7/fe+YHhXjqCXrj0FlctKhgu6aoGbVYI9h356aVxRdc11OZ+6/WT+ULV2DVVxsjjp84fTwQk
      XWUmPDiW9CENVlIVrWuqxJFP03Dx0ltstaCiNr2GFssH+478w6VxVXfEUMJz6fUT+UJ1d2lv
      0T3Hxs5sTjWoZaMAAANUSURBVN/89Ob06LFhrVVkHtyf9MUH+mOGnTFnTh298vHllRY1GNCG
      1mY1P720PTwy7PfoBglHbJDuXL78cTgxojWqanp1tsBTgwP9+i0Eo+NnU5NffXZrZvTokF7D
      /fuTvt5kn1HD2VMjVz6+vNayJ/UaKvmZXQ20XkNP0tO6fPnjSLeGmaJADSb6KNs3U2YUO3si
      +clHH+4Irl6vNmNtlLOza9nh4SGfWyvdoq6+uL364eW/9iSP6tIq2ytTFcU1mOijcK1r4+fP
      P779+Rf3V44Pa5cYVWjfuTcVHRjqjerqWyh+5vjAJx99mBY8vbSmoV7Kzq3nhoeHfG5tOMHc
      /T1k+cOP/hofNGpYnqoqnmSil7RpGk5fuDB38/NrD1ZHh7VLrcK379ydjCWH4pEAsOweBLer
      shj00/W6vlKM9w0MSJ1aJr3T6OxVThGPm+JkmxMTm6xmbRthH0zEi7lsOp3R1SkQHEMcHn+n
      YSiKOOhwlMaz2Uy+XNv7DQiC21VZCvo9NaOG/oGk1K5m0uknNTgwsaXXQNqTiXgxl91JZ/Ua
      bBjioP3tplGDJxKh8Ww2W9A0IF4PycokCYQOJ+vSOpJ9sUIum87k9spACIJgQHX7gi1D1xAn
      HQu7kWwmU9DVYBCbU5WloNdZa+iKEagtOZRk66VMOt3UisKIz0OxMkkCvsNrGgjq6RpQoHr8
      XRqA0xsNuUE2kylWjBoUMeB11hraPA/B8MGhQaZWyqTTLVaw6J7Szkq5JbIMwwu6wRkjUJF1
      +CKNSvb+o6mvG1V1bm4eQRSGYWTd8G530Y16Ix4L7szfmtn+pprO1R+vZSSJZzhe+6kQgvjd
      ZI3DfDj/6Y0J+Zvxubi9UmmLLMMI+g03GAFExumPNsqZ+5PTmobZXQ2srHRpqMejwe25m7M7
      33xPXH1+LSuLPMMaNXiIOod7ce6TG/eU3XZFnp5ZwDGFYVhZ98Mmh9vbqDfiYe/a7K2F7NeH
      XmGqixt5SeBYY9cCbrzOky6E+fSre3sZchsLNVZmWUPXEJyU2bY33FPLbzyYefx1qyJPz36j
      QenSUI+H6dWZ24u5PQ2Vpc2CyHdpQHc1OBHm0xuahmxqoc4qLMsIuj1VCE5JbNsXiddyqQcz
      C/8NY3O0OeW4jFkAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Auto Accuracy' width='192'>
      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
    </thumbnail>
    <thumbnail height='146' name='Comments' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAACSCAIAAACc+FKsAAAAA3NCSVQICAjb4U/gAAAACXBI
      WXMAAA7EAAAOxAGVKw4bAAABmElEQVR4nO3VsQ0CMQAEQUAU4/6rcTf+8EUIGxhLMxVcsNI9
      11oP+NVr9wDOJiASAZEIiERAJAIiERCJgEgERCIgEgGRCIhEQCQCIhEQiYBIBEQiIBIBkQiI
      REAkAiIREImASAREIiASAZEcFtCcc/cEPhwWEP9GQCQCIhEQiYBIBEQiIBIBkQiIREAkAiIR
      EImASAREIiASAZEIiERAJAIiERCJgEgERCIgEgGRCIhEQCQCIhEQiYBIBEQiIBIBkQiIREAk
      AiIREImASAREIiASAZEIiERAJAIiERCJgEgERCIgEgGRCIhEQCQCIhEQiYBIBEQiIBIBkQiI
      REAkAiIREImASAREIiASAZEIiERAJAIiERCJgEgERCIgEgGRCIhEQCQCIhEQiYBIBEQiIBIB
      kQiIREAkAiIREImASAREIiASAZEIiERAJAIiERCJgEgERCIgEgGRCIhEQCQCIhEQiYBI3rsH
      fG3OuXsCt/MCGmPsnsDNhZEIiERAJAIiERCJgEgERCIgEgGRCIhEQCQCIhEQiYBILsnPCa37
      SzhBAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='164' name='Roles' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Preferred Shot Position' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAIAAADdvvtQAAAAA3NCSVQICAjb4U/gAAAACXBI
      WXMAAA7EAAAOxAGVKw4bAAAgAElEQVR4nO29aXBc2ZWgd9/+Xr7c9w2JxL4DJLiAWy2qRVWl
      Umtp1fRII/V0t91huyO8/LDH9kR4whG2f0yHw44eh2OiRzEzjmgtrR6V1FJJKlWpVhZZ3EAC
      IHYggUQi933Pty/+AZBgkQAJJgAigcovoliZL++7eR7eyfvOPeeecyFVVUGTJvUCH7YATY42
      TQVqsieaCtRkTzQVqMmeaCpQkz3RVKAme6KpQE32BLrxP4Uv/9//5m9xFHrjn/5li0787//l
      X//1X//LH/67v1MA9Gd/+ic/+tF/UiHkr/7b/0aDQocrbpNGY3MEggn9//Av/oWZVHKl2q9+
      +Y8kRZVSUdza7qKFzz8f13p7TUgxEC0crqxNGpCtR9hvfvq3ObLTT2SmVjMSW8yItAOtJLLV
      1v5RvZhNFzmCwA9R0CaNyaYC8eXE1GreqZWrhOdf/+//y9jZM/2dHpbnvb1nB/wmjufbhy91
      u7SHK2uTBgRqxsKa7IXmLKzJnmgqUJM90VSgJnuiqUBN9kRTgZrsiaYCNdkTTQVqsieaCtRk
      T2wGU8evfpSsQm+89tKD0dKrVz+/dOni4cjVSPzy7/5f0twWKjBnOj02T0smVzRRMIRhQFZr
      HC/DmFQpdJ84c/Pdn4mYzuDrJ1SeBHyZ4W0ORymTtrtcySIzdmLgsK/jQNhUoJnpu/mK3N3u
      uHXjTv/I6NLMlM3XVUwlJq5/uhRKXrx4/vInn44MD96envd39WQCcxfe+HaL3Xi4oj8zULN3
      cWGxzUtPL3LkeqrCVrtdehnF+BJT4rj2zq75xVWNsxPoHIXAREkkyuVsm9sBQSA//mGaox25
      UqLInDkxcCxH+81Qxt/9x39npNBYUe0b6QpMzFKudokpUTicDy+kBfJkd+tn12+cPXvB0X0q
      HZzQAgbzjL5yfuiwhX9GZLNZAAAMw5VS0WQ2JbMlsxYHuI4tpXFKq9Gb8smop7WtXCzgiMqK
      aqFUtZj0G0N5pVS0O+yJTKm91XO4V3FAbCpQLBxkFayjxRlYCfo7u1PhVZ3Nw9fKOg2+Fsm0
      tToTyQxFURqdSeAq1WLB7m3TUl+W4DzHcel0euO13W4nSfJw5WkomsHUJ1MqlWZmZjZeDw4O
      JkJLqt6GcFUFJiPhQHtbWzydt1psOI7TBBpeX63IqllnMht0tE4vCQLH85IMSBw2W5205rgp
      H3rYAhw9KsXcYjgVG//YNXjBRMM//+mPv/nP/vz6p+8ipNFks0x//ulL3/necnAFEkReEUih
      XIQJSES1BrS17eSFU8ftuX8MR6BwMDC7GDh5+pzLbt6XDh8agWAgswpUy8av3p598/VXIABl
      02m7y53N5igcESSJ1GhEUVFEjtbqRFGgaDqTydMEqjfbdLRmX0RqHI6hAgEALl++fHqg7fpc
      TKsh1EqijBClWBXGJFKr//obXz1s6Y4Vx/YRxlWLFU7EIFaLUUKl5PC0EoTA83wdXUUikbff
      fnvj9VtvvdXS0rKvkh5tjqcCjYyMGI3G0+qKyenLpRN+HY3ABAyriqLU0Vs0Gv2bv/mbjdfn
      zp2r5uK7MaLj4bULl54vl0qBlZWOrp52f+u+XmKjcDwfYfvL9evXv/vd7268/tnPfobwhcWy
      dN+Inr8z8agRHQ1G1Go8kKwODPZn1hZFwvpf/+VfHO5VHBDHcwQCACxOXKmQLWf6/U9sWcvH
      3/7173tPvTA23LmbnntPjLUqUK23/ert2UsXXnruwley6fR3/uQvNozo4Z5+UqNpsbooHPoK
      QHhBgoeGOPHY/kqP6wgkffabt1nb0GvnnhyBYirFaGhpNir/8RsXnoFkx4xjGZ8BAKB9/d27
      bCrzlb//xw9Pndht+yYPclxHICCwlaoIm/X0E1tWitlwLGW0OjwO6zMQ7JixqUC1Wu2wJWkI
      SJJEEOSwpThKbI1AxVigRrd6jI8LkQps5c7NazLtOnNymHjE/r7/KU2gJ4f7D0jibVEk/uPP
      br7y0vMKX752e95ksTHFBEQaTp/YJnRQK6anluIXx06kwqvribTd6Y7Gkxars69r+5m2KtU+
      vTZzust4M8xV4/He3vbevt4DvqAjw5YWiFzl7vKdNVpCFTPPZ8v5DC+pNEF4ujqC03fsntai
      hOsp0m8z8Pae65+8Z6QRXdfz4Tu/TVex86d6rt9ZunjpYovNwNt7wpMffxxbgQi93mbOJHIE
      AeEYkYinWlpcY2NjB3EZtWpVVmQAQD626ugcSS59imFesVLctjEjQiJXAgCsxdPnxgb+4Yc/
      O/9P/3J95nOwgwLN3Lqxsp4b8utkVZEk5pOPrzHZ9Z9/MnOu254ulX3tvaH16MnB7nfffc/R
      MfxXf/bWQVxgw/IFI7pncFRmK6LAMiynN9tavC0+u2FlPe7z2Cs1rmdgVObKGy0prdHnstcq
      eR5oB3tal9eSgz2tS8srG59qdKZun73CwO1+G21xAxXUkqu4XgMTB7UGTWe0kBgMAKA0dKVU
      BBAlycxOjW0228ZiHRxSi8WywWEvl/IA2smjoU7MzGmk3PW7QZ4VJAnYbPqpu1N8qVDlkK+9
      +ZVMNqcoqqrKkizb7LYDuLiGZusRJrAVGaF5plwrF1DaSCAQDMEIpEiKWiiWaJrWGiw8U6Yw
      WMG0IlvV67XB4LrZai5kkla3PxsPWT1tuMJtfEqgoMIpRosxG10njXZV5EgUUgmdBj8oC6NY
      LGopjAdEJhK0evzVfAKhTDazfqfGMAzTFL4SjHR2d6yvBBwt7TSJHZBsx5hNBRIE4bAlaQhQ
      FIXh4+raOBDuVShTlGJs6f3x0JuvvSQLTK1cACghKVAoMN/S1s2lku7RoWwk1e5zrQbD/o52
      FG6sUmVrgYVMOunsHXNipc8mQ3otxRQyEKl74dK5RxtH15Zmg5nXX760Mj9VYhgI4EVO0dH0
      mZMDx9WpcXBs/dooAvNY6ZVEaXpmZm4xMDc7EwoGFEUlpfxysnL104/TkYV3//DJWixRZsRD
      lHhb2rr6tBSlJbFyNt0+MCowCVrvRcD2crpbu7Q4AAAUasKp00Mrk5M9I2f5Wv6ZSnxc+MJw
      jRB0Ym2R4WWKIg1GIwxBQJHC8ZyOwkwWC0mbent7TZQSiWcOS9ydmLl5eb0gQEIV1VlWZu5g
      GmelFJZ2iPRtPKTKlbKRwsbHZzpPnlicukHQpmcr8jFh0wbiOO6wJWkIMAxrOhKfii+EMiKh
      FUJvs5sNTzpLjYaClMlhMWgBALVymdDrH/2xV4pFymh8NuF+SWDX49kOfwsA6vpqwOz2M4Uk
      TBq3nYWVC5kio/g8DkXiA6vhju7OyOqy3duchdXD1v2tJZcDWeCXc4ArxVJFh82YzBQcNmOF
      BypTII12qZpXcF1PR+vi1Lje15eMhpWaNpIqwCxr6fKlI6lWjz2cYfSooGBaChZvXRl/9Z9/
      b/tp9H6TTKT4TCRudRlqwbyqj9y5BkG0ooRtz116tPHM/DIBVJvLsTAx0dHt++idX3tPPjd5
      5/ali+e37fwoxnlEUcSwXf0eJEkyGJ44ZOzIlgLRzi5n8vatqaTbYXr+0qUrV66c6rK//cHE
      62+c/HQuZzMyFMQTRnRlaS6cZV45odPC7smZmTNd9rc/WLfK4uunut757eX+51+e+PiywWGh
      CbTN565brKfF2+pfKcaLuSIu17S6lmqcQTGLIrPbNkZghIJERgKCAgwGXTGZ6tOb8vKOMwOa
      pgEAxWLRaKzTEfrEcx9sUK1WtFpdrVbb+N76ePzpiUjIYPcK1ZwIUzSxp3F36xFWzcXmQ1kE
      RfS4WuMVFIGYWhXHtN0nuqduTFA6owaVSqx69tRILZ+cCyUVBVg0cKFcxTEtrkeZQllHU1pP
      b3zxtoppaVQOryVe+NabzyYLYS2wUKnWrG6/joQnpxctNkc1H4Mp05mT28TCpifHS6w6PNjL
      FlLriYzd6Y7EEla7q7/Lv1P/hWT4o1vzb33j9Tpkk5nc7y/PdHe3lKJrKZn8+kuXYoH5uVTV
      a9LG15aA3mI2mPhcBNU7BVXJRuIdnc7lUElDsHwNvP7NbxB1mWSPV6BiNhrJCCJfFjl+aHhI
      o6n/Lm0qUH2LhY8fEARB0PYurrt3p0ZGTtTRZ2QtUCwVWRHgEDofTXzz1ReK8fWEhMGVbCKa
      bhnqx2rpkqgFEsOKklor692eTDRt85jLidSpl9801JUA/HgFunr5o9bOQbaaFRS8vdWzDwrE
      cZwqC3PzS7hG193hf/w5qsTPLwYASg70fmENaCwW1uks+l0swdl3aqX8SijS3T9EIdL09JzZ
      0cIWk4DQd7X7Hm0cCa0UGHm4v4cpZhaD0Y7urtDKstXV5nGYDnQWJrCVWKbybJ7su38CMgyz
      FwXasoHYQiIYzw/1W1aX5qu8QqCgWq3iBAlTOiafofQmoZrX2zxdbb6piYme0XNcPh2PrCUy
      eYNenytUKI2WYxI0WqwIvNFs6935cXAQ3JmYMBkNFVbgS6uEoysaGkcQq1yKb6tAyXReAyll
      CSwH1kZHu3/3D+8Mvf5PIst3PI5t3NZ75AsxIoTwOIlnEzWSJGmXXySKe3ILbzkSIdL44oXR
      6cnJRL44MjyYL5b7Wy2z8zG3FY3k+Xy+oKU1qWQ6GFiocSKQ+LmJzy9PhU6cHFmdvcNJajQW
      AUBem5uuyli+kNuLTHWA4pqBdtdqeLMEggpUFag7xSXUzf82/91odkBBDEVRFEUpFArKg8jy
      2kqAF2VFUcrl8saxjRdstVq4d2SDSjGXzpfWQ+u5dCJbKK6srGVT8VKlsrIaymeS+UIhGIok
      outlhi+VSolIqMzwypPgqiVWUAqZZDyV2+OFbz3CJL42vxTU6IwGEkpkChazMZMv2U0mS4tr
      bXaWMFilal4ldN3trRuPMEkBHX53YDXs9bqj0ThKac06BMhEvpgx2T1e5zNdHlouZMOxpL/N
      D8FIYGHB6vbVcnGYMm47Aq0HAyVO8XtdiMwtBqOd3V3BwLLd2+6x7/8jjOM4mc3/4cpcV6e3
      FF9Ly+QbL1yIzN9FvZ1wtTgxv4yLFWtbF8GUFzJ8rwOdmY23DrfzuZKMUWajYWSw7+a1z3BI
      WM9BOj0u5UIq5e8c8gdvf67QbTBadVpciiK2+lzr68lsoWAzkaJEnz49yLIsRVE7STXz+Xvm
      4dcLqxM6q8thNdU9uwT3FUiW5bq7OE7AMLyTEV0fHMdFQ6ulSpEVIRwgi/Hk11+6BPjqwnoK
      FdlYTbYgHGFtEVIrRdShA3m2Auk9JiZbQgw2p5Hs6OhcXV6o1WqFYtXm8aIysx6rdHY6a8V8
      vKi02MhatcYoJK5U2/tP5FMxma8ghN3TYkdh6DEKlF1f5GgfxKaKNbnD790HBQIAsLnw1bmE
      ToOPDnSFk3mf0xxJFZxWY6FcxVSRMNjEak7FdXaz4bPPPhv0WT5azLs1qgQkn78Hg9X56cmx
      517MZPId7a3PPlK/vrIQCoX6zr9qlNKf3AnqdRSTz0CU7qXntynRd+2zjyus+vJrL6/NThRq
      DAzhBU7W09qxAyid8WCMSGCriVyl1eva5blstRSKxJ0en+np5yWPH4EeknAvCrRlRBN6K8zN
      F0TtzdsTI0NDV27cGWgx/O7difPPj354ZYrEEQ0stHQP280GhxafjLMtZgIoClvlU6vLrIYk
      aP3E55/iBFIQsDO9z86FuEFrZ18+GeNYrlRKdg6dic5/QBvaeD67bWMY03hxvsCDfI0fGxv+
      6b/9yfM/+KvVycsHIdiD7mAMM3XqnyJki5msw6Y6LQFJknbvia7vKzbYMqKZckFncZEoIFA4
      GAoTKBRK5PS0Xm/UWoz69ra29o6OUHBtZWnO1eZLJfM+I8UiGq1Wh8OwBAAKZJTSkbTZ6ziE
      2olrgQWEpKqlIqqzLt+9hVOuSmF9p2i8xFejRRHmy0YKv3njbvep0bmJa4R2f2rBPASCIAiC
      VCoV5BFK+XShwj56/F5jmON4BEHikbVUroggCMuwCIJwHPfoKY8CQdBOHzFMLRUP85JaKWbz
      5doeF9Ad27ywxoHJrv39b8eHTvRkl2bzlOUH33i9lov96DdXOrQsZx8SVm9xxnYXxTKIQ6mE
      nS3+uelFZ0eXXSOvLARRowfDWLfLVVgP54BJKwTXCkSPV+vsOjPc7X3Ml+7kBxJ59tadKQ0t
      yYINwXlZEPoHBvbHkQgAiK0Hcb2VQIBefy8GqiocL5Ikce+dFAwGXS3tGgIFAJTL5a2WD1Aq
      lfYSn6sDWWDDiVxbqxcANby2anb6mGIaJvVW0zbiVQrZIqu0uO2KxK+uRds72yPBFbu3TUOg
      B+FITKdTVpN2ZTWCIdC7Vyf//E/+CPDV6bW0nZQkrZVNRCCDy66HIrGcwUAJAtQ30Dl/dxaQ
      FKXyBQ5x2Y0tXvfMxG3c6KIRJp3jaQ2uM9vdjy2f9RhHYjQa5SpZ3NCCKhVBJewWw/4oUC0V
      uB2DfCYkvh6k9JbODt/q6rpNj05HOa8Jszh9Hof51vWrg6Nnw2shElVZBasWc26nJVcRzTQs
      IZpKPmNx+phCYmoh+Na3/6humeogFg5XslFD95ieWVup6JjUMgRrFIW/cGGbdPcb16/jkNp3
      9sLSxM22zpbxqxOekQvF6Mr582ePzXqgQ/BE045OR2riznTabTc5KOHdz6b/ydcv3fjDO1pT
      Ry5fpOjCQrkoqbCGwF0ux9zcHKmqLIavR5NePXxjSbrURgVqcHVtBkBmh/VZr+7z+HyrpUQx
      X8RlhtZ5akkGhc2KvP0qORhGKEhi5c1ofCmd7tUbC8qBrNM9rJV6giDs8pcgCMJeFGjLgKrm
      k1UZ72xvNRuNhEbf3+Gemrzr7T6BQ4rFYpIUqK+rvc3rmJmZCcczNIGKhMam0xm1VKIGd7dY
      LJ52HaoYTF4CrjHCngz7OgitLLEKZiQBYfEmV6aNtm6gFEnt9ua8hkQKKo6w5Vandfz2/OlX
      Xl6fv212HGDdsWAw+OjBtYW7iXz1oYNMITk5PVfjN/+AyXjw9vhELJUDAFSrVQBAMpWsWwym
      kFpdXVsKxQLzk6l8NRpaDUUSdfe2weYjrL7ab8cPDMP2N62H4zgmt/7z398ZGO7KBeYLlPm7
      X3uVycf//t3P22iOsw8IwTu80e8kORaxy5UIgcKwpVeHVrhcrCobCYNayQMTIRUhkqyFU7LD
      bhAz4fS3/vQvtI+dpG/rB5q/fXklj9ottAZnJMGK4ZwoSP0D/fvjSFRlfmZ2EdfotRTm9d6z
      8CU2UeBdts0vYMv5QCim0Rs7/Vu/V6mWjxdFm81G4YeWUVUt5gLBcM/QiAaRpqZmzE4fW0gA
      Ut+z3cqCcDCQZ6QTg321YnphJdLZ0x1cXrJ72r3O/Z/JcxyXSactJjq4FkMR8Ifr0z/44zcA
      X5sJZeykJNFWNhUBeqddB8Xieb2eglTF0tLN5qKCrKRiaXuLHcdNVlqdC6WNGC8TVgQwlUKl
      Z3iUfOxi4e0diXxlKZpTFRWXq6jBg0plGdHYzPr9UaBaZu398bUTA93h5VkMJ5zellwhT6lC
      MCeatER7Z4/Xably5cql555LJZOVfDpfqhrNlmqlQMBQpiZbLFauVnR4O1tdB+JQeTyffPC+
      2Wx0do4QpUACbcuv3UAQqyzXLl7cxhN94/oNGlZaT11YuH39zJm+X//knRNvfi++eGvbxnvk
      sGygZ+aJ3hozYNL8ynOnp+7cwbXGVit1bTp06tRoIRM32lwkoiai63NLK6qqspXiR5c/T+ZK
      Q22Wifl1VWTC8ZTIVidnlygNmdnDE3ovoKRmqNO1sp7afK+qQAVgRxeX+mDwXb0Xjj8IwUiS
      JEmS4zjyEZhKocpJDx0Uuerq6qqowjisyhC69QEKra6uSgAhSVKUJJIkZVl+tM/74Dj+mE8f
      armXC9wagSS+OruwSutNFAbrCVBV8EQs2t7ZHo/GRFG0ODwtLhtbKQTWojBOOvREJF1020yJ
      bFaD4ShBUlpdMhr1d/ebdYdQzb+cz4Siifb2dgiBl+bmrG5/LReDNcZtH2GhlaUip7T7PLDE
      LqxGunp7VhcXHb4Or+NAxs5Hl7SKbPndT25omBjafhHNLPKU3UhIFR4HfFrv6kXEssyWCsVC
      XqLNWgxRFEDSRri6UoC1KkdZHXg1mUesOBOvCuQ3vvU1dLvQ407T+GIutZ4skGpN7+qRqylO
      Jdx28z74gfYYEDk2wDC877nxjy5pFYqJj2eirSQrmH2VlTnI3uU3SvGCqqWAq6WdLRcEropB
      ylpOancbIqFIUVDabBRu77Oh1dlIjqjFgb1PKxWSyfyl117XbDdb39EPpCrTM3OyWtx/T7TE
      FO7Mh2AY0VH4VgElvrScYLv9zo13MzMzWlzmMYdYy6IY1tfbWy6Xk8lEd3dP3RLsC+HVpWSm
      0Dd6llarNyYXTWYbU0xCpH50eJsim/Mzk0VGOT92KhMJRlJZq90ZT6TMVkdPh68xl7Tu5PF/
      DJVKZdtfgsDWAEGLtYKK0JAqqoqqoTU6ne5pRbrPlikvy1I2nXS2tKfj66nIKm5y4YjCl7J5
      EZ+eunP+/HmPw8wwjCThshyVZTWdWA5HkyY9Fg6nc5mkKMinLr1EH1Jqnq+jJxX9AyPIQiZk
      bx9KB65gmGenAlNVRjRBUkEEoUTm7Jn+X/x/Px/7zp+HZ6+Djm1Wn+0jOKVr89Vzq55WewAA
      O+nE5rCk27d165sKBEEQQMivvvG1pZm7tNdv14DpGHvu7MmF29f0pk4LVk0motVq2Wm1sABG
      hQJE+40moyiKOIbRGmO5mNXrdWDHjIZ9ZtupzfDoaKRQsNEmGlUcTh8MaRWV3Na/ZbNZcUhF
      ZN5qs/EC6BocJIDgcDp5nkfRY1s4+4BoRuOb7IlmMaUnM3fn6o9/9KNofvs810dJhQMF5ssy
      KWmO2E/m7nLkBz/4/trc7X//q3mn0zw9uQSjCqIx+QxQMlvAcbK9b+ja5U9a+k4xsVkJMfts
      imrqXhy/9pf/3f/oMu3Km3d0aSrQk7GQ0I9//COnw6FCEACgtWsYhyoAAjzPP3fKARu8S6vr
      sizbbPaK4rfjhNZNh4toh0u/HIq5TLvaf+Po0rSBmuyJpg3UZE80FajJnmgq0CETDCwEw7FH
      j6sSX+MlvlYVvlg3pVwuZ1OxtXD8ofaVahUAUKvVatUvLFJ7uDqWItVYHihCucJKPBNcjz5G
      tt1U1rpXJ7qS/ulvr3/7q+dJo6Wcy5WKBYPZWshl2zp7sOOwRLhxyaxOVDW+qx++f/bcmUhg
      oabSZqv5ubHRyMqisbWntHx7MiGZKaWQCXvbR+LJdC0XtXk7/EZkNlGiEbWi0B69UuEgHQ0V
      MkyyzLiNuNZmKq4nB7/yhtuILSwE+vp6rn32h0qJ93b3JQKTSV432mOemlgztrRcHOmJJGLV
      bCJVRcxWrZRNVoBBg9dkAYiaJ8RrN9ichV27fLmYy+VLuau/edfu8Xzw+9+fufhCMp76z9q6
      MKQ5Sh0gGKkjENXX3lUu5DEMsdF2rZkCACgYpcMgjqYxuKIzGXBEBnwVxnGHzaxCaqoG3Daz
      ntYuheIQhEEoqafE9SrjdDoBlwcAOBx2QZSlaklv9wEAjFaHFivE4mmD2cZXVBXCujtbBEIX
      XAsBDAMA2Ex2rRlFEQWq4oSOpiSeoSxaA5xM5gUFoDsPIhsjkPrub37ttptZ0s1k18+PtP3t
      T9/r7eosZBIvvPmW13II9X6aPDWKUK7Jet2zdjttM40XmOJ773/cf/pSZ4v9GUvTmGwsBzts
      KRqUph/oyeyx3uXxpmnfNNkTx1OBIitzt2cDhy3Fl4Jj+ggrRycSwt1PP3L1DsfmJmlvi8Nk
      +spzde7q3XyEPYZjGkwl9C4bQE6NoGa3nYIM7hbNMb3QQ+eYjkD7SnMEegybP8xG3g6Cq5Xm
      ApFBv/nDW8HXv3pJ4nmCIA7iixRF2cvy8i8nmwrUyL8wmqbxYBiWeQ1tUBAEhuH/6+PQfGJz
      +9+f/Rfb75Byn+/+8PrGiz6X/n/9o4GH3j7YspF/RQ3L0TAN+vv7EQQa7C4YSbImy/OJ8o3g
      bjcYvN9y41n90Nsme+RoKNBGXgtNN58vDcfx9AM1eWY0FajJnmgqUJM90VSgJnuiIRVIVcrl
      SnOSdCRoRAUKLc786hd/H8o3yzYeAbYUSGArrKAAIJXLm/60crkMAFBVeTWwVKgwD56mCGyF
      FQrZJCft/0hhcTgddrfu8CouNtkNyWQyEY9s+YFK8cBEXOrv8gFODK4swJQxtDTV0XuiVkj0
      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
    </thumbnail>
  </thumbnails>
</workbook>
